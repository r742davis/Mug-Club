{"version":3,"sources":["css/Modals.module.css","css/Navigation.module.css","containers/Test.csv","components/DeleteIcon.js","components/EditIcon.js","components/Customer.js","actions/modalActions.js","actions/action-types.js","actions/errorActions.js","actions/authActions.js","actions/customerActions.js","pages/Search.js","components/Register.js","components/Login.js","pages/Home.js","pages/Navigation.js","pages/BeerDisplay.js","components/Backdrop.js","components/BeersList.js","components/EditCustomer.js","components/NewCustomer.js","lib/BeerTypes.js","lib/TypeMap.js","actions/beerActions.js","components/EditBeer.js","components/NewBeer.js","components/RenderModal.js","containers/Container.js","reducers/beerReducer.js","reducers/customerReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","store.js","pages/App.js","serviceWorker.js","index.js","css/Customer.module.css","css/Search.module.css","css/BeersList.module.css","css/BeerDisplay.module.css","css/Login.module.css","css/Icons.module.css","css/Home.module.css","css/Backdrop.module.css"],"names":["module","exports","DeleteIcon","props","className","classes","DeleteButton","onClick","delete","icon","faTrashAlt","EditIcon","EditButton","edit","faPencilAlt","connect","state","modalOpen","modal","CustomerCard","completed","TitleContainer","Completed","CustomerTitle","name","first","last","CheckIcon","faCheckCircle","CustomerDetails","clubId","Span","calculateCompletedBeers","beers","length","ButtonContainer","openModal","deleteCustomer","modalType","data","type","payload","closeModal","returnErrors","message","status","id","tokenConfig","getState","token","auth","config","headers","Authorization","fetchCustomers","dispatch","fetchCustomersBegin","fetch","then","res","json","customers","fetchCustomersSuccess","catch","error","fetchCustomersFailure","createCustomer","newCustomer","axios","post","err","response","actions","uniqid","require","Search","search","updateSearch","event","setState","target","value","customer","swal","title","text","buttons","dangerMode","willDelete","_id","arr","count","i","finished","filteredCustomers","this","filter","mugClub","toString","number","strings","toLowerCase","includes","mappedCustomers","slice","map","index","key","email","username","openBeerModal","toggleCustomerBeersModal","Background","InputContainer","SearchTitle","AddIcon","faPlus","Group","Input","defaultValue","onChange","required","htmlFor","Label","CustomerContainer","Component","Register","onSubmit","e","LoginContainer","Bar","Button","bounce","toggleReg","Back","faArrowAltCircleLeft","login","password","body","JSON","stringify","register","clearErrors","Login","toggleLogin","preventDefault","user","onSubmitReg","newUser","prevProps","isAuthenticated","Error","to","Container","Title","home","BgImage","logout","Navigation","burgerOpen","toggleMenu","comboToggle","hamburgerMenu","hamburgerList","hamburgerItem","navbar","list","item","link","NewButton","Logout","hamburgerContainer","isOpen","beerList","beer","ListItem","dense","button","ListItemAvatar","Avatar","alt","brewery","src","url","DisplayContainer","BeersTitle","List","Backdrop","React","useState","checked","setChecked","mappedBeers","currentIndex","indexOf","newChecked","push","splice","styles","Item","NameContainer","checkForIcon","ListContainer","handleSubmit","CancelButton","updateCustomer","customerURL","put","EditCustomer","customerId","customerBeers","updateCompletedBeers","checkedArr","updatedArr","k","h","checkCompletion","handleInputChange","a","updatedCustomer","console","log","ModalContainer","Grow","in","Modal","ModalTitle","ModalContent","Form","BeerLabel","BeersList","toggleModal","info","NewCustomer","customerIdCheck","enteredValue","ModalForm","formNoValidate","beerTypes","PaleAles","IndianPaleAles","Lagers","DarkLagers","GermanBocks","BrownAles","Porters","Stouts","BelgianStyle","Wheat","Sour","Specialty","typeMap","Object","entries","label","split","join","fetchBeers","fetchBeersBegin","fetchBeersSuccess","fetchBeersFailure","deleteBeer","updateBeer","beerURL","EditBeer","breweryLocation","updatedBeer","deleteBeerAlert","Select","createBeer","newBeer","NewBeerModal","beerUrl","placeholder","RenderModal","NewBeer","existingCustomers","saveCustomersToDatabase","customersArray","table","loadData","exact","path","Home","initialState","loading","showEditCustomerModal","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,MAAQ,sBAAsB,WAAa,2BAA2B,aAAe,6BAA6B,WAAa,2BAA2B,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,sBAAsB,UAAY,0BAA0B,OAAS,uBAAuB,gBAAkB,gCAAgC,WAAa,2BAA2B,aAAe,+B,+DCA3gBD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,8BAA8B,OAAS,2BAA2B,mBAAqB,uCAAuC,cAAgB,kCAAkC,cAAgB,oC,4DCDlUD,EAAOC,QAAU,IAA0B,kC,+NCa5BC,EARI,SAACC,GAClB,OACE,4BAAQC,UAAWC,IAAQC,aAAcC,QAASJ,EAAMK,QACtD,kBAAC,IAAD,CAAiBC,KAAMC,QCKdC,EARE,SAACR,GAChB,OACE,4BAAQC,UAAWC,IAAQO,WAAYL,QAASJ,EAAMU,MACpD,kBAAC,IAAD,CAAiBJ,KAAMK,Q,OCwCdC,eAJS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAME,MAAMD,aAGVF,EAtCE,SAACZ,GAChB,OACE,yBAAKC,UAAWC,IAAQc,cACtB,yBACEf,UACED,EAAMiB,UAAN,UACOf,IAAQgB,eADf,YACiChB,IAAQiB,WACrCjB,IAAQgB,gBAGd,wBAAIjB,UAAWC,IAAQkB,eACpBpB,EAAMqB,KAAKC,MADd,IACsBtB,EAAMqB,KAAKE,KAC9BvB,EAAMiB,UACL,yBAAKhB,UAAWC,IAAQsB,WACtB,kBAAC,IAAD,CAAiBlB,KAAMmB,OAEvB,MAEN,wBAAIxB,UAAWC,IAAQwB,iBAAvB,aAAmD1B,EAAM2B,SAE3D,0BAAM1B,UAAWC,IAAQ0B,MACvB,wBAAI3B,UAAWC,IAAQwB,iBAAvB,oBACoB1B,EAAM6B,wBAAwB7B,EAAM8B,OADxD,KACkE,IAC/D9B,EAAM8B,MAAMC,SAGjB,0BAAM9B,UAAWC,IAAQ8B,iBACvB,kBAAC,EAAD,CAAUtB,KAAMV,EAAMiC,YACtB,kBAAC,EAAD,CAAY5B,OAAQL,EAAMkC,sB,iBCpCrBD,EAAY,SAACE,GAAD,IAAYC,EAAZ,uDAAiB,GAAjB,MAAyB,CAChDC,KCsBwB,aDrBxBC,QAAS,CAACH,YAAWC,UAGVG,EAAa,iBAAO,CAC/BF,KCkByB,gB,iBCvBdG,EAAe,SAACC,EAASC,GAAuB,IAAfC,EAAc,uDAAT,KACjD,MAAO,CACLN,KDiBsB,aChBtBC,QAAS,CAAEG,UAASC,SAAQC,QCiGnBC,EAAc,SAAAC,GAEzB,IAAMC,EAAQD,IAAWE,KAAKD,MAGxBE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,KAS7B,OAJIA,IACFE,EAAOC,QAAQ,gBAAkBH,GAG5BE,GC7GIG,EAAiB,WAC5B,OAAO,SAACC,EAAUP,GAEhB,OADAO,EAASC,KACFC,MAAM,8CAA+CV,EAAYC,IACrEU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,OADAN,EAASO,EAAsBD,IACxBA,KAERE,OAAM,SAAAC,GAAK,OAAIT,EAASU,EAAsBD,SAIxCR,EAAsB,iBAAO,CACxChB,KHlBmC,0BGqBxBsB,EAAwB,SAAAD,GAAS,MAAK,CACjDrB,KHrBqC,0BGsBrCC,QAASoB,IAGEI,EAAwB,SAAAD,GAAK,MAAK,CAC7CxB,KHzBqC,0BG0BrCC,QAAS,CAAEuB,WAGAE,EAAiB,SAAAC,GAAW,OAAI,SAACZ,EAAUP,GACtDoB,IACGC,KAAK,8CAA+CF,EAAapB,EAAYC,IAC7EU,MAAK,SAAAC,GAAG,OACPJ,EAAS,CACPf,KHhCuB,kBGiCvBC,QAASkB,EAAIpB,UAGhBwB,OAAM,SAAAO,GAAG,OACRf,EAASZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,cCpCtD2B,EAAU,CAAEpC,YAAWC,eDkDC,SAAAS,GAAE,OAAI,SAACS,EAAUP,GAC7CoB,IACG5D,OAAO,+CAAiDsC,EAAIC,EAAYC,IACxEU,MAAK,SAAAC,GAAG,OACPJ,EAAS,CACPf,KHvDuB,kBGwDvBC,QAASK,OAGZiB,OAAM,SAAAO,GAAG,OACRf,EAASZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,eC1DtD4B,EAASC,EAAQ,IAEjBC,E,4MACJ3D,MAAQ,CACN4D,OAAQ,I,EAOVC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAAOC,S,EAGvC5C,eAAiB,SAAC6C,GAChBC,IAAK,CACHC,MAAM,UAAD,OAAYF,EAAS1D,KAAKC,MAA1B,KACL4D,KAAK,8CACLC,SAAS,EACT7E,KAAM,UACN8E,YAAY,IACX7B,MAAK,SAAC8B,GACHA,GACFL,IAAK,SAAD,OACOD,EAAS1D,KAAKC,MADrB,YAC8ByD,EAAS1D,KAAKE,KAD5C,sBAEF,CACEjB,KAAM,YAGV,EAAKN,MAAMkC,eAAe6C,EAASO,MAEnCN,IAAK,SAAD,OAAUD,EAAS1D,KAAKC,MAAxB,kB,EAKVO,wBAA0B,SAAC0D,GACzB,GAAIA,EAAK,CAEP,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAIF,EAAIxD,OAAQ0D,KACN,IAApBF,EAAIE,GAAGC,UACTF,IAGJ,OAAOA,I,uDAID,IAEJG,EAFG,OACDlB,EAAWmB,KAAK/E,MAAhB4D,OAEFmB,KAAK5F,MAAM0D,WAAae,IAC1BkB,EAAoBC,KAAK5F,MAAM0D,UAAUmC,QAAO,SAACd,GAE/C,IAAIpC,EAAKoC,EAASe,QAAQnE,OAAOoE,WAC7BC,EAASvB,IAAW9B,EAAKoC,EAAW,KAGpCkB,EACFlB,EAAS1D,KAAKC,MAAM4E,cAAcC,SAAS1B,EAAOyB,gBAClDnB,EAAS1D,KAAKE,KAAK2E,cAAcC,SAAS1B,EAAOyB,eAEnD,OAAID,IAGAD,QAAJ,OAMJ,IAAMI,EAAkBT,EACpBA,EAAkBU,MAAM,EAAE,IAAIC,KAAI,SAACvB,EAAUwB,GAC3C,OACE,kBAAC,EAAD,CACEC,IAAKlC,IACLjD,KAAM0D,EAAS1D,KACfoF,MAAO1B,EAAS0B,MAChBC,SAAU3B,EAAS2B,SACnB/E,OAAQoD,EAASe,QAAQnE,OACzBG,MAAOiD,EAASe,QAAQhE,MACxBb,UAAW8D,EAASe,QAAQ7E,UAC5BgB,UAAW,kBAAM,EAAKjC,MAAMiC,UAAU,gBAAiB8C,IACvD4B,cAAe,kBACb,EAAK3G,MAAM4G,yBAAyB7B,IAEtClD,wBAAyB,EAAKA,wBAC9BK,eAAgB,kBAAM,EAAKA,eAAe6C,SAIhD,KACJ,OACE,oCACE,yBAAK9E,UAAWC,IAAQ2G,YACtB,yBAAK5G,UAAWC,IAAQ4G,gBACtB,wBAAI7G,UAAWC,IAAQ6G,aAAvB,SAEE,yBACE9G,UAAWC,IAAQ8G,QACnB5G,QAAS,kBAAM,EAAKJ,MAAMiC,UAAU,kBAEpC,kBAAC,IAAD,CAAiB3B,KAAM2G,QAG3B,yBAAKhH,UAAWC,IAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,SACLpB,UAAWC,IAAQiH,MACnBC,aAAcxB,KAAK/E,MAAM4D,OACzB4C,SAAUzB,KAAKlB,aACf4C,UAAQ,IAEV,2BAAOC,QAAQ,SAAStH,UAAWC,IAAQsH,OAA3C,qCAKF,yBAAKvH,UAAWC,IAAQuH,mBACrBhD,GAAU2B,U,GAvHJsB,aAoIN9G,eAJS,SAACC,GAAD,MAAY,CAClC6C,UAAW7C,EAAM6C,UAAUA,aAGWW,EAAzBzD,CAAkC4D,G,yCCpFlCmD,EA3DE,SAAA3H,GACf,OACE,0BAAM4H,SAAU,SAACC,GAAD,OAAO7H,EAAM4H,SAASC,KACpC,yBAAK5H,UAAWC,IAAQ4H,gBACrB9H,EAAMyC,SAAWzC,EAAM6D,MACxB,yBAAK5D,UAAWC,IAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,OACLgG,SAAUrH,EAAMqH,SAChBpH,UAAWC,IAAQiH,MACnBG,UAAQ,IAEV,0BAAMrH,UAAWC,IAAQ6H,MACzB,2BAAOR,QAAQ,OAAOtH,UAAWC,IAAQsH,OAAzC,SAIF,yBAAKvH,UAAWC,IAAQgH,OACtB,2BACE7E,KAAK,QACLhB,KAAK,QACLgG,SAAUrH,EAAMqH,SAChBpH,UAAWC,IAAQiH,MACnBG,UAAQ,IAEV,0BAAMrH,UAAWC,IAAQ6H,MACzB,2BAAOR,QAAQ,QAAQtH,UAAWC,IAAQsH,OAA1C,UAIF,yBAAKvH,UAAWC,IAAQgH,OACtB,2BACE7E,KAAK,WACLhB,KAAK,WACLgG,SAAUrH,EAAMqH,SAChBpH,UAAWC,IAAQiH,MACnBG,UAAQ,IAEV,0BAAMrH,UAAWC,IAAQ6H,MACzB,2BAAOR,QAAQ,WAAWtH,UAAWC,IAAQsH,OAA7C,aAIF,4BACEnF,KAAK,SACLhB,KAAK,WACLpB,UAAS,UAAKC,IAAQ8H,OAAb,YAAuB9H,IAAQ+H,SAH1C,YAOA,yBAAK7H,QAAS,kBAAMJ,EAAMkI,aAAajI,UAAWC,IAAQiI,MACxD,kBAAC,IAAD,CAAiB7H,KAAM8H,U,QC7C3B/D,EAAU,CAAEgE,MJ+DG,SAAC,GAAD,IAAG5B,EAAH,EAAGA,MAAO6B,EAAV,EAAUA,SAAV,OAAyB,SAAAlF,GAC5C,IAMMmF,EAAOC,KAAKC,UAAU,CAAEhC,QAAO6B,aACrCrE,IACGC,KAAK,yCAA0CqE,EARnC,CACbtF,QAAS,CACP,eAAgB,sBAOjBM,MAAK,SAAAC,GAAG,OACPJ,EAAS,CACPf,KFtEqB,gBEuErBC,QAASkB,EAAIpB,UAIhBwB,OAAM,SAAAO,GACLf,EACEZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,OAAQ,eAEvDU,EAAS,CACPf,KF/EkB,oBMNDqG,SJ0BD,SAAC,GAAD,IAAGrH,EAAH,EAAGA,KAAMoF,EAAT,EAASA,MAAO6B,EAAhB,EAAgBA,SAAhB,OAA+B,SAAAlF,GACrD,IAOMmF,EAAOC,KAAKC,UAAU,CAAEpH,OAAMoF,QAAO6B,aAE3CrE,IACGC,KAAK,0CAA2CqE,EAVpC,CACbtF,QAAS,CACP,eAAgB,sBASjBM,MAAK,SAAAC,GAAG,OACPJ,EAAS,CACPf,KFhCwB,mBEiCxBC,QAASkB,EAAIpB,UAIhBwB,OAAM,SAAAO,GACLf,EACEZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,OAAQ,kBAEvDU,EAAS,CACPf,KFzCqB,uBMTMsG,YLDR,WACzB,MAAO,CACLtG,KDUwB,kBMTtBuG,E,4MACJ/H,MAAQ,CACNQ,KAAM,GACNoF,MAAO,GACP6B,SAAU,GACV7F,QAAS,KACToG,aAAa,EACbX,WAAW,G,EAsBbb,SAAW,SAAAQ,GACT,EAAKjD,SAAL,eAAiBiD,EAAEhD,OAAOxD,KAAOwG,EAAEhD,OAAOC,S,EAI5C8C,SAAW,SAAAC,GACTA,EAAEiB,iBADY,MAEc,EAAKjI,MAC3BkI,EAAO,CACXtC,MAJY,EAENA,MAGN6B,SALY,EAECA,UAMf,EAAKtI,MAAMqI,MAAMU,I,EAGnBC,YAAc,SAAAnB,GACZA,EAAEiB,iBADe,MAEiB,EAAKjI,MACjCoI,EAAU,CACd5H,KAJe,EAETA,KAGNoF,MALe,EAEHA,MAIZ6B,SANe,EAEIA,UAOrB,EAAKtI,MAAM0I,SAASO,I,EAItBJ,YAAc,WACZ,EAAK7I,MAAM2I,cACX,EAAK/D,SAAS,CACZiE,aAAc,EAAKhI,MAAMgI,e,EAG7BX,UAAY,WACV,EAAKlI,MAAM2I,cACX,EAAK/D,SAAS,CACZsD,WAAY,EAAKrH,MAAMqH,a,iEAlDRgB,GAAY,IAAD,EACOtD,KAAK5F,MAAhC6D,EADoB,EACpBA,MADoB,EACbsF,gBACXtF,IAAUqF,EAAUrF,QAEL,eAAbA,EAAMlB,GACRiD,KAAKhB,SAAS,CAAEnC,QAASoB,EAAMpB,QAAQA,UAEvCmD,KAAKhB,SAAS,CAAEnC,QAAS,U,+BA+CrB,IACJ0C,EADG,OAEFS,KAAK/E,MAAMgI,aAAgBjD,KAAK/E,MAAMqH,YACzC/C,EACE,yBAAKlF,UAAWC,IAAQ8B,iBACtB,4BACEX,KAAK,QACLjB,QAAS,kBAAM,EAAKyI,eACpB5I,UAAWC,IAAQ8H,QAHrB,SAOA,4BACE3G,KAAK,WACLjB,QAAS,kBAAM,EAAK8H,aACpBjI,UAAWC,IAAQ8H,QAHrB,cAWN,IAAInE,EACF,6BACE,wBAAI5D,UAAWC,IAAQkJ,OAAQxD,KAAK/E,MAAM4B,UAI9C,OACE,6BACGmD,KAAK5F,MAAMmJ,gBAAkB,kBAAC,IAAD,CAAUE,GAAG,qBAAwB,MACjEzD,KAAK5F,MAAMmJ,iBACX,6BAASlJ,UAAWC,IAAQoJ,WAC1B,wBAAIrJ,UAAWC,IAAQqJ,OAAvB,yBACCpE,EACAS,KAAK/E,MAAMgI,aACV,0BAAMjB,SAAUhC,KAAKgC,UACnB,yBAAK3H,UAAWC,IAAQ4H,gBACrBlC,KAAK/E,MAAM4B,SAAWoB,EACvB,yBAAK5D,UAAWC,IAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,QACLpB,UAAWC,IAAQiH,MACnBE,SAAUzB,KAAKyB,SACfC,UAAQ,IAEV,0BAAMrH,UAAWC,IAAQ6H,MACzB,2BAAOR,QAAQ,QAAQtH,UAAWC,IAAQsH,OAA1C,UAIF,yBAAKvH,UAAWC,IAAQgH,OACtB,2BACE7E,KAAK,WACLhB,KAAK,WACLpB,UAAWC,IAAQiH,MACnBE,SAAUzB,KAAKyB,SACfC,UAAQ,IAEV,0BAAMrH,UAAWC,IAAQ6H,MACzB,2BAAOR,QAAQ,WAAWtH,UAAWC,IAAQsH,OAA7C,aAIF,4BACEnF,KAAK,SACLhB,KAAK,QACLpB,UAAS,UAAKC,IAAQ8H,OAAb,YAAuB9H,IAAQ+H,SAH1C,SAOA,yBACE7H,QAAS,kBAAM,EAAKyI,eACpB5I,UAAWC,IAAQiI,MAEnB,kBAAC,IAAD,CAAiB7H,KAAM8H,SAK9BxC,KAAK/E,MAAMqH,WACV,kBAAC,EAAD,CACEN,SAAUhC,KAAKoD,YACfd,UAAWtC,KAAKsC,UAChBzF,QAASmD,KAAK/E,MAAM4B,QACpB4E,SAAUzB,KAAKyB,SACfxD,MAAO+B,KAAK/E,MAAMgD,c,GA/Jd6D,aA6KL9G,eALS,SAAAC,GAAK,MAAK,CAChCsI,gBAAiBtI,EAAMkC,KAAKoG,gBAC5BtF,MAAOhD,EAAMgD,SAGyBQ,EAAzBzD,CACbgI,GC7KaY,GAXF,SAAAxJ,GACX,OACE,oCACE,yBAAKC,UAAWC,IAAQuJ,UACxB,yBAAKxJ,UAAWC,IAAQoJ,WACtB,kBAAC,EAAD,S,iDCKFjF,I,OAAU,CAAEqF,ONsDI,WACpB,MAAO,CACLrH,KFnD0B,mBQLJJ,cAEpB0H,G,4MACJ9I,MAAQ,CACN+I,YAAY,G,EAQdF,OAAS,WACP,EAAK1J,MAAM0J,U,EAGbG,WAAa,WACX,EAAKjF,SAAS,CACZgF,YAAa,EAAK/I,MAAM+I,c,EAI5BE,YAAc,SAAA3H,GACZ,EAAKnC,MAAMiC,UAAUE,GACrB,EAAK0H,c,uDAGG,IAAD,OAKHE,EACF,wBAAI9J,UAAWC,KAAQ8J,eACrB,kBAAC,KAAD,CACEX,GAAG,mBACHpJ,UAAWC,KAAQ+J,cACnB7J,QAAS,kBAAM,EAAKyJ,eAHtB,UAQA,kBAAC,KAAD,CACER,GAAG,aACHpJ,UAAWC,KAAQ+J,cACnB7J,QAAS,kBAAM,EAAKyJ,eAHtB,cAQA,4BACEzJ,QAAS,kBAAM,EAAK0J,YAAY,iBAChC7J,UAAWC,KAAQ+J,eAEnB,kBAAC,IAAD,CAAiB3J,KAAM2G,MAJzB,iBAMA,4BACE7G,QAAS,kBAAM,EAAK0J,YAAY,aAChC7J,UAAWC,KAAQ+J,eAEnB,kBAAC,IAAD,CAAiB3J,KAAM2G,MAJzB,aAMA,4BAAQ7G,QAASwF,KAAK8D,OAAQzJ,UAAWC,KAAQ+J,eAAjD,YAwDJ,OAjDE,yBAAKhK,UAAWC,KAAQgK,QACtB,qDACCtE,KAAK/E,MAAM+I,WACVG,EAEA,wBAAI9J,UAAWC,KAAQiK,MACrB,wBAAIlK,UAAWC,KAAQkK,MACrB,kBAAC,KAAD,CAAMf,GAAG,mBAAmBpJ,UAAWC,KAAQmK,MAA/C,WAIF,wBAAIpK,UAAWC,KAAQkK,MACrB,kBAAC,KAAD,CAAMf,GAAG,aAAapJ,UAAWC,KAAQmK,MAAzC,eAIF,wBAAIpK,UAAWC,KAAQkK,MACrB,4BACEhK,QAAS,kBAAM,EAAKJ,MAAMiC,UAAU,iBACpChC,UAAWC,KAAQoK,WAEnB,kBAAC,IAAD,CAAiBhK,KAAM2G,MAJzB,kBAOF,4BACE,4BACE7G,QAAS,kBAAM,EAAKJ,MAAMiC,UAAU,aACpChC,UAAWC,KAAQoK,WAEnB,kBAAC,IAAD,CAAiBhK,KAAM2G,MAJzB,cAOF,wBAAIhH,UAAWC,KAAQkK,MACrB,4BAAQhK,QAASwF,KAAK8D,OAAQzJ,UAAWC,KAAQqK,QAAjD,aAMN,yBAAKtK,UAAWC,KAAQsK,oBACtB,kBAAC,KAAD,CACEC,OAAQ7E,KAAK/E,MAAM+I,WACnBxJ,QAAS,kBAAM,EAAKyJ,sB,GA7GPnC,aA6HV9G,gBALS,SAAAC,GAAK,MAAK,CAChCkC,KAAMlC,EAAMkC,KACZoG,gBAAiBtI,EAAMkC,KAAKoG,mBAGU9E,GAAzBzD,CAAkC+I,I,4DCjI3CtF,GAAU,CAAEpC,YAAWM,cACvB+B,GAASC,EAAQ,IA+CR3D,gBAJS,SAAAC,GAAK,MAAK,CAChCiB,MAAOjB,EAAMiB,MAAMA,SAGmBuC,GAAzBzD,EA7CK,SAAAZ,GAClB,IAAM0K,EAAW1K,EAAM8B,MACnB9B,EAAM8B,MAAMwE,KAAI,SAAAqE,GACd,OACE,kBAACC,GAAA,EAAD,CACEpE,IAAKlC,KACLuG,OAAK,EACLC,QAAM,EACN7K,UAAWC,KAAQ0K,SACnBxK,QAAS,kBAAMJ,EAAMiC,UAAU,YAAa0I,KAE5C,kBAACI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,IAAG,UAAKN,EAAKO,SAAWC,IAAKR,EAAKS,OAE5C,yBAAKnL,UAAWC,KAAQgH,OACtB,4BAAKyD,EAAKO,SACV,4BAAKP,EAAKtJ,WAKlB,KAEJ,OACE,6BAASpB,UAAWC,KAAQmL,kBAC1B,wBAAIpL,UAAWC,KAAQoL,YAAvB,aAEE,yBACErL,UAAWC,KAAQ8G,QACnB5G,QAAS,kBAAMJ,EAAMiC,UAAU,cAE/B,kBAAC,IAAD,CAAiB3B,KAAM2G,QAG3B,kBAACsE,GAAA,EAAD,CAAMV,OAAK,EAAC5K,UAAWC,KAAQqL,MAC5Bb,O,oBC5CHrG,GAAU,CAAE9B,cASH3B,gBAJS,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAME,MAAMD,aAGeuD,GAAzBzD,EAPE,SAAAZ,GAAK,OACpBA,EAAMc,WAAa,yBAAKb,UAAWC,KAAQsL,SAAUpL,QAAS,kBAAMJ,EAAMuC,mB,mECAtE8B,GAAU,CAAEpC,YAAWM,cACvB+B,GAASC,EAAQ,IA+EvB,IAEe3D,gBAFS,SAACC,GAAD,MAAY,KAEIwD,GAAzBzD,EA/Ef,SAAkBZ,GAAQ,IAAD,EACOyL,IAAMC,SAAS,EAAE,IADxB,oBAChBC,EADgB,KACPC,EADO,KA0BjBC,EAAc7L,EAAM8B,MAAMwE,KAAI,SAACqE,GACnC,OACE,wBACEnE,IAAKlC,KACLlE,SA3BgB0E,EA2BM6F,EA3BI,WAC9B,IAAMmB,EAAeH,EAAQI,QAAQjH,GAC/BkH,EAAU,aAAOL,IACD,IAAlBG,EACFE,EAAWC,KAAKnH,GAEhBkH,EAAWE,OAAOJ,EAAc,GAElCF,EAAWI,KAoBP/L,UACE0K,EAAKjF,SAAL,UAAmByG,KAAOC,KAA1B,YAAkCD,KAAOhL,WAAcgL,KAAOC,MAGhE,yBACEnM,UAAWkM,KAAOnB,OAClBC,IAAG,UAAKN,EAAKO,SACbC,IAAG,UAAKR,EAAKS,OAEf,yBAAKnL,UAAWkM,KAAOE,eACrB,sCAAQ1B,EAAKO,UACb,sCAAQP,EAAKtJ,QAEf,6BA9Be,SAACsJ,GACpB,OAA+B,IAA3BgB,EAAQI,QAAQpB,IAAiBA,EAAKjF,SAOjC,KALL,0BAAMzF,UAAWkM,KAAO3K,WACtB,kBAAC,IAAD,CAAiBlB,KAAMmB,OA2BtB6K,CAAa3B,GACbA,EAAKjF,UACJ,0BAAMzF,UAAWkM,KAAO3K,WACtB,kBAAC,IAAD,CAAiBlB,KAAMmB,SA7Cd,IAACqD,KAqDtB,OACE,oCACE,wBAAI7E,UAAWkM,KAAOI,eAAgBV,GACtC,yBAAK5L,UAAWC,KAAQ8B,iBACtB,2BACEK,KAAK,SACLyC,MAAM,SACN1E,QAAS,SAACyH,GAAD,OAAO7H,EAAMwM,aAAa3E,EAAG8D,IACtC1L,UAAWC,KAAQO,aAErB,2BACE4B,KAAK,SACLyC,MAAM,SACN1E,QAAS,kBAAMJ,EAAMuC,cACrBtC,UAAWC,KAAQuM,oBCvEvBpI,GAAU,CACd9B,aACAmK,eTuC4B,SAAC3H,EAAUpC,GAAX,OAAkB,SAACS,EAAUP,GACzD,IAAM8J,EAAc,+CAAiDhK,EACrEsB,IACG2I,IAAID,EAAa5H,GACjBxB,KAAKH,EAASD,MACdS,OAAM,SAAAO,GAAG,OACRf,EAASZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,cS5C1DS,kBAGI0J,G,4MACJhM,MAAQ,CACNS,MAAO,EAAKtB,MAAMsB,MAClBC,KAAM,EAAKvB,MAAMuB,KACjBI,OAAQ,EAAK3B,MAAM2B,OACnBmL,WAAY,EAAK9M,MAAM8M,WACvB7L,UAAW,EAAKjB,MAAMiB,UACtB8L,cAAe,EAAK/M,MAAM+M,e,EAY5BC,qBAAuB,SAAAC,GAErB,IADA,IAAIC,EAAa,EAAKrM,MAAMkM,cACnBI,EAAI,EAAGA,EAAID,EAAWnL,OAAQoL,IACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAWlL,OAAQqL,IACjCF,EAAWC,GAAG7H,MAAQ2H,EAAWG,GAAG9H,MACtC4H,EAAWC,GAAGzH,UAAW,GAI/B,EAAKd,SAAS,CACZmI,cAAeG,K,EAInBG,gBAAkB,SAAAvL,GAEhB,IADA,IAAIgD,GAAQ,EACHW,EAAI,EAAGA,EAAI3D,EAAMC,OAAQ0D,IAChC,IAA0B,IAAtB3D,EAAM2D,GAAGC,SACX,OAAgB,GAGN,IAAVZ,GACF,EAAKF,SAAS,CACZ3D,WAAW,K,EAKjBqM,kBAAoB,SAAAzF,GAClB,IACMxG,EADSwG,EAAEhD,OACGxD,KACpB,EAAKuD,SAAL,eAAiBvD,EAAOwG,EAAEhD,OAAOC,S,EAGnC0H,a,uCAAe,WAAO3E,EAAGoF,GAAV,eAAAM,EAAA,6DACb1F,EAAEiB,iBADW,SAEP,EAAKkE,qBAAqBC,GAFnB,uBAGP,EAAKI,gBAAgB,EAAKxM,MAAMkM,eAHzB,uBAIiB,CAC5B1L,KAAM,CACJC,MAAO,EAAKT,MAAMS,MAClBC,KAAM,EAAKV,MAAMU,MAEnBuE,QAAS,CACPnE,OAAQ,EAAKd,MAAMc,OACnBV,UAAW,EAAKJ,MAAMI,UACtBa,MAAO,EAAKjB,MAAMkM,gBAZT,cAIPS,EAJO,0BAgBL,EAAKxN,MAAM0M,eAAec,EAAiB,EAAKxN,MAAM8M,YAhBjD,yBAiBL,EAAK9M,MAAMmD,iBAjBN,QAkBX6B,IAAK,CACHC,MAAM,kBAAD,OAAoB,EAAKpE,MAAMS,MAA/B,YAAwC,EAAKT,MAAMU,KAAnD,KACLjB,KAAM,UACNwK,OAAQ,QAEV,EAAK9K,MAAMuC,aAvBA,kDAyBXkL,QAAQC,IAAR,MACA1I,IAAK,CACHC,MAAM,gCACN3E,KAAM,OACNwK,OAAQ,UA7BC,0D,+GAkCL,IAAD,OACP,OAAKlF,KAAK5F,MAIR,oCACE,6BAASC,UAAWC,KAAQyN,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK5N,UAAWC,KAAQ4N,OACtB,wBAAI7N,UAAWC,KAAQ6N,YAAvB,iBACA,yBAAK9N,UAAWC,KAAQ8N,cACxB,0BACE/N,UAAWC,KAAQ+N,KACnBrG,SAAU,SAAAC,GAAC,OAAI,EAAK7H,MAAMwM,aAAa3E,KAEvC,yBAAK5H,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,QACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAMsB,MACzB+F,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,QAAQtH,UAAWC,KAAQsH,OAA1C,eAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,OACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAMuB,KACzB8F,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,OAAOtH,UAAWC,KAAQsH,OAAzC,cAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,SACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAM2B,OACzB0F,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,SAAStH,UAAWC,KAAQsH,OAA3C,gBAIF,6BACE,2BAAOD,QAAQ,WAAWtH,UAAWC,KAAQgO,WAA7C,oCAGA,kBAACC,GAAD,CACErM,MAAO8D,KAAK5F,MAAM+M,cAClBC,qBAAsBpH,KAAKoH,qBAC3BR,aAAc5G,KAAK4G,aACnB4B,YAAa,kBAAM,EAAKpO,MAAMuC,uBA/DrC,S,GAzFcmF,aA8KZ9G,gBATS,SAAAC,GAAK,MAAK,CAChCS,MAAOT,EAAME,MAAMsN,KAAKhN,KAAKC,MAC7BC,KAAMV,EAAME,MAAMsN,KAAKhN,KAAKE,KAC5BI,OAAQd,EAAME,MAAMsN,KAAKvI,QAAQnE,OACjCV,UAAWJ,EAAME,MAAMsN,KAAKvI,QAAQ7E,UACpC8L,cAAelM,EAAME,MAAMsN,KAAKvI,QAAQhE,MACxCgL,WAAYjM,EAAME,MAAMsN,KAAK/I,OAGSjB,GAAzBzD,CAAkCiM,ICrL3CxI,GAAU,CAAE9B,aAAYwB,iBAAgBZ,kBAExCmL,G,4MACJzN,MAAQ,G,EAMR0N,gBAAkB,SAAC7K,GAEjB,IADA,IAAM8K,EAAe,EAAK3N,MAAMc,OACvB8D,EAAI,EAAGA,EAAI/B,EAAU3B,OAAQ0D,IAAK,CAEzC,GADS/B,EAAU+B,GAAGK,QAAQnE,OAAOoE,aAC1ByI,EACT,OAAO,I,EAKblB,kBAAoB,SAACzF,GACnB,IACMxG,EADSwG,EAAEhD,OACGxD,KACpB,EAAKuD,SAAL,eAAiBvD,EAAOwG,EAAEhD,OAAOC,S,EAGnC0H,a,uCAAe,WAAO3E,GAAP,eAAA0F,EAAA,sDAKb,GAJA1F,EAAEiB,iBAGU,EAAKyF,gBAAgB,EAAKvO,MAAM0D,WAE1CsB,IAAK,CACHC,MAAM,mBAAD,OAAqB,EAAKpE,MAAMc,OAAhC,sBACLuD,KAAM,6BACN5E,KAAM,OACNwK,OAAQ,WAEL,CACC9G,EAAc,CAClB3C,KAAM,CACJC,MAAO,EAAKT,MAAMS,MAClBC,KAAM,EAAKV,MAAMU,MAEnBuE,QAAS,CACPnE,OAAQ,EAAKd,MAAMc,SAGvB,IACE8L,QAAQC,IAAI,qBACZ,EAAK1N,MAAM+D,eAAeC,GAC1B,EAAKhE,MAAMmD,iBACX6B,IAAK,CACHC,MAAM,GAAD,OAAK,EAAKpE,MAAMS,MAAhB,sBACLhB,KAAM,UACNwK,OAAQ,QAEV,EAAK9K,MAAMuC,aACXkL,QAAQC,IAAI,mBACZ,MAAO7F,GACP4F,QAAQC,IAAI7F,GACZ7C,IAAK,CACHC,MAAM,gCACN3E,KAAM,OACNwK,OAAQ,WAtCD,2C,6GA4CL,IAAD,OACP,OACE,oCACE,6BAAS7K,UAAWC,KAAQyN,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK5N,UAAWC,KAAQ4N,OACtB,wBAAI7N,UAAWC,KAAQ6N,YAAvB,gBACA,yBAAK9N,UAAWC,KAAQ8N,cACtB,0BACE/N,UAAWC,KAAQuO,UACnB7G,SAAU,SAACC,GAAD,OAAO,EAAK2E,aAAa3E,KAEnC,yBAAK5H,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,QACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK/E,MAAMS,MACzB+F,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,QAAQtH,UAAWC,KAAQsH,OAA1C,eAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,OACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK/E,MAAMU,KACzB8F,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,OAAOtH,UAAWC,KAAQsH,OAAzC,cAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,SACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK/E,MAAMc,OACzB0F,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,SAAStH,UAAWC,KAAQsH,OAA3C,gBAIF,yBAAKvH,UAAWC,KAAQ8B,iBACxB,2BACEK,KAAK,SACLyC,MAAM,SACN1E,QAAS,SAACyH,GAAD,OAAO,EAAK2E,aAAa3E,IAClC5H,UAAWC,KAAQO,aAErB,2BACE4B,KAAK,SACLyC,MAAM,SACN1E,QAAS,kBAAM,EAAKJ,MAAMuC,cAC1BtC,UAAWC,KAAQuM,aACnBiC,gBAAc,e,GArIRhH,aAsJX9G,gBAJS,SAACC,GAAD,MAAY,CAClC6C,UAAW7C,EAAM6C,UAAUA,aAGWW,GAAzBzD,CAAkC0N,ICxFlCK,GA1EG,CAChBC,SAAU,CACR,qBACA,oBACA,aACA,iBACA,oBAEFC,eAAgB,CAAC,eAAgB,yBAA0B,eAC3DC,OAAQ,CACN,iBACA,gBACA,iBACA,iBAEFC,WAAY,CACV,uBACA,cACA,qBACA,gBAEFC,YAAa,CAAC,mBAAoB,aAAc,aAAc,WAC9DC,UAAW,CAAC,qBAAsB,qBAClCC,QAAS,CACP,2BACA,uBACA,iBAEFC,OAAQ,CACN,iBACA,0BACA,gBACA,aACA,mBAEFC,aAAc,CACZ,mBACA,iBACA,iBACA,oBACA,0BACA,kBAEFC,MAAO,CACL,sBACA,kBACA,kBACA,eACA,cAEFC,KAAM,CACJ,gBACA,uBACA,mBACA,kBAEFC,UAAW,CACT,qBACA,cACA,YACA,SACA,sBACA,cACA,iBACA,QACA,UACA,MACA,UACA,SACA,WACA,UCpEEjL,GAASC,EAAQ,IAEViL,GAAUC,OAAOC,QAAQf,IAAWrI,KAAI,YAAmB,IAAD,oBAAhBE,EAAgB,KAAX1B,EAAW,KACrE,OACE,8BAAU0B,IAAKlC,KAAUqL,MAAOnJ,EAAIoJ,MAAM,aAAaC,KAAK,MACzD/K,EAAMwB,KAAI,SAAAjE,GAAI,OACb,4BAAQmE,IAAKlC,KAAUQ,MAAOzC,GAC3BA,UCEEyN,GAAa,WACxB,OAAO,SAAC1M,EAAUP,GAEhB,OADAO,EAAS2M,MACFzM,MAAM,2CACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAzB,GAEJ,OADAsB,EAAS4M,GAAkBlO,IACpBA,KAER8B,OAAM,SAAAC,GAAK,OAAIT,EAAS6M,GAAkBpM,SAIpCkM,GAAkB,iBAAO,CACpC1N,KhBzB+B,sBgB4BpB2N,GAAoB,SAAAlO,GAAK,MAAK,CACzCO,KhB5BiC,sBgB6BjCC,QAASR,IAGEmO,GAAoB,SAAApM,GAAK,MAAK,CACzCxB,KhBhCiC,sBgBiCjCC,QAAS,CAAEuB,WCxBPQ,GAAU,CACdpC,YACAM,aACA2N,WDsCwB,SAAAvN,GAAE,OAAI,SAACS,EAAUP,GACzCoB,IACG5D,OAAO,2CAA6CsC,GACpDY,MAAK,SAAAC,GAAG,OACPJ,EAAS,CACPf,KhBpDmB,cgBqDnBC,QAASK,OAGZiB,OAAM,SAAAO,GAAG,OACRf,EAASZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,cC/C1DyN,WDmDwB,SAACxF,EAAMhI,GAAP,OAAc,SAACS,EAAUP,GACjD,IAAMuN,EAAU,2CAA6CzN,EAC7DsB,IACG2I,IAAIwD,EAASzF,GACbpH,KAAKH,EAAS0M,OACdlM,OAAM,SAAAO,GAAG,OACRf,EAASZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,cCxD1DoN,eAGIO,G,4MACJxP,MAAQ,CACN8B,GAAI,EAAK3C,MAAM2C,GACftB,KAAM,EAAKrB,MAAMqB,KACjBgB,KAAM,EAAKrC,MAAMqC,KACjB6I,QAAS,EAAKlL,MAAMkL,QACpBoF,gBAAiB,EAAKtQ,MAAMsQ,gBAC5BlF,IAAK,EAAKpL,MAAMoL,K,EAKlBkC,kBAAoB,SAACzF,GACnB,IACMxG,EADSwG,EAAEhD,OACGxD,KACpB,EAAKuD,SAAL,eAAiBvD,EAAOwG,EAAEhD,OAAOC,S,EAGnC0H,a,uCAAe,WAAO3E,GAAP,iBAAA0F,EAAA,6DACb1F,EAAEiB,iBACIyH,EAAc,CAClBlP,KAAM,EAAKR,MAAMQ,KACjBgB,KAAM,EAAKxB,MAAMwB,KACjB6I,QAAS,EAAKrK,MAAMqK,QACpBoF,gBAAiB,EAAKzP,MAAMyP,gBAC5BlF,IAAK,EAAKvK,MAAMuK,KAPL,SAULzI,EAAK,EAAK9B,MAAM8B,GAVX,SAWL,EAAK3C,MAAMmQ,WAAWI,EAAa5N,GAX9B,OAYXqC,IAAK,CACHC,MAAM,sBAAD,OAAwB,EAAKpE,MAAMQ,KAAnC,SACLf,KAAM,UACNwK,OAAQ,WAEV,EAAK9K,MAAMuC,aACX,EAAKvC,MAAM8P,aAlBA,kDAoBXrC,QAAQC,IAAR,MACA1I,IAAK,CACHC,MAAM,gCACN3E,KAAM,OACNwK,OAAQ,UAxBC,0D,wDA6Bf0F,gBAAkB,WAChBxL,IAAK,CACHC,MAAM,UAAD,OAAY,EAAKjF,MAAMqB,KAAvB,KACL6D,KAAK,0CACLC,SAAS,EACT7E,KAAM,UACN8E,YAAY,IACX7B,MAAK,SAAC8B,GACHA,GACFL,IAAK,mBAAD,OAAoB,EAAKhF,MAAMqB,KAA/B,sBAAyD,CAC3Df,KAAM,YAER,EAAKN,MAAMkQ,WAAW,EAAKlQ,MAAM2C,IACjC,EAAK3C,MAAM8P,aACX,EAAK9P,MAAMuC,cAEXyC,IAAK,8D,uDAKD,IAAD,OACP,OACE,6BAAS/E,UAAWC,KAAQyN,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK5N,UAAWC,KAAQ4N,OACtB,wBAAI7N,UAAWC,KAAQ6N,YAAvB,aACA,yBAAK9N,UAAWC,KAAQ8N,cAMtB,0BACE/N,UAAWC,KAAQuO,UACnB7G,SAAU,SAACC,GAAD,OAAO,EAAK2E,aAAa3E,KAEnC,yBAAK5H,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,OACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAMqB,KACzBgG,SAAU,SAACQ,GAAD,OAAO,EAAKyF,kBAAkBzF,IACxCP,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,OAAOtH,UAAWC,KAAQsH,OAAzC,cAIF,yBAAKvH,UAAWC,KAAQgH,OAEtB,4BACE7F,KAAK,OACLpB,UAAWC,KAAQuQ,OACnBpJ,SAAUzB,KAAK0H,kBACflG,aAAcxB,KAAK5F,MAAMqC,KACzBiF,UAAQ,GAER,8BAAUqI,MAAM,qBACd,4BAAQvI,aAAcxB,KAAK5F,MAAMqC,MAC9BuD,KAAK5F,MAAMqC,OAGfmN,IAEH,2BAAOjI,QAAQ,OAAOtH,UAAWC,KAAQsH,OAAzC,SAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,UACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAMkL,QACzB7D,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,UAAUtH,UAAWC,KAAQsH,OAA5C,YAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,kBACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAMsQ,gBACzBjJ,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,kBAAkBtH,UAAWC,KAAQsH,OAApD,qBAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,MACLpB,UAAWC,KAAQiH,MACnBC,aAAcxB,KAAK5F,MAAMoL,IACzB/D,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,MAAMtH,UAAWC,KAAQsH,OAAxC,2BAIF,yBAAKvH,UAAWC,KAAQ8B,iBACtB,2BACEK,KAAK,SACLyC,MAAM,SACN1E,QAAS,SAACyH,GAAD,OAAO,EAAK2E,aAAa3E,IAClC5H,UAAWC,KAAQO,aAErB,2BACE4B,KAAK,SACLyC,MAAM,SACN1E,QAAS,kBAAM,EAAKJ,MAAMuC,cAC1BtC,UAAWC,KAAQuM,iBAKzB,kBAAC,EAAD,CAAYpM,OAAQ,kBAAM,EAAKmQ,6B,GAhLtB9I,aAkMR9G,gBATS,SAACC,GAAD,MAAY,CAClC8B,GAAI9B,EAAME,MAAMsN,KAAK/I,IACrBjE,KAAMR,EAAME,MAAMsN,KAAKhN,KACvBgB,KAAMxB,EAAME,MAAMsN,KAAKhM,KACvB6I,QAASrK,EAAME,MAAMsN,KAAKnD,QAC1BoF,gBAAiBzP,EAAME,MAAMsN,KAAKiC,gBAClClF,IAAKvK,EAAME,MAAMsN,KAAKjD,OAGgB/G,GAAzBzD,CAAkCyP,IC3M3ChM,GAAU,CACdpC,YACAM,aACAmO,WFyBwB,SAAAC,GAAO,OAAI,SAACvN,EAAUP,GAC9CoB,IACGC,KAAK,0CAA2CyM,GAChDpN,MAAK,SAAAC,GAAG,OACPJ,EAAS,CACPf,KhBvCmB,cgBwCnBC,QAASkB,EAAIpB,UAGhBwB,OAAM,SAAAO,GAAG,OACRf,EAASZ,EAAa2B,EAAIC,SAAShC,KAAM+B,EAAIC,SAAS1B,cElC1DoN,eAGIc,G,4MACJ/P,MAAQ,G,EAIRyM,kBAAoB,SAACzF,GACnB,IACMxG,EADSwG,EAAEhD,OACGxD,KACpB,EAAKuD,SAAL,eAAiBvD,EAAOwG,EAAEhD,OAAOC,S,EAGnC0H,a,uCAAe,WAAO3E,GAAP,eAAA0F,EAAA,6DACb1F,EAAEiB,iBADW,SAGL6H,EAAU,CACdtP,KAAM,EAAKR,MAAMQ,KACjBgB,KAAM,EAAKxB,MAAMwB,KACjB6I,QAAS,EAAKrK,MAAMqK,QACpBoF,gBAAiB,EAAKzP,MAAMyP,gBAC5BlF,IAAK,EAAKvK,MAAMgQ,QAChBnL,UAAU,GATD,SAWL,EAAK1F,MAAM0Q,WAAWC,GAXjB,cAYX3L,IAAK,CACHC,MAAM,GAAD,OAAK,EAAKpE,MAAMQ,KAAhB,sBACLf,KAAM,UACNwK,OAAQ,UAfC,SAiBL,EAAK9K,MAAM8P,aAjBN,OAkBX,EAAK9P,MAAMuC,aAlBA,kDAoBXkL,QAAQ5J,MAAR,MACAmB,IAAK,CACHC,MAAM,gCACN3E,KAAM,OACNwK,OAAQ,UAxBC,0D,6GA6BL,IAAD,OACP,OACE,6BAAS7K,UAAWC,KAAQyN,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK5N,UAAWC,KAAQ4N,OACtB,wBAAI7N,UAAWC,KAAQ6N,YAAvB,YACA,yBAAK9N,UAAWC,KAAQ8N,cACtB,0BACE/N,UAAWC,KAAQuO,UACnB7G,SAAU,SAACC,GAAD,OAAO,EAAK7H,MAAMwM,aAAa3E,KAEzC,yBAAK5H,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,OACLpB,UAAWC,KAAQiH,MACnBrC,MAAOc,KAAK/E,MAAMQ,KAClBgG,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,OAAOtH,UAAWC,KAAQsH,OAAzC,cAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,4BACE7F,KAAK,OACLpB,UAAWC,KAAQuQ,OACnBpJ,SAAUzB,KAAK0H,kBACflG,aAAc,KACdtC,MAAOc,KAAK/E,MAAMwB,KAClByO,YAAY,YACZxJ,UAAQ,GAER,8BAAUqI,MAAM,qBACd,4BAAQ7K,MAAOc,KAAK/E,MAAMwB,MAAOuD,KAAK/E,MAAMwB,OAE7CmN,IAEH,2BAAOjI,QAAQ,OAAOtH,UAAWC,KAAQsH,OAAzC,SAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,UACLpB,UAAWC,KAAQiH,MACnBrC,MAAOc,KAAK/E,MAAMqK,QAClB7D,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,UAAUtH,UAAWC,KAAQsH,OAA5C,YAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,kBACLpB,UAAWC,KAAQiH,MACnBrC,MAAOc,KAAK/E,MAAMyP,gBAClBjJ,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,kBAAkBtH,UAAWC,KAAQsH,OAApD,qBAIF,yBAAKvH,UAAWC,KAAQgH,OACtB,2BACE7E,KAAK,OACLhB,KAAK,UACLpB,UAAWC,KAAQiH,MACnBrC,MAAOc,KAAK/E,MAAMgQ,QAClBxJ,SAAUzB,KAAK0H,kBACfhG,UAAQ,IAEV,0BAAMrH,UAAWC,KAAQ6H,MACzB,2BAAOR,QAAQ,UAAUtH,UAAWC,KAAQsH,OAA5C,2BAIF,yBAAKvH,UAAWC,KAAQ8B,iBACtB,2BACEK,KAAK,SACLyC,MAAM,SACN1E,QAAS,SAACyH,GAAD,OAAO,EAAK2E,aAAa3E,IAClC5H,UAAWC,KAAQO,aAErB,2BACE4B,KAAK,SACLyC,MAAM,SACN1E,QAAS,kBAAM,EAAKJ,MAAMuC,cAC1BtC,UAAWC,KAAQuM,aACnBiC,gBAAc,c,GA1IPhH,aAwJZ9G,gBAFS,SAACC,GAAD,MAAY,KAEIwD,GAAzBzD,CAAkCgQ,IC/J3CG,G,uKAOF,OADoBnL,KAAK5F,MAAMmC,WAE7B,IAAK,gBACH,OAAO,kBAAC,GAAD,MACT,IAAK,eACH,OAAO,kBAAC,GAAD,MACT,IAAK,YACH,OAAO,kBAAC,GAAD,MACT,IAAK,WACH,OAAO,kBAAC6O,GAAD,MACT,IAAK,YAEH,OADAvD,QAAQC,IAAI,aACL,qCACT,QACE,OAAO,0C,GApBWhG,aA6BX9G,gBAJS,SAAAC,GAAK,MAAK,CAChCsB,UAAWtB,EAAME,MAAMoB,aAGVvB,CAAyBmQ,ICvBlC1M,I,OAAU,CAAEyL,cAAY3M,iBAAgBY,mBAGxCuF,IAFU/E,EAAQ,K,4MAGtB1D,MAAQ,CACNoQ,kBAAmB,I,EAgFrBC,wBAA0B,SAACC,GAAoB,IAAD,gBACvBA,GADuB,IAC5C,2BAAqC,CAAC,IAA7BpM,EAA4B,QACnC0I,QAAQ2D,MAAMrM,GAEd,IAAMf,EAAc,CAClB3C,KAAM,CACJC,MAAOyD,EAAS1D,KAAKC,MACrBC,KAAMwD,EAAS1D,KAAKE,MAEtBuE,QAAS,CACP7E,UAAW8D,EAASe,QAAQ7E,UAC5BU,OAAQoD,EAASe,QAAQnE,OACzBG,MAAOiD,EAASe,QAAQhE,QAG5B,EAAK9B,MAAM+D,eAAeC,GAC1ByJ,QAAQC,IAAI,qBAhB8B,gC,EAoB9C2D,S,sBAAW,sBAAA9D,EAAA,+EAED,EAAKvN,MAAM8P,aAFV,uBAGD,EAAK9P,MAAMmD,iBAHV,6DAKD,IAAIiG,MACR,kEANK,yD,4LAhGHxD,KAAKyL,W,OAEEzL,KAAK5F,MAAM8B,MACK,G,qIAyG7B,OACE,oCAEE,kBAAC,KAAD,KACE,6BACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwP,OAAK,EAACC,KAAK,KAChB,kBAACC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,oBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,UAaR,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA9IgB9F,IAAM/D,YAyJf9G,gBALS,SAACC,GAAD,MAAY,CAClCiB,MAAOjB,EAAMiB,MAAMA,MACnB4B,UAAW7C,EAAM6C,UAAUA,aAGWW,GAAzBzD,CAAkC0I,I,2BCpK3CmI,GAAe,CACnBC,SAAS,EACT7N,MAAO,KACP/B,MAAO,ICHT,IAAM2P,GAAe,CACnBC,SAAS,EACT7N,MAAO,KACP8N,uBAAuB,EACvBjO,UAAW,ICVb,IAAM+N,GAAe,CACnBhP,QAAS,GACTC,OAAQ,KACRC,GAAI,MCMA8O,GAAe,CACnB3O,MAAO8O,aAAaC,QAAQ,SAC5B1I,gBAAiB,KACjB2I,WAAW,EACX/I,KAAM,MCbF0I,GAAe,CACnBtP,UAAW,GACXrB,WAAW,EACX+C,MAAO,KACPwK,KAAM,MCCO0D,oBAAgB,CAC7BjQ,MLMa,WAAoD,IAA/BjB,EAA8B,uDAAtB4Q,GAAcO,EAAQ,uCAChE,OAAQA,EAAO3P,MACb,IrBhB6B,oBqBiB3B,OAAO,gBACFxB,EADL,CAEE6Q,SAAS,EACT7N,MAAO,OAEX,IrBrB+B,sBqBsB7B,OAAO,gBACFhD,EADL,CAEE6Q,SAAS,EACT5P,MAAOkQ,EAAO1P,UAElB,IrB1B+B,sBqB2B7B,OAAO,gBACFzB,EADL,CAEE6Q,SAAS,EACT7N,MAAOmO,EAAO1P,QAAQuB,MACtB/B,MAAO,KAEX,IrB/BuB,cqBgCrB,OAAO,gBACFjB,EADL,CAEEiB,MAAM,GAAD,oBAAMjB,EAAMiB,OAAZ,CAAmBkQ,EAAO1P,YAEnC,IrBnCuB,cqBoCrB,OAAO,gBACFzB,EADL,CAEEiB,MAAOjB,EAAMiB,MAAM+D,QAAO,SAAA8E,GAAI,OAAIA,EAAKrF,MAAQ0M,EAAO1P,aAE1D,QACE,OAAOzB,IKrCX6C,UJMa,WAAwD,IAA/B7C,EAA8B,uDAAtB4Q,GAAcO,EAAQ,uCACpE,OAAQA,EAAO3P,MACb,ItBViC,wBsBW/B,OAAO,gBACFxB,EADL,CAEE6Q,SAAS,EACT7N,MAAO,OAEX,ItBfmC,0BsBgBjC,OAAO,gBACFhD,EADL,CAEE6Q,SAAS,EACThO,UAAWsO,EAAO1P,UAEtB,ItBpBmC,0BsBqBjC,OAAO,gBACFzB,EADL,CAEE6Q,SAAS,EACT7N,MAAOmO,EAAO1P,QAAQuB,MACtBH,UAAW,KAEf,ItBzB2B,kBsB0BzB,OAAO,gBACF7C,EADL,CAEE6C,UAAU,CAAEsO,EAAO1P,SAAV,oBAAsBzB,EAAM6C,cAEzC,ItB7B2B,kBsB8BzB,OAAO,gBACF7C,EADL,CAEE6C,UAAW7C,EAAM6C,UAAUmC,QACzB,SAAAd,GAAQ,OAAIA,EAASO,MAAQ0M,EAAO1P,aAG1C,QACE,OAAOzB,IIvCXkC,KFQa,WAAwC,IAA/BlC,EAA8B,uDAAtB4Q,GAAcO,EAAQ,uCACpD,OAAQA,EAAO3P,MACb,IxBNwB,ewBOtB,OAAO,gBACFxB,EADL,CAEEiR,WAAW,IAEf,IxBVuB,cwBWrB,OAAO,gBACFjR,EADL,CAEEsI,iBAAiB,EACjB2I,WAAW,EACX/I,KAAMiJ,EAAO1P,UAEjB,IxBfyB,gBwBgBzB,IxBb4B,mBwBe1B,OADAsP,aAAaK,QAAQ,QAASD,EAAO1P,QAAQQ,OACtC,gBACFjC,EADL,GAEKmR,EAAO1P,QAFZ,CAGE6G,iBAAiB,EACjB2I,WAAW,IAEf,IxBzBsB,awB0BtB,IxBxBsB,awByBtB,IxBxB0B,iBwByB1B,IxBvByB,gBwB0BvB,OADAF,aAAaM,WAAW,SACjB,gBACFrR,EADL,CAEEiC,MAAO,KACPiG,KAAM,KACNI,iBAAiB,EACjB2I,WAAW,IAEf,QACE,OAAOjR,IE5CXgD,MHHa,WAAwC,IAA/BhD,EAA8B,uDAAtB4Q,GAAcO,EAAQ,uCACpD,OAAQA,EAAO3P,MACb,IvBYsB,auBXpB,MAAO,CACLI,QAASuP,EAAO1P,QAAQG,QACxBC,OAAQsP,EAAO1P,QAAQI,OACvBC,GAAIqP,EAAO1P,QAAQK,IAEvB,IvBOwB,euBNtB,MAAO,CACLF,QAAS,GACTC,OAAQ,KACRC,GAAI,MAER,QACE,OAAO9B,IGXXE,MDHa,WAAqD,IAA/BF,EAA8B,uDAAtB4Q,GAAcO,EAAQ,uCACjE,OAAQA,EAAO3P,MACb,IzBcsB,ayBbpB,OAAO,gBACFxB,EADL,CAEEC,WAAW,EACXqB,UAAW6P,EAAO1P,QAAQH,UAC1BkM,KAAM2D,EAAO1P,QAAQF,KACrByB,MAAO,OAEX,IzBOuB,cyBNrB,OAAO,gBACFhD,EADL,CAEEC,WAAW,EACXqB,UAAW,GACXkM,KAAM,KACNxK,MAAO,OAEX,QACE,OAAOhD,MEtBPsR,GAAa,CAACC,MAWLC,GATDC,aACZC,GALmB,GAOnBC,aACEC,KAAe,WAAf,EAAmBN,IACnBO,OAAOC,8BAAgCD,OAAOC,iCCEnCC,OARf,WACE,OACE,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,QCEcQ,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhQ,MAAK,SAAAiQ,GACjCA,EAAaC,iB,mBElInB5T,EAAOC,QAAU,CAAC,aAAe,+BAA+B,eAAiB,iCAAiC,UAAY,4BAA4B,cAAgB,gCAAgC,gBAAkB,kCAAkC,KAAO,uBAAuB,UAAY,8B,mBCAxSD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,YAAc,4BAA4B,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,sBAAsB,kBAAoB,kCAAkC,QAAU,wBAAwB,gBAAgB,gC,mBCA9SD,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,KAAO,wBAAwB,cAAgB,iCAAiC,OAAS,0BAA0B,UAAY,6BAA6B,iBAAmB,oCAAoC,UAAY,+B,mBCAlSD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,WAAa,gCAAgC,KAAO,0BAA0B,SAAW,8BAA8B,QAAU,+B,kBCA5MD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,eAAiB,8BAA8B,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,qBAAqB,gBAAkB,+BAA+B,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,aAAa,4B,mBCAjXD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,aAAe,8B,mBCAxED,EAAOC,QAAU,CAAC,QAAU,sBAAsB,UAAY,0B,mBCA9DD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.240fca73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modals_ModalContainer__2fLw_\",\"Modal\":\"Modals_Modal__10u8J\",\"ModalTitle\":\"Modals_ModalTitle__3Hyrz\",\"ModalContent\":\"Modals_ModalContent__3WyKt\",\"ModalImage\":\"Modals_ModalImage__1WFqM\",\"ModalForm\":\"Modals_ModalForm__UKGm1\",\"Group\":\"Modals_Group__1HYDG\",\"Input\":\"Modals_Input__5uc30\",\"Label\":\"Modals_Label__VeMPf\",\"BeerLabel\":\"Modals_BeerLabel__32m32\",\"Select\":\"Modals_Select__RvQto\",\"ButtonContainer\":\"Modals_ButtonContainer__3zo7f\",\"EditButton\":\"Modals_EditButton__2khIt\",\"CancelButton\":\"Modals_CancelButton__2Gel2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navigation_navbar__359l3\",\"list\":\"Navigation_list__13Noi\",\"link\":\"Navigation_link__3M2ZS\",\"NewButton\":\"Navigation_NewButton__TqFt2\",\"Logout\":\"Navigation_Logout__Qzzpq\",\"hamburgerContainer\":\"Navigation_hamburgerContainer__3jW57\",\"hamburgerList\":\"Navigation_hamburgerList__1YNmT\",\"hamburgerItem\":\"Navigation_hamburgerItem__3rsP-\"};","module.exports = __webpack_public_path__ + \"static/media/Test.d8dcaaec.csv\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst DeleteIcon = (props) => {\n  return (\n    <button className={classes.DeleteButton} onClick={props.delete}>\n      <FontAwesomeIcon icon={faTrashAlt} />\n    </button>\n  );\n};\n\nexport default DeleteIcon;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst EditIcon = (props) => {\n  return (\n    <button className={classes.EditButton} onClick={props.edit}>\n      <FontAwesomeIcon icon={faPencilAlt} />\n    </button>\n  );\n};\n\nexport default EditIcon;\n","import React from \"react\";\nimport classes from \"../css/Customer.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport EditIcon from \"./EditIcon\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\n\nconst Customer = (props) => {\n  return (\n    <div className={classes.CustomerCard}>\n      <div\n        className={\n          props.completed\n            ? `${classes.TitleContainer} ${classes.Completed}`\n            : classes.TitleContainer\n        }\n      >\n        <h1 className={classes.CustomerTitle}>\n          {props.name.first} {props.name.last}\n          {props.completed ? (\n            <div className={classes.CheckIcon}>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </div>\n          ) : null}\n        </h1>\n        <h2 className={classes.CustomerDetails}>Mug Club #{props.clubId}</h2>\n      </div>\n      <span className={classes.Span}>\n        <h2 className={classes.CustomerDetails}>\n          Beers Completed: {props.calculateCompletedBeers(props.beers)} /{\" \"}\n          {props.beers.length}\n        </h2>\n      </span>\n      <span className={classes.ButtonContainer}>\n        <EditIcon edit={props.openModal} />\n        <DeleteIcon delete={props.deleteCustomer} />\n      </span>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  modalOpen: state.modal.modalOpen,\n});\n\nexport default connect(mapStateToProps)(Customer);\n","import { OPEN_MODAL, CLOSE_MODAL } from \"./action-types\";\n\nexport const openModal = (modalType, data={}) => ({\n  type: OPEN_MODAL,\n  payload: {modalType, data}\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL\n});\n","export const FETCH_BEERS_BEGIN = \"FETCH_BEERS_BEGIN\";\nexport const FETCH_BEERS_SUCCESS = \"FETCH_BEERS_SUCCESS\";\nexport const FETCH_BEERS_FAILURE = \"FETCH_BEERS_FAILURE\";\n\nexport const CREATE_BEER = \"CREATE_BEER\";\nexport const DELETE_BEER = \"DELETE_BEER\";\n\nexport const FETCH_CUSTOMERS_BEGIN = \"FETCH_CUSTOMERS_BEGIN\";\nexport const FETCH_CUSTOMERS_SUCCESS = \"FETCH_CUSTOMERS_SUCCESS\";\nexport const FETCH_CUSTOMERS_FAILURE = \"FETCH_CUSTOMERS_FAILURE\";\n\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\";\nexport const DELETE_CUSTOMER = \"DELETE_CUSTOMER\";\n\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\nexport const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./action-types\";\n\n// Return errors\nexport const returnErrors = (message, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { message, status, id }\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\n//Action types\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./action-types\";\n\n//Check for token and then load the user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\"http://locahost:5000/auth/user\", tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    //If token is invalid\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n//Register user\nexport const register = ({ name, email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  //Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    //For an error with registration\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n//Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n//Login User\nexport const login = ({ email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  //Request body\n  const body = JSON.stringify({ email, password });\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    //For an error with the login\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Setup config, headers, and token\nexport const tokenConfig = getState => {\n  //Get token from local storage\n  const token = getState().auth.token;\n\n  //Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  //If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const fetchCustomers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchCustomersBegin());\n    return fetch(\"https://bearmugclub.herokuapp.com/customers\", tokenConfig(getState))\n      .then(res => res.json())\n      .then(customers => {\n        dispatch(fetchCustomersSuccess(customers));\n        return customers;\n      })\n      .catch(error => dispatch(fetchCustomersFailure(error)));\n  };\n};\n\nexport const fetchCustomersBegin = () => ({\n  type: FETCH_CUSTOMERS_BEGIN\n});\n\nexport const fetchCustomersSuccess = customers => ({\n  type: FETCH_CUSTOMERS_SUCCESS,\n  payload: customers\n});\n\nexport const fetchCustomersFailure = error => ({\n  type: FETCH_CUSTOMERS_FAILURE,\n  payload: { error }\n});\n\nexport const createCustomer = newCustomer => (dispatch, getState) => {\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/customers\", newCustomer, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: CREATE_CUSTOMER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateCustomer = (customer, id) => (dispatch, getState) => {\n  const customerURL = \"https://bearmugclub.herokuapp.com/customers/\" + id;\n  axios\n    .put(customerURL, customer)\n    .then(dispatch(fetchCustomers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteCustomer = id => (dispatch, getState) => {\n  axios\n    .delete(\"https://bearmugclub.herokuapp.com/customers/\" + id, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_CUSTOMER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Search.module.css\";\nimport Customer from \"../components/Customer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { openModal } from \"../actions/modalActions\";\nimport { deleteCustomer } from \"../actions/customerActions\";\nconst actions = { openModal, deleteCustomer };\n\nconst uniqid = require(\"uniqid\");\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n  };\n\n  static propTypes = {\n    customers: PropTypes.array.isRequired,\n  };\n\n  updateSearch = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  deleteCustomer = (customer) => {\n    swal({\n      title: `Delete ${customer.name.first}?`,\n      text: `Do you really want to delete this customer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal(\n          `Boom! ${customer.name.first} ${customer.name.last} has been deleted!`,\n          {\n            icon: \"success\",\n          }\n        );\n        this.props.deleteCustomer(customer._id);\n      } else {\n        swal(`Phew! ${customer.name.first} is safe!`);\n      }\n    });\n  };\n\n  calculateCompletedBeers = (arr) => {\n    if (arr) {\n      let count = 0;\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].finished === true) {\n          count++;\n        }\n      }\n      return count;\n    }\n  };\n\n  render() {\n    let { search } = this.state;\n    let filteredCustomers;\n    if (this.props.customers && search) {\n      filteredCustomers = this.props.customers.filter((customer) => {\n        // Number Search\n        let id = customer.mugClub.clubId.toString();\n        let number = search === id ? customer : null;\n\n        // Name Search\n        let strings =\n          customer.name.first.toLowerCase().includes(search.toLowerCase()) ||\n          customer.name.last.toLowerCase().includes(search.toLowerCase());\n\n        if (strings) {\n          return strings;\n        }\n        if (number) {\n          return number;\n        }\n      });\n    }\n\n    const mappedCustomers = filteredCustomers\n      ? filteredCustomers.slice(0,20).map((customer, index) => {\n          return (\n            <Customer\n              key={uniqid()}\n              name={customer.name}\n              email={customer.email}\n              username={customer.username}\n              clubId={customer.mugClub.clubId}\n              beers={customer.mugClub.beers}\n              completed={customer.mugClub.completed}\n              openModal={() => this.props.openModal(\"EDIT_CUSTOMER\", customer)}\n              openBeerModal={() =>\n                this.props.toggleCustomerBeersModal(customer)\n              }\n              calculateCompletedBeers={this.calculateCompletedBeers}\n              deleteCustomer={() => this.deleteCustomer(customer)}\n            />\n          );\n        })\n      : null;\n    return (\n      <>\n        <div className={classes.Background}>\n          <div className={classes.InputContainer}>\n            <h1 className={classes.SearchTitle}>\n              Search\n              <div\n                className={classes.AddIcon}\n                onClick={() => this.props.openModal(\"NEW_CUSTOMER\")}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </h1>\n            <div className={classes.Group}>\n              <input\n                type=\"text\"\n                name=\"search\"\n                className={classes.Input}\n                defaultValue={this.state.search}\n                onChange={this.updateSearch}\n                required\n              />\n              <label htmlFor=\"search\" className={classes.Label}>\n                Please Enter Name or Mug Club ID\n              </label>\n            </div>\n\n            <div className={classes.CustomerContainer}>\n              {search && mappedCustomers}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(Search);\n","import React from \"react\";\nimport classes from \"../css/Login.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Register = props => {\n  return (\n    <form onSubmit={(e) => props.onSubmit(e)}>\n      <div className={classes.LoginContainer}>\n        {props.message && props.error}\n        <div className={classes.Group}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"name\" className={classes.Label}>\n            Name\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"email\" className={classes.Label}>\n            Email\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"password\" className={classes.Label}>\n            Password\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          name=\"register\"\n          className={`${classes.Button} ${classes.bounce}`}\n        >\n          Register\n        </button>\n        <div onClick={() => props.toggleReg()} className={classes.Back}>\n          <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport classes from \"../css/Login.module.css\";\nimport Register from \"./Register\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { login, register } from \"../actions/authActions\";\nconst actions = { login, register, clearErrors };\n\nclass Login extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    message: null,\n    toggleLogin: false,\n    toggleReg: false\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ message: error.message.message });\n      } else {\n        this.setState({ message: null });\n      }\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  //-- Submit for Login and Register\n  onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password\n    };\n    //Attempt to log in\n    this.props.login(user);\n  };\n\n  onSubmitReg = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const newUser = {\n      name,\n      email,\n      password\n    };\n    //Attempt to register\n    this.props.register(newUser);\n  };\n\n  //-- Toggles for Login and Register\n  toggleLogin = () => {\n    this.props.clearErrors();\n    this.setState({\n      toggleLogin: !this.state.toggleLogin\n    });\n  };\n  toggleReg = () => {\n    this.props.clearErrors();\n    this.setState({\n      toggleReg: !this.state.toggleReg\n    });\n  };\n\n  render() {\n    let buttons;\n    if (!this.state.toggleLogin && !this.state.toggleReg) {\n      buttons = (\n        <div className={classes.ButtonContainer}>\n          <button\n            name=\"login\"\n            onClick={() => this.toggleLogin()}\n            className={classes.Button}\n          >\n            Login\n          </button>\n          <button\n            name=\"register\"\n            onClick={() => this.toggleReg()}\n            className={classes.Button}\n          >\n            Register\n          </button>\n        </div>\n      );\n    }\n\n    let error = (\n      <div>\n        <h3 className={classes.Error}>{this.state.message}</h3>\n      </div>\n    );\n\n    return (\n      <div>\n        {this.props.isAuthenticated ? <Redirect to=\"/searchCustomers\" /> : null}\n        {!this.props.isAuthenticated && (\n          <section className={classes.Container}>\n            <h1 className={classes.Title}>Mug Club 🍻</h1>\n            {buttons}\n            {this.state.toggleLogin && (\n              <form onSubmit={this.onSubmit}>\n                <div className={classes.LoginContainer}>\n                  {this.state.message && error}\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"email\"\n                      className={classes.Input}\n                      onChange={this.onChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"email\" className={classes.Label}>\n                      Email\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      className={classes.Input}\n                      onChange={this.onChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"password\" className={classes.Label}>\n                      Password\n                    </label>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    name=\"login\"\n                    className={`${classes.Button} ${classes.bounce}`}\n                  >\n                    Login\n                  </button>\n                  <div\n                    onClick={() => this.toggleLogin()}\n                    className={classes.Back}\n                  >\n                    <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n                  </div>\n                </div>\n              </form>\n            )}\n            {this.state.toggleReg && (\n              <Register \n                onSubmit={this.onSubmitReg}\n                toggleReg={this.toggleReg}\n                message={this.state.message}\n                onChange={this.onChange}\n                error={this.state.error} />\n            )}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, actions)(\n  Login\n);\n","import React from \"react\";\nimport classes from \"../css/Home.module.css\";\nimport Login from \"../components/Login\";\n\nconst home = props => {\n  return (\n    <>\n      <div className={classes.BgImage}></div>\n      <div className={classes.Container}>\n        <Login />\n      </div>\n    </>\n  );\n};\n\nexport default home;\n","import React, { Component } from \"react\";\nimport classes from \"../css/Navigation.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Burger from \"@animated-burgers/burger-squeeze\";\nimport \"@animated-burgers/burger-squeeze/dist/styles.css\";\n\n// Redux Imports\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nimport { logout } from \"../actions/authActions\";\nconst actions = { logout, openModal };\n\nclass Navigation extends Component {\n  state = {\n    burgerOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool\n  };\n\n  logout = () => {\n    this.props.logout();\n  };\n\n  toggleMenu = () => {\n    this.setState({\n      burgerOpen: !this.state.burgerOpen\n    });\n  };\n\n  comboToggle = modalType => {\n    this.props.openModal(modalType);\n    this.toggleMenu();\n  };\n\n  render() {\n    // const { isAuthenticated } = this.props.auth;\n    // if (!isAuthenticated) {\n    //   return <Redirect to=\"/\" push={true} />;\n    // }\n    let hamburgerMenu = (\n      <ul className={classes.hamburgerList}>\n        <Link\n          to=\"/searchCustomers\"\n          className={classes.hamburgerItem}\n          onClick={() => this.toggleMenu()}\n        >\n          Search\n        </Link>\n\n        <Link\n          to=\"/beersList\"\n          className={classes.hamburgerItem}\n          onClick={() => this.toggleMenu()}\n        >\n          Beers List\n        </Link>\n\n        <button\n          onClick={() => this.comboToggle(\"NEW_CUSTOMER\")}\n          className={classes.hamburgerItem}\n        >\n          <FontAwesomeIcon icon={faPlus} /> New Customer\n        </button>\n        <button\n          onClick={() => this.comboToggle(\"NEW_BEER\")}\n          className={classes.hamburgerItem}\n        >\n          <FontAwesomeIcon icon={faPlus} /> New Beer\n        </button>\n        <button onClick={this.logout} className={classes.hamburgerItem}>\n          Log Out\n        </button>\n      </ul>\n    );\n\n    let authLinks = (\n      <nav className={classes.navbar}>\n        <h1>MUG CLUB 🍻</h1>\n        {this.state.burgerOpen ? (\n          hamburgerMenu\n        ) : (\n          <ul className={classes.list}>\n            <li className={classes.item}>\n              <Link to=\"/searchCustomers\" className={classes.link}>\n                Search\n              </Link>\n            </li>\n            <li className={classes.item}>\n              <Link to=\"/beersList\" className={classes.link}>\n                Beers List\n              </Link>\n            </li>\n            <li className={classes.item}>\n              <button\n                onClick={() => this.props.openModal(\"NEW_CUSTOMER\")}\n                className={classes.NewButton}\n              >\n                <FontAwesomeIcon icon={faPlus} /> New Customer\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => this.props.openModal(\"NEW_BEER\")}\n                className={classes.NewButton}\n              >\n                <FontAwesomeIcon icon={faPlus} /> New Beer\n              </button>\n            </li>\n            <li className={classes.item}>\n              <button onClick={this.logout} className={classes.Logout}>\n                Log Out\n              </button>\n            </li>\n          </ul>\n        )}\n        <div className={classes.hamburgerContainer}>\n          <Burger\n            isOpen={this.state.burgerOpen}\n            onClick={() => this.toggleMenu()}\n          />\n        </div>\n      </nav>\n    );\n\n    // return <>{this.props.isAuthenticated && authLinks}</>;\n    return authLinks;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, actions)(Navigation);\n","import React from \"react\";\nimport classes from \"../css/BeerDisplay.module.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nconst BeerDisplay = props => {\n  const beerList = props.beers\n    ? props.beers.map(beer => {\n        return (\n          <ListItem\n            key={uniqid()}\n            dense\n            button\n            className={classes.ListItem}\n            onClick={() => props.openModal(\"EDIT_BEER\", beer)}\n          >\n            <ListItemAvatar>\n              <Avatar alt={`${beer.brewery}`} src={beer.url} />\n            </ListItemAvatar>\n            <div className={classes.Group}>\n              <h3>{beer.brewery}</h3>\n              <h2>{beer.name}</h2>\n            </div>\n          </ListItem>\n        );\n      })\n    : null;\n\n  return (\n    <section className={classes.DisplayContainer}>\n      <h1 className={classes.BeersTitle}>\n        Beers List\n        <div\n          className={classes.AddIcon}\n          onClick={() => props.openModal(\"NEW_BEER\")}\n        >\n          <FontAwesomeIcon icon={faPlus} />\n        </div>\n      </h1>\n      <List dense className={classes.List}>\n        {beerList}\n      </List>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  beers: state.beers.beers\n});\n\nexport default connect(mapStateToProps, actions)(BeerDisplay);\n","import React from \"react\";\nimport classes from \"../css/Backdrop.module.css\";\n\n// Redux imports\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"../actions/modalActions\";\nconst actions = { closeModal };\n\nconst Backdrop = props =>\n  props.modalOpen && <div className={classes.Backdrop} onClick={() => props.closeModal()}></div>;\n\nconst mapStateToProps = state => ({\n  modalOpen: state.modal.modalOpen\n});\n\nexport default connect(mapStateToProps, actions)(Backdrop);\n","import React from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport styles from \"../css/BeersList.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nfunction BeerList(props) {\n  const [checked, setChecked] = React.useState([-1]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const checkForIcon = (beer) => {\n    if (checked.indexOf(beer) !== -1 && !beer.finished) {\n      return (\n        <span className={styles.CheckIcon}>\n          <FontAwesomeIcon icon={faCheckCircle} />\n        </span>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const mappedBeers = props.beers.map((beer) => {\n    return (\n      <li\n        key={uniqid()}\n        onClick={handleToggle(beer)}\n        className={\n          beer.finished ? `${styles.Item} ${styles.Completed}` : styles.Item\n        }\n      >\n        <img\n          className={styles.Avatar}\n          alt={`${beer.brewery}`}\n          src={`${beer.url}`}\n        />\n        <div className={styles.NameContainer}>\n          <h1>{`${beer.brewery}`}</h1>\n          <h2>{`${beer.name}`}</h2>\n        </div>\n        <div>\n          {checkForIcon(beer)}\n          {beer.finished && (\n            <span className={styles.CheckIcon}>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </span>\n          )}\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <ul className={styles.ListContainer}>{mappedBeers}</ul>\n      <div className={classes.ButtonContainer}>\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          onClick={(e) => props.handleSubmit(e, checked)}\n          className={classes.EditButton}\n        />\n        <input\n          type=\"submit\"\n          value=\"Cancel\"\n          onClick={() => props.closeModal()}\n          className={classes.CancelButton}\n        />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(BeerList);\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\nimport BeersList from \"./BeersList\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { updateCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = {\n  closeModal,\n  updateCustomer,\n  fetchCustomers\n};\n\nclass EditCustomer extends Component {\n  state = {\n    first: this.props.first,\n    last: this.props.last,\n    clubId: this.props.clubId,\n    customerId: this.props.customerId,\n    completed: this.props.completed,\n    customerBeers: this.props.customerBeers\n  };\n\n  static propTypes = {\n    first: PropTypes.string,\n    last: PropTypes.string,\n    clubId: PropTypes.number,\n    completed: PropTypes.bool,\n    customerBeers: PropTypes.array,\n    customerId: PropTypes.string\n  };\n\n  updateCompletedBeers = checkedArr => {\n    let updatedArr = this.state.customerBeers;\n    for (let k = 0; k < updatedArr.length; k++) {\n      for (let h = 1; h < checkedArr.length; h++) {\n        if (updatedArr[k]._id === checkedArr[h]._id) {\n          updatedArr[k].finished = true;\n        }\n      }\n    }\n    this.setState({\n      customerBeers: updatedArr\n    });\n  };\n\n  checkCompletion = beers => {\n    let value = true;\n    for (let i = 0; i < beers.length; i++) {\n      if (beers[i].finished === false) {\n        return (value = false);\n      }\n    }\n    if (value === true) {\n      this.setState({\n        completed: true\n      })\n    }\n  };\n\n  handleInputChange = e => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e, checkedArr) => {\n    e.preventDefault();\n    await this.updateCompletedBeers(checkedArr);\n    await this.checkCompletion(this.state.customerBeers);\n    const updatedCustomer = await {\n      name: {\n        first: this.state.first,\n        last: this.state.last\n      },\n      mugClub: {\n        clubId: this.state.clubId,\n        completed: this.state.completed,\n        beers: this.state.customerBeers\n      }\n    };\n    try {\n      await this.props.updateCustomer(updatedCustomer, this.props.customerId);\n      await this.props.fetchCustomers();\n      swal({\n        title: `You've updated ${this.state.first} ${this.state.last}!`,\n        icon: \"success\",\n        button: \"Ok!\"\n      });\n      this.props.closeModal();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\"\n      });\n    }\n  };\n\n  render() {\n    if (!this.props) {\n      return null;\n    }\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>Edit Customer</h2>\n              <div className={classes.ModalContent}>\n              <form\n                className={classes.Form}\n                onSubmit={e => this.props.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"first\"\n                    className={classes.Input}\n                    defaultValue={this.props.first}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"first\" className={classes.Label}>\n                    First Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"last\"\n                    className={classes.Input}\n                    defaultValue={this.props.last}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"last\" className={classes.Label}>\n                    Last Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"clubId\"\n                    className={classes.Input}\n                    defaultValue={this.props.clubId}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"clubId\" className={classes.Label}>\n                    Mug Club ID\n                  </label>\n                </div>\n                <div>\n                  <label htmlFor=\"beerList\" className={classes.BeerLabel}>\n                    Select Beer to Mark as Complete:\n                  </label>\n                  <BeersList\n                    beers={this.props.customerBeers}\n                    updateCompletedBeers={this.updateCompletedBeers}\n                    handleSubmit={this.handleSubmit}\n                    toggleModal={() => this.props.closeModal()}\n                  />\n                </div>\n              </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  first: state.modal.info.name.first,\n  last: state.modal.info.name.last,\n  clubId: state.modal.info.mugClub.clubId,\n  completed: state.modal.info.mugClub.completed,\n  customerBeers: state.modal.info.mugClub.beers,\n  customerId: state.modal.info._id\n});\n\nexport default connect(mapStateToProps, actions)(EditCustomer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { createCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = { closeModal, createCustomer, fetchCustomers };\n\nclass NewCustomer extends Component {\n  state = {};\n\n  static propTypes = {\n    customers: PropTypes.array,\n  };\n\n  customerIdCheck = (customers) => {\n    const enteredValue = this.state.clubId;\n    for (let i = 0; i < customers.length; i++) {\n      let id = customers[i].mugClub.clubId.toString();\n      if (id === enteredValue) {\n        return true;\n      }\n    }\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if the submitted Mug Club Id is currently in the database\n    let value = this.customerIdCheck(this.props.customers);\n    if (value) {\n      swal({\n        title: `Mug Club Number ${this.state.clubId} is already taken.`,\n        text: \"Please enter a new number.\",\n        icon: \"info\",\n        button: \"Ok\",\n      });\n    } else {\n      const newCustomer = {\n        name: {\n          first: this.state.first,\n          last: this.state.last,\n        },\n        mugClub: {\n          clubId: this.state.clubId,\n        },\n      };\n      try {\n        console.log(\"Saing customer...\");\n        this.props.createCustomer(newCustomer);\n        this.props.fetchCustomers();\n        swal({\n          title: `${this.state.first} has been created!`,\n          icon: \"success\",\n          button: \"Ok!\",\n        });\n        this.props.closeModal();\n        console.log(\"Customer saved!\");\n      } catch (e) {\n        console.log(e);\n        swal({\n          title: `Oops! Something went wrong :(`,\n          icon: \"info\",\n          button: \"Crap!\",\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>New Customer</h2>\n              <div className={classes.ModalContent}>\n                <form\n                  className={classes.ModalForm}\n                  onSubmit={(e) => this.handleSubmit(e)}\n                >\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"first\"\n                      className={classes.Input}\n                      defaultValue={this.state.first}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"first\" className={classes.Label}>\n                      First Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"last\"\n                      className={classes.Input}\n                      defaultValue={this.state.last}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"last\" className={classes.Label}>\n                      Last Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"clubId\"\n                      className={classes.Input}\n                      defaultValue={this.state.clubId}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"clubId\" className={classes.Label}>\n                      Mug Club ID\n                    </label>\n                  </div>\n                  <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                    formNoValidate\n                  />\n                </div>\n                </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(NewCustomer);\n","const beerTypes = {\n  PaleAles: [\n    \"American Amber Ale\",\n    \"American Pale Ale\",\n    \"Blonde Ale\",\n    \"English Bitter\",\n    \"English Pale Ale\"\n  ],\n  IndianPaleAles: [\"American IPA\", \"Imperial or Double IPA\", \"English IPA\"],\n  Lagers: [\n    \"American Lager\",\n    \"German Helles\",\n    \"German Pilsner\",\n    \"Czech Pilsner\"\n  ],\n  DarkLagers: [\n    \"Amber American Lager\",\n    \"Oktoberfest\",\n    \"German Schwarzbier\",\n    \"Vienna Lager\"\n  ],\n  GermanBocks: [\"Traditional Bock\", \"Doppelbock\", \"Weizenbock\", \"Maibock\"],\n  BrownAles: [\"American Brown Ale\", \"English Brown Ale\"],\n  Porters: [\n    \"American Imperial Porter\",\n    \"English Brown Porter\",\n    \"Robust Porter\"\n  ],\n  Stouts: [\n    \"American Stout\",\n    \"American Imperial Stout\",\n    \"Oatmeal Stout\",\n    \"Milk Stout\",\n    \"Irish Dry Stout\"\n  ],\n  BelgianStyle: [\n    \"Belgian Pale Ale\",\n    \"Belgian Dubbel\",\n    \"Belgian Tripel\",\n    \"Belgian Quadrupel\",\n    \"Belgian Strong Dark Ale\",\n    \"Belgian Saison\"\n  ],\n  Wheat: [\n    \"American Pale Wheat\",\n    \"Belgian Witbier\",\n    \"Berliner Weisse\",\n    \"Dunkelweizen\",\n    \"Hefeweizen\"\n  ],\n  Sour: [\n    \"American Sour\",\n    \"Belgian Fruit Lambic\",\n    \"Flanders Red Ale\",\n    \"Belgian Gueuze\"\n  ],\n  Specialty: [\n    \"American Black Ale\",\n    \"Barrel-Aged\",\n    \"Chocolate\",\n    \"Coffee\",\n    \"Fruit and Vegetable\",\n    \"Gluten-free\",\n    \"Herb and Spice\",\n    \"Honey\",\n    \"Pumpkin\",\n    \"Rye\",\n    \"Session\",\n    \"Smoked\",\n    \"Seasonal\",\n    \"Other\"\n  ]\n};\n\nexport default beerTypes;\n","import React from \"react\";\nimport beerTypes from \"./BeerTypes\";\nconst uniqid = require(\"uniqid\");\n\nexport const typeMap = Object.entries(beerTypes).map(([key, value]) => {\n  return (\n    <optgroup key={uniqid()} label={key.split(/(?=[A-Z])/).join(\" \")}>\n      {value.map(type => (\n        <option key={uniqid()} value={type}>\n          {type}\n        </option>\n      ))}\n    </optgroup>\n  );\n});\n\n//Iterate over object, return the optgroup with the key name, then map each key's array to display the options within that optgroup\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const fetchBeers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchBeersBegin());\n    return fetch(\"https://bearmugclub.herokuapp.com/beers\")\n      .then(res => res.json())\n      .then(beers => {\n        dispatch(fetchBeersSuccess(beers));\n        return beers;\n      })\n      .catch(error => dispatch(fetchBeersFailure(error)));\n  };\n};\n\nexport const fetchBeersBegin = () => ({\n  type: FETCH_BEERS_BEGIN\n});\n\nexport const fetchBeersSuccess = beers => ({\n  type: FETCH_BEERS_SUCCESS,\n  payload: beers\n});\n\nexport const fetchBeersFailure = error => ({\n  type: FETCH_BEERS_FAILURE,\n  payload: { error }\n});\n\nexport const createBeer = newBeer => (dispatch, getState) => {\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/beers\", newBeer)\n    .then(res =>\n      dispatch({\n        type: CREATE_BEER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteBeer = id => (dispatch, getState) => {\n  axios\n    .delete(\"https://bearmugclub.herokuapp.com/beers/\" + id)\n    .then(res =>\n      dispatch({\n        type: DELETE_BEER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateBeer = (beer, id) => (dispatch, getState) => {\n  const beerURL = \"https://bearmugclub.herokuapp.com/beers/\" + id;\n  axios\n    .put(beerURL, beer)\n    .then(dispatch(fetchBeers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { deleteBeer, updateBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  deleteBeer,\n  updateBeer,\n  fetchBeers,\n};\n\nclass EditBeer extends Component {\n  state = {\n    id: this.props.id,\n    name: this.props.name,\n    type: this.props.type,\n    brewery: this.props.brewery,\n    breweryLocation: this.props.breweryLocation,\n    url: this.props.url,\n  };\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const updatedBeer = {\n      name: this.state.name,\n      type: this.state.type,\n      brewery: this.state.brewery,\n      breweryLocation: this.state.breweryLocation,\n      url: this.state.url,\n    };\n    try {\n      const id = this.state.id;\n      await this.props.updateBeer(updatedBeer, id);\n      swal({\n        title: `You've updated the ${this.state.name} Beer`,\n        icon: \"success\",\n        button: \"Sweet!\",\n      });\n      this.props.closeModal();\n      this.props.fetchBeers();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  deleteBeerAlert = () => {\n    swal({\n      title: `Delete ${this.props.name}?`,\n      text: `Do you really want to delete this beer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal(`Hasta la Vista! ${this.props.name} has been deleted!`, {\n          icon: \"success\",\n        });\n        this.props.deleteBeer(this.props.id);\n        this.props.fetchBeers();\n        this.props.closeModal();\n      } else {\n        swal(`Today is your luck day, you sweet sweet miracle drink!`);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>Edit Beer</h2>\n            <div className={classes.ModalContent}>\n              {/* <img\n                className={classes.ModalImage}\n                src={this.props.url}\n                alt={this.props.name}\n              /> */}\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    defaultValue={this.props.name}\n                    onChange={(e) => this.handleInputChange(e)}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  \n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={this.props.type}\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option defaultValue={this.props.type}>\n                        {this.props.type}\n                      </option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    defaultValue={this.props.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    defaultValue={this.props.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"url\"\n                    className={classes.Input}\n                    defaultValue={this.props.url}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"url\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                  />\n                </div>\n                \n              </form>\n              <DeleteIcon delete={() => this.deleteBeerAlert()} />\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  id: state.modal.info._id,\n  name: state.modal.info.name,\n  type: state.modal.info.type,\n  brewery: state.modal.info.brewery,\n  breweryLocation: state.modal.info.breweryLocation,\n  url: state.modal.info.url,\n});\n\nexport default connect(mapStateToProps, actions)(EditBeer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { createBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  createBeer,\n  fetchBeers,\n};\n\nclass NewBeerModal extends Component {\n  state = {};\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newBeer = {\n        name: this.state.name,\n        type: this.state.type,\n        brewery: this.state.brewery,\n        breweryLocation: this.state.breweryLocation,\n        url: this.state.beerUrl,\n        finished: false,\n      };\n      await this.props.createBeer(newBeer);\n      swal({\n        title: `${this.state.name} has been created!`,\n        icon: \"success\",\n        button: \"Cool!\",\n      });\n      await this.props.fetchBeers();\n      this.props.closeModal();\n    } catch (e) {\n      console.error(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>New Beer</h2>\n            <div className={classes.ModalContent}>\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.props.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    value={this.state.name}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={null}\n                    value={this.state.type}\n                    placeholder=\"Beer Type\"\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option value={this.state.type}>{this.state.type}</option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    value={this.state.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    value={this.state.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"beerUrl\"\n                    className={classes.Input}\n                    value={this.state.beerUrl}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"beerUrl\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                    formNoValidate\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(NewBeerModal);\n","import React, { Component } from \"react\";\nimport EditCustomer from \"./EditCustomer\";\nimport NewCustomer from \"./NewCustomer\";\nimport EditBeer from \"./EditBeer\";\nimport NewBeer from \"./NewBeer\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass RenderModal extends Component {\n  static propTypes = {\n    modalType: PropTypes.string\n  };\n\n  render() {\n    let renderedModal = this.props.modalType;\n    switch (renderedModal) {\n      case \"EDIT_CUSTOMER\":\n        return <EditCustomer />;\n      case \"NEW_CUSTOMER\":\n        return <NewCustomer />;\n      case \"EDIT_BEER\":\n        return <EditBeer />;\n      case \"NEW_BEER\":\n        return <NewBeer />;\n      case \"BEER_LIST\":\n        console.log(\"Beer List\");\n        return <></>;\n      default:\n        return <></>;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalType: state.modal.modalType\n});\n\nexport default connect(mapStateToProps)(RenderModal);\n","import React from \"react\";\nimport Search from \"../pages/Search\";\nimport Home from \"../pages/Home\";\nimport Navigation from \"../pages/Navigation\";\nimport BeerDisplay from \"../pages/BeerDisplay\";\nimport Backdrop from \"../components/Backdrop\";\nimport RenderModal from \"../components/RenderModal\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { fetchBeers } from \"../actions/beerActions\";\nimport { fetchCustomers, createCustomer } from \"../actions/customerActions\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { readString } from \"react-papaparse\";\nimport BeersList from \"../components/BeersList\";\nconst actions = { fetchBeers, fetchCustomers, createCustomer };\nconst csvFile = require(\"./Test.csv\");\n\nclass Container extends React.Component {\n  state = {\n    existingCustomers: \"\",\n  };\n\n  async componentDidMount() {\n    await this.loadData();\n    ///// CSV CONVERSION\n    const list = this.props.beers;\n    let existingCustomersArray = [];\n\n    // const populateBeersList = (headers, customer) => {\n    //   let map = {};\n    //   let beerList = [...list];\n\n    //   // Mapping the customer's array of completed beers\n    //   for (let i = 5; i < customer.length; i++) {\n    //     const beer = headers[i];\n    //     if (customer[i] === \"1\") {\n    //       map[beer] = {\n    //         finished: true,\n    //       };\n    //     } else {\n    //       map[beer] = {\n    //         finished: false,\n    //       };\n    //     }\n    //   }\n\n    //   let temp = [];\n    //   for (let [key, value] of Object.entries(map)) {\n    //     for (let beer in beerList) {\n    //       if (beerList[beer].name === key && value.finished === true) {\n    //         const merged = { ...beerList[beer], ...value };\n    //         temp.push(merged);\n    //       } else if (beerList[beer].name === key) {\n    //         temp.push(beerList[beer]);\n    //       }\n    //     }\n    //   }\n    //   return temp;\n    // };\n\n    // const results = readString(csvFile, {\n    //   delimiter: \",\",\n    //   download: true,\n    //   complete: function (results) {\n    //     let headers = results.data[0];\n    //     let i = 1;\n    //     while (i < results.data.length) {\n    //       let customer = results.data[i];\n    //       let temp = {\n    //         name: {\n    //           first: customer[1],\n    //           last: customer[2],\n    //         },\n    //         mugClub: {\n    //           completed: null,\n    //           clubId: parseInt(customer[0]),\n    //           beers: populateBeersList(headers, customer),\n    //         },\n    //         beersCompleted: parseInt(customer[3]),\n    //       };\n\n    //       if (customer[3] >= list.length) {\n    //         temp.mugClub.completed = true;\n    //       } else {\n    //         temp.mugClub.completed = false;\n    //       }\n    //       existingCustomersArray.push(temp);\n    //       i++;\n    //     }\n    //   },\n    // });\n\n    // this.setState({\n    //   existingCustomers: existingCustomersArray,\n    // });\n    // console.table(this.state.existingCustomers);\n  \n  }\n\n  saveCustomersToDatabase = (customersArray) => {\n    for (let customer of customersArray) {\n      console.table(customer);\n      \n      const newCustomer = {\n        name: {\n          first: customer.name.first,\n          last: customer.name.last,\n        },\n        mugClub: {\n          completed: customer.mugClub.completed,\n          clubId: customer.mugClub.clubId,\n          beers: customer.mugClub.beers,\n        },\n      };\n      this.props.createCustomer(newCustomer);\n      console.log(\"Customer created\");\n    }\n  };\n\n  loadData = async () => {\n    try {\n      await this.props.fetchBeers();\n      await this.props.fetchCustomers();\n    } catch (error) {\n      throw new Error(\n        \"Cannot connect to database. Server may be busy or unavailable.\"\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {/* Router Navigation */}\n        <Router>\n          <div>\n            <Navigation />\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/searchCustomers\">\n                <Search />\n              </Route>\n              <Route path=\"/beersList\">\n                <BeerDisplay />\n              </Route>\n            </Switch>\n            {/* <button\n              onClick={() =>\n                this.saveCustomersToDatabase(this.state.existingCustomers)\n              }\n            >\n              Save Customers\n            </button> */}\n          </div>\n        </Router>\n        {/* Modal Displays */}\n        <Backdrop></Backdrop>\n        <RenderModal />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  beers: state.beers.beers,\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(Container);\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  beers: []\n};\n\nexport default function beerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_BEERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_BEERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        beers: action.payload\n      };\n    case FETCH_BEERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        beers: []\n      };\n    case CREATE_BEER:\n      return {\n        ...state,\n        beers: [...state.beers, action.payload]\n      };\n    case DELETE_BEER:\n      return {\n        ...state,\n        beers: state.beers.filter(beer => beer._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  showEditCustomerModal: false,\n  customers: []\n};\n\nexport default function customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CUSTOMERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_CUSTOMERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        customers: action.payload\n      };\n    case FETCH_CUSTOMERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        customers: []\n      };\n    case CREATE_CUSTOMER:\n      return {\n        ...state,\n        customers: [action.payload, ...state.customers]\n      };\n    case DELETE_CUSTOMER:\n      return {\n        ...state,\n        customers: state.customers.filter(\n          customer => customer._id !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/action-types\";\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/action-types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      //Makes sure everything is reset if there is an error\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { OPEN_MODAL, CLOSE_MODAL } from \"../actions/action-types\";\n\nconst initialState = {\n  modalType: \"\",\n  modalOpen: false,\n  error: null,\n  info: null\n};\n\nexport default function modalReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalOpen: true,\n        modalType: action.payload.modalType,\n        info: action.payload.data,\n        error: null\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalOpen: false,\n        modalType: \"\",\n        info: null,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport beerReducer from \"./beerReducer\";\nimport customerReducer from \"./customerReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport modalReducer from \"./modalReducer\";\n\nexport default combineReducers({\n  beers: beerReducer,\n  customers: customerReducer,\n  auth: authReducer,\n  error: errorReducer,\n  modal: modalReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"../css/App.css\";\nimport Container from \"../containers/Container\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomerCard\":\"Customer_CustomerCard__194L9\",\"TitleContainer\":\"Customer_TitleContainer__2I3v_\",\"Completed\":\"Customer_Completed__20Oce\",\"CustomerTitle\":\"Customer_CustomerTitle__3WyTr\",\"ButtonContainer\":\"Customer_ButtonContainer__3EM2k\",\"Span\":\"Customer_Span__Mdy56\",\"CheckIcon\":\"Customer_CheckIcon__3cZZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Search_InputContainer__EV67Y\",\"SearchTitle\":\"Search_SearchTitle__2cVn2\",\"Group\":\"Search_Group__2sFLS\",\"Input\":\"Search_Input__3yxj7\",\"Label\":\"Search_Label__3QGEQ\",\"CustomerContainer\":\"Search_CustomerContainer__1720d\",\"AddIcon\":\"Search_AddIcon__ThTYn\",\"rotate-center\":\"Search_rotate-center__2ZYft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContainer\":\"BeersList_ListContainer__2dnCL\",\"Item\":\"BeersList_Item__1JPF1\",\"NameContainer\":\"BeersList_NameContainer__1I9B8\",\"Avatar\":\"BeersList_Avatar__3s5nj\",\"Completed\":\"BeersList_Completed__1_Co_\",\"FinishedCheckbox\":\"BeersList_FinishedCheckbox__3f4Y1\",\"CheckIcon\":\"BeersList_CheckIcon__2_kNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayContainer\":\"BeerDisplay_DisplayContainer__m4NDd\",\"BeersTitle\":\"BeerDisplay_BeersTitle__1fJIo\",\"List\":\"BeerDisplay_List__38Wr-\",\"ListItem\":\"BeerDisplay_ListItem__VcB7F\",\"AddIcon\":\"BeerDisplay_AddIcon__783QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__1JihT\",\"LoginContainer\":\"Login_LoginContainer__1dsSN\",\"Group\":\"Login_Group__3Eheb\",\"Input\":\"Login_Input__1O-uz\",\"Label\":\"Login_Label__8s_y6\",\"ButtonContainer\":\"Login_ButtonContainer__X9VWm\",\"Button\":\"Login_Button__2ZHXe\",\"Back\":\"Login_Back__-LXR0\",\"Error\":\"Login_Error__2T70R\",\"bounce\":\"Login_bounce__2dwmT\",\"bounce-top\":\"Login_bounce-top__cGFQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditButton\":\"Icons_EditButton__1XMCS\",\"DeleteButton\":\"Icons_DeleteButton__H3TUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BgImage\":\"Home_BgImage__HvnmK\",\"Container\":\"Home_Container__2VrjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3f-j8\"};"],"sourceRoot":""}