{"version":3,"sources":["css/Modals.module.css","containers/Test.csv","components/Register.js","actions/errorActions.js","actions/action-types.js","actions/authActions.js","components/Login.js","components/Home.js","pages/homePage.js","components/DeleteIcon.js","components/EditIcon.js","components/Customer.js","actions/modalActions.js","actions/customerActions.js","actions/beerActions.js","components/Search.js","pages/searchPage.js","components/BeerDisplay.js","pages/beersPage.js","actions/navActions.js","components/Backdrop.js","components/HamburgerNav.js","components/RegularNav.js","components/NavBar.js","components/Routing.js","components/BeersList.js","components/EditCustomer.js","components/NewCustomer.js","lib/BeerTypes.js","lib/TypeMap.js","components/EditBeer.js","components/NewBeer.js","components/RenderModal.js","containers/LoadExistingDatabase.js","containers/Container.js","reducers/beerReducer.js","reducers/customerReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","store.js","pages/App.js","serviceWorker.js","index.js","css/Customer.module.css","css/Search.module.css","css/BeerDisplay.module.css","css/BeersList.module.css","css/Backdrop.module.css","css/Icons.module.css","css/Login.module.css","css/Home.module.css","css/NavBar.module.css"],"names":["module","exports","Register","props","onSubmit","e","className","classes","LoginContainer","error","Error","message","Group","type","name","onChange","Input","required","Bar","htmlFor","Label","Button","onClick","toggleReg","Back","icon","faArrowAltCircleLeft","returnErrors","status","id","payload","tokenConfig","getState","token","auth","config","headers","Authorization","actions","login","email","password","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","register","clearErrors","Login","state","toggleLogin","setState","target","value","preventDefault","user","onSubmitReg","newUser","prevProps","this","isAuthenticated","to","Container","Title","ButtonContainer","Component","connect","home","BgImage","HomePage","Home","DeleteIcon","DeleteButton","delete","faTrashAlt","EditIcon","EditButton","edit","faPencilAlt","modalOpen","modal","CustomerCard","completed","TitleContainer","Completed","CustomerTitle","first","last","CheckIcon","faCheckCircle","CustomerDetails","clubId","Span","calculateCompletedBeers","beers","length","openModal","deleteCustomer","modalType","closeModal","URL","fetchCustomers","fetchCustomersBegin","fetch","json","customers","fetchCustomersSuccess","fetchCustomersFailure","createCustomer","newCustomer","fetchBeers","fetchBeersBegin","fetchBeersSuccess","fetchBeersFailure","uniqid","require","Search","search","updateSearch","event","customer","swal","title","text","buttons","dangerMode","willDelete","_id","arr","count","i","finished","filterCustomers","filtered","filter","mugClub","toString","number","strings","toLowerCase","includes","filteredCustomers","loading","mappedCustomers","slice","map","key","username","openBeerModal","toggleCustomerBeersModal","Background","InputContainer","SearchTitle","AddIcon","faPlus","defaultValue","CustomerContainer","SearchPage","beerList","beer","ListItem","dense","button","ListItemAvatar","Avatar","alt","brewery","src","url","DisplayContainer","BeersTitle","List","ListContainer","BeerPage","closeNav","navOpen","Backdrop","Modal","Nav","HamburgerList","HamburgerItem","LinkDiv","faSearch","faBeer","comboToggle","logoutAlert","faUserTimes","Item","urlName","Link","NewButton","Logout","logout","openNav","NavBar","willLogout","a","push","Navigation","Navbar","role","aria-label","HamburgerContainer","isOpen","exact","path","React","useState","checked","setChecked","unchecked","setUnchecked","handleToggle","currentIndex","indexOf","newChecked","splice","console","log","mappedBeers","styles","NameContainer","checkForIcon","handleSubmit","CancelButton","updateCustomer","put","EditCustomer","customerId","customerBeers","updateCompletedBeers","checkedArr","updatedArr","k","h","checkCompletion","handleInputChange","updatedCustomer","ModalContainer","Grow","in","ModalTitle","ModalContent","Form","BeerLabel","BeersList","toggleModal","info","NewCustomer","customerIdCheck","enteredValue","ModalForm","formNoValidate","beerTypes","PaleAles","IndianPaleAles","Lagers","DarkLagers","GermanBocks","BrownAles","Porters","Stouts","BelgianStyle","Wheat","Sour","Specialty","typeMap","Object","entries","label","split","join","deleteBeer","updateBeer","beerURL","EditBeer","breweryLocation","updatedBeer","deleteBeerAlert","Select","createBeer","newBeer","NewBeerModal","beerUrl","placeholder","RenderModal","NewBeer","csvFile","LoadExistingDatabase","existingCustomers","runConversionAlogrithm","list","existingCustomersArray","readString","delimiter","download","complete","results","temp","parseInt","populateBeersList","beersCompleted","mapBeers","merged","table","saveCustomersToDatabase","customersArray","loadUser","get","componentDidMount","setTimeout","loadDatabase","initialState","showEditCustomerModal","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64bbbe89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modals_ModalContainer__2fLw_\",\"Modal\":\"Modals_Modal__10u8J\",\"ModalTitle\":\"Modals_ModalTitle__3Hyrz\",\"ModalContent\":\"Modals_ModalContent__3WyKt\",\"ModalImage\":\"Modals_ModalImage__1WFqM\",\"ModalForm\":\"Modals_ModalForm__UKGm1\",\"Group\":\"Modals_Group__1HYDG\",\"Input\":\"Modals_Input__5uc30\",\"Label\":\"Modals_Label__VeMPf\",\"BeerLabel\":\"Modals_BeerLabel__32m32\",\"Select\":\"Modals_Select__RvQto\",\"ButtonContainer\":\"Modals_ButtonContainer__3zo7f\",\"EditButton\":\"Modals_EditButton__2khIt\",\"CancelButton\":\"Modals_CancelButton__2Gel2\"};","module.exports = __webpack_public_path__ + \"static/media/Test.c9ac2ac8.csv\";","import React from \"react\";\nimport classes from \"../css/Login.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Register = (props) => {\n  return (\n    <form onSubmit={(e) => props.onSubmit(e)}>\n      <div className={classes.LoginContainer}>\n        {props.error && (\n          <div>\n            <h3 className={classes.Error}>{props.message}</h3>\n          </div>\n        )}\n        <div className={classes.Group}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"name\" className={classes.Label}>\n            Name\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"email\" className={classes.Label}>\n            Email\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"password\" className={classes.Label}>\n            Password\n          </label>\n        </div>\n        <button type=\"submit\" name=\"register\" className={classes.Button}>\n          Register\n        </button>\n        <div onClick={() => props.toggleReg()} className={classes.Back}>\n          <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Register;\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./action-types\";\n\n// Return errors\nexport const returnErrors = (message, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { message, status, id }\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const FETCH_BEERS_BEGIN = \"FETCH_BEERS_BEGIN\";\nexport const FETCH_BEERS_SUCCESS = \"FETCH_BEERS_SUCCESS\";\nexport const FETCH_BEERS_FAILURE = \"FETCH_BEERS_FAILURE\";\n\nexport const CREATE_BEER = \"CREATE_BEER\";\nexport const DELETE_BEER = \"DELETE_BEER\";\n\nexport const FETCH_CUSTOMERS_BEGIN = \"FETCH_CUSTOMERS_BEGIN\";\nexport const FETCH_CUSTOMERS_SUCCESS = \"FETCH_CUSTOMERS_SUCCESS\";\nexport const FETCH_CUSTOMERS_FAILURE = \"FETCH_CUSTOMERS_FAILURE\";\n\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\";\nexport const DELETE_CUSTOMER = \"DELETE_CUSTOMER\";\n\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\nexport const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_NAV = \"OPEN_NAV\";\nexport const CLOSE_NAV = \"CLOSE_NAV\";\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\n//Action types\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./action-types\";\n\n\n//Check for token and then load the user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      process.env.NODE_ENV === \"development\" \n      ?  \"http://localhost:5000/api/auth/user\" \n      : \"https://bearmugclub.herokuapp.com/api/auth/user\", tokenConfig(getState)\n      )\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    //If token is invalid\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n//Register user\nexport const register = ({ name, email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  //Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\n      process.env.NODE_ENV === \"development\" ?  \"http://localhost:5000/api/users\" : \"https://bearmugclub.herokuapp.com/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    //For an error with registration\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n//Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n//Login User\nexport const login = ({ email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  //Request body\n  const body = JSON.stringify({ email, password });\n  axios\n    .post(process.env.NODE_ENV === \"development\" ?  \"http://localhost:5000/api/auth\" : \"https://bearmugclub.herokuapp.com/api/auth\", body, config)\n    .then(res =>{\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })}\n    )\n    //For an error with the login\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Setup config, headers, and token\nexport const tokenConfig = getState => {\n  //Get token from local storage\n  const token = getState().auth.token;\n\n  //Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  //If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Login.module.css\";\nimport Register from \"./Register\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { login, register } from \"../actions/authActions\";\nconst actions = { login, register, clearErrors };\n\nclass Login extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    message: null,\n    toggleLogin: false,\n    toggleReg: false,\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ message: error.message.message });\n      } else {\n        this.setState({ message: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  //-- Submit for Login and Register\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password,\n    };\n    //Attempt to log in\n    this.props.login(user);\n  };\n\n  onSubmitReg = (e) => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n    //Attempt to register\n    this.props.register(newUser);\n  };\n\n  //-- Toggles for Login and Register\n  toggleLogin = () => {\n    this.props.clearErrors();\n    this.setState({\n      toggleLogin: !this.state.toggleLogin,\n    });\n  };\n  toggleReg = () => {\n    this.props.clearErrors();\n    this.setState({\n      toggleReg: !this.state.toggleReg,\n    });\n  };\n\n  render() {\n    const { toggleLogin, toggleReg } = this.state;\n    const { isAuthenticated } = this.props.auth;\n\n    let error = (\n      <div>\n        <h3 className={classes.Error}>{this.state.message}</h3>\n      </div>\n    );\n\n    return (\n      <div>\n        {isAuthenticated && <Redirect to=\"/search-customers\" />}\n        {!isAuthenticated && (\n          <section className={classes.Container}>\n            <h1 className={classes.Title}>\n              <h2>Welcome to</h2>Mug Club 🍻\n            </h1>\n            {!toggleReg && (\n              <form onSubmit={this.onSubmit}>\n                <div className={classes.LoginContainer}>\n                  {this.state.message && error}\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"email\"\n                      className={classes.Input}\n                      onChange={this.onChange}\n                      required\n                    />\n                    <label htmlFor=\"email\" className={classes.Label}>\n                      Email\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      className={classes.Input}\n                      onChange={this.onChange}\n                      required\n                    />\n                    <label htmlFor=\"password\" className={classes.Label}>\n                      Password\n                    </label>\n                  </div>\n                  <div className={classes.ButtonContainer}>\n                    <button\n                      type=\"submit\"\n                      name=\"login\"\n                      className={classes.Button}\n                    >\n                      Login\n                    </button>\n                    <button\n                      name=\"register\"\n                      onClick={() => this.toggleReg()}\n                      className={classes.Button}\n                    >\n                      Register\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n\n            {this.state.toggleReg && (\n              <Register\n                onSubmit={this.onSubmitReg}\n                toggleReg={this.toggleReg}\n                error={this.state.message}\n                onChange={this.onChange}\n              />\n            )}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, actions)(Login);\n","import React from \"react\";\nimport classes from \"../css/Home.module.css\";\nimport Login from \"./Login\";\n\nconst home = (props) => {\n  return (\n    <>\n      <div className={classes.BgImage}></div>\n      <div className={classes.Container}>\n        <Login />\n      </div>\n    </>\n  );\n};\n\nexport default home;\n","import React from \"react\";\nimport Home from \"../components/Home\";\n\nconst HomePage = (props) => {\n  return <Home />;\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst DeleteIcon = (props) => {\n  return (\n    <button className={classes.DeleteButton} onClick={props.delete}>\n      <FontAwesomeIcon icon={faTrashAlt} />\n    </button>\n  );\n};\n\nexport default DeleteIcon;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst EditIcon = (props) => {\n  return (\n    <button className={classes.EditButton} onClick={props.edit}>\n      <FontAwesomeIcon icon={faPencilAlt} />\n    </button>\n  );\n};\n\nexport default EditIcon;\n","import React from \"react\";\nimport classes from \"../css/Customer.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport EditIcon from \"./EditIcon\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\n\nconst Customer = (props) => {\n  return (\n    <div className={classes.CustomerCard}>\n      <div\n        className={\n          props.completed\n            ? `${classes.TitleContainer} ${classes.Completed}`\n            : classes.TitleContainer\n        }\n      >\n        <h1 className={classes.CustomerTitle}>\n          {props.name.first} {props.name.last}\n          {props.completed ? (\n            <div className={classes.CheckIcon}>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </div>\n          ) : null}\n        </h1>\n        <h2 className={classes.CustomerDetails}>Mug Club #{props.clubId}</h2>\n      </div>\n      <span className={classes.Span}>\n        <h2 className={classes.CustomerDetails}>\n          Beers Completed: {props.calculateCompletedBeers(props.beers)} /{\" \"}\n          {props.beers.length}\n        </h2>\n      </span>\n      <span className={classes.ButtonContainer}>\n        <EditIcon edit={props.openModal} />\n        <DeleteIcon delete={props.deleteCustomer} />\n      </span>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  modalOpen: state.modal.modalOpen,\n});\n\nexport default connect(mapStateToProps)(Customer);\n","import { OPEN_MODAL, CLOSE_MODAL } from \"./action-types\";\n\nexport const openModal = (modalType, data={}) => ({\n  type: OPEN_MODAL,\n  payload: {modalType, data}\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL\n});\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nconst URL = process.env.NODE_ENV === \"production\" \n? \"https://bearmugclub.herokuapp.com/api/customers/\"\n: \"http://localhost:5000/api/customers/\";\n\nexport const fetchCustomers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchCustomersBegin());\n    return fetch(URL, tokenConfig(getState))\n      .then(res => res.json())\n      .then(customers => {\n        dispatch(fetchCustomersSuccess(customers));\n        return customers;\n      })\n      .catch(error => dispatch(fetchCustomersFailure(error)));\n  };\n};\n\nexport const fetchCustomersBegin = () => ({\n  type: FETCH_CUSTOMERS_BEGIN\n});\n\nexport const fetchCustomersSuccess = customers => ({\n  type: FETCH_CUSTOMERS_SUCCESS,\n  payload: customers\n});\n\nexport const fetchCustomersFailure = error => ({\n  type: FETCH_CUSTOMERS_FAILURE,\n  payload: { error }\n});\n\nexport const createCustomer = newCustomer => (dispatch, getState) => {\n  axios\n    .post(URL, newCustomer, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: CREATE_CUSTOMER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateCustomer = (customer, id) => (dispatch, getState) => {\n  axios\n    .put(URL + id, customer, tokenConfig(getState))\n    .then(dispatch(fetchCustomers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteCustomer = id => (dispatch, getState) => {\n  axios\n    .delete(URL + id, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_CUSTOMER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nconst URL = process.env.NODE_ENV === \"production\" \n? \"https://bearmugclub.herokuapp.com/api/beers/\"\n: \"http://localhost:5000/api/beers/\";\n\nexport const fetchBeers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchBeersBegin());\n    return fetch(URL, tokenConfig(getState))\n      .then(res => res.json())\n      .then(beers => {\n        dispatch(fetchBeersSuccess(beers));\n        return beers;\n      })\n      .catch(error => dispatch(fetchBeersFailure(error)));\n  };\n};\n\nexport const fetchBeersBegin = () => ({\n  type: FETCH_BEERS_BEGIN\n});\n\nexport const fetchBeersSuccess = beers => ({\n  type: FETCH_BEERS_SUCCESS,\n  payload: beers\n});\n\nexport const fetchBeersFailure = error => ({\n  type: FETCH_BEERS_FAILURE,\n  payload: { error }\n});\n\nexport const createBeer = newBeer => (dispatch, getState) => {\n  axios\n    .post(URL, newBeer, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: CREATE_BEER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteBeer = id => (dispatch, getState) => {\n  axios\n    .delete(URL + id, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_BEER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateBeer = (beer, id) => (dispatch, getState) => {\n  const beerURL = URL + id;\n  axios\n    .put(beerURL, beer, tokenConfig(getState))\n    .then(dispatch(fetchBeers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Search.module.css\";\nimport Customer from \"./Customer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { openModal } from \"../actions/modalActions\";\nimport { deleteCustomer } from \"../actions/customerActions\";\nimport { fetchBeers } from \"../actions/beerActions\";\nimport { fetchCustomers } from \"../actions/customerActions\";\nconst actions = {\n  openModal,\n  deleteCustomer,\n  fetchBeers,\n  fetchCustomers,\n};\n\nconst uniqid = require(\"uniqid\");\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n  };\n\n  static propTypes = {\n    customers: PropTypes.array.isRequired,\n  };\n\n  // Fire reauthenticate to redux actions\n  // Actions fire update of isAuthenticated in redux reducers\n\n  updateSearch = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  deleteCustomer = (customer) => {\n    swal({\n      title: `Delete ${customer.name.first}?`,\n      text: `Do you really want to delete this customer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal(\n          `Boom! ${customer.name.first} ${customer.name.last} has been deleted!`,\n          {\n            icon: \"success\",\n          }\n        );\n        this.props.deleteCustomer(customer._id);\n      } else {\n        swal(`Phew! ${customer.name.first} is safe!`);\n      }\n    });\n  };\n\n  calculateCompletedBeers = (arr) => {\n    if (arr) {\n      let count = 0;\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].finished === true) {\n          count++;\n        }\n      }\n      return count;\n    }\n  };\n\n  filterCustomers = (customers, search = this.state.search) => {\n    let filtered = customers.filter((customer) => {\n      // Number Search\n      let id = customer.mugClub.clubId.toString();\n      let number = search === id ? customer : null;\n\n      // Name Search\n      let strings =\n        customer.name.first.toLowerCase().includes(search.toLowerCase()) ||\n        customer.name.last.toLowerCase().includes(search.toLowerCase());\n\n      if (strings) {\n        return strings;\n      }\n      if (number) {\n        return number;\n      }\n    });\n    return filtered;\n  };\n\n  render() {\n    const { search } = this.state;\n    const loading = this.props.loading;\n    let filteredCustomers;\n    if (this.props.customers && search) {\n      if (loading) return <h2>Loading...</h2>;\n      filteredCustomers = this.filterCustomers(\n        this.props.customers,\n        this.state.search\n      );\n    }\n\n    const mappedCustomers = filteredCustomers\n      ? filteredCustomers.slice(0, 20).map((customer) => {\n          return (\n            <Customer\n              key={uniqid()}\n              name={customer.name}\n              email={customer.email}\n              username={customer.username}\n              clubId={customer.mugClub.clubId}\n              beers={customer.mugClub.beers}\n              completed={customer.mugClub.completed}\n              openModal={() => this.props.openModal(\"EDIT_CUSTOMER\", customer)}\n              openBeerModal={() =>\n                this.props.toggleCustomerBeersModal(customer)\n              }\n              calculateCompletedBeers={this.calculateCompletedBeers}\n              deleteCustomer={() => this.deleteCustomer(customer)}\n            />\n          );\n        })\n      : null;\n    return (\n      <>\n        <div className={classes.Background}>\n          <div className={classes.InputContainer}>\n            <h1 className={classes.SearchTitle}>\n              Search Customers\n              <div\n                className={classes.AddIcon}\n                onClick={() => this.props.openModal(\"NEW_CUSTOMER\")}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </h1>\n            <div className={classes.Group}>\n              <input\n                type=\"text\"\n                name=\"search\"\n                className={classes.Input}\n                defaultValue={this.state.search}\n                onChange={this.updateSearch}\n                required\n              />\n              <label htmlFor=\"search\" className={classes.Label}>\n                Please Enter Name or Mug Club ID\n              </label>\n            </div>\n\n            <div className={classes.CustomerContainer}>\n              {search && (\n                <>\n                  <h3>Results:</h3>\n                  {mappedCustomers}\n                  <h4>Max 20 Results</h4>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers.customers,\n  loading: state.customers.loading,\n  token: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, actions)(Search);\n","import React from \"react\";\nimport Search from \"../components/Search\";\n\nconst SearchPage = (props) => {\n  return <Search />;\n};\n\nexport default SearchPage;\n","import React from \"react\";\nimport classes from \"../css/BeerDisplay.module.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nconst BeerDisplay = (props) => {\n  const beerList = props.beers\n    ? props.beers.map((beer) => {\n        return (\n          <ListItem\n            key={uniqid()}\n            dense\n            button\n            className={classes.ListItem}\n            onClick={() => props.openModal(\"EDIT_BEER\", beer)}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.Avatar}\n                alt={`${beer.brewery}`}\n                src={beer.url}\n              />\n            </ListItemAvatar>\n            <div className={classes.Group}>\n              <h3>{beer.brewery}</h3>\n              <h2>{beer.name}</h2>\n            </div>\n          </ListItem>\n        );\n      })\n    : null;\n\n  return (\n    <section className={classes.DisplayContainer}>\n      <h1 className={classes.BeersTitle}>\n        Beers List\n        <div\n          className={classes.AddIcon}\n          onClick={() => props.openModal(\"NEW_BEER\")}\n        >\n          <FontAwesomeIcon icon={faPlus} />\n        </div>\n      </h1>\n      <List dense className={classes.ListContainer}>\n        {beerList}\n      </List>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  beers: state.beers.beers,\n});\n\nexport default connect(mapStateToProps, actions)(BeerDisplay);\n","import React from \"react\";\nimport BeerDisplay from \"../components/BeerDisplay\";\n\nconst BeerPage = (props) => {\n  return <BeerDisplay />;\n};\n\nexport default BeerPage;\n","import { OPEN_NAV, CLOSE_NAV } from \"./action-types\";\n\nexport const openNav = () => ({\n  type: OPEN_NAV\n});\n\nexport const closeNav = () => ({\n  type: CLOSE_NAV\n});","import React from \"react\";\nimport classes from \"../css/Backdrop.module.css\";\n\n// Redux imports\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { closeNav } from \"../actions/navActions\";\nconst actions = { closeModal, closeNav };\n\nconst Backdrop = (props) => {\n  return (\n    <>\n      {props.modalOpen && (\n        <div\n          className={`${classes.Backdrop} ${classes.Modal}`}\n          onClick={() => props.closeModal()}\n        ></div>\n      )}\n      {props.navOpen && (\n        <div\n          className={`${classes.Backdrop} ${classes.Nav}`}\n          onClick={() => props.closeNav()}\n        ></div>\n      )}\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  modalOpen: state.modal.modalOpen,\n  navOpen: state.modal.navOpen,\n});\n\nexport default connect(mapStateToProps, actions)(Backdrop);\n","import React from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faSearch,\n  faBeer,\n  faUserTimes,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nimport { closeNav } from \"../actions/navActions\";\nconst actions = {\n  openModal,\n  closeNav\n};\nconst urlName = \"\";\n\nconst HamburgerNav = (props) => {\n  return (\n    <ul className={classes.HamburgerList}>\n      <Link\n        to={`${urlName}/search-customers`}\n        className={classes.HamburgerItem}\n        onClick={() => props.closeNav()}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faSearch} />\n          </div>\n          <h2>Search</h2>\n        </div>\n      </Link>\n      <Link\n        to={`${urlName}/beers-list`}\n        className={classes.HamburgerItem}\n        onClick={() => props.closeNav()}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faBeer} />\n          </div>\n          <h2>Beers</h2>\n        </div>\n      </Link>\n      <button\n        onClick={() => props.comboToggle(\"NEW_CUSTOMER\")}\n        className={classes.HamburgerItem}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faPlus} />\n          </div>\n          <h2>New Customer</h2>\n        </div>\n      </button>\n      <button\n        onClick={() => props.comboToggle(\"NEW_BEER\")}\n        className={classes.HamburgerItem}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faPlus} />\n          </div>\n          <h2>New Beer</h2>\n        </div>\n      </button>\n      {/* <Link\n        to={`${urlName}/account`}\n        className={classes.HamburgerItem}\n        onClick={() => props.closeNav()}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faUserCircle} />\n          </div>\n          <h2>Account</h2>\n        </div>\n      </Link> */}\n      <button onClick={() => props.logoutAlert()} className={classes.HamburgerItem}>\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faUserTimes} />\n          </div>\n          <h2>Log Out</h2>\n        </div>\n      </button>\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(HamburgerNav);\n","import React from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport { Link } from \"react-router-dom\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nconst actions = {\n  openModal,\n};\n\nconst RegularNav = (props) => (\n  <ul className={classes.List}>\n    <li className={classes.Item}>\n      <Link to={`${props.urlName}/search-customers`} className={classes.Link}>\n        Search\n      </Link>\n    </li>\n    <li className={classes.Item}>\n      <Link to={`${props.urlName}/beers-list`} className={classes.Link}>\n        Beers List\n      </Link>\n    </li>\n    <li className={classes.Item}>\n      <button\n        onClick={() => props.openModal(\"NEW_CUSTOMER\")}\n        className={classes.NewButton}\n      >\n        New Customer\n      </button>\n    </li>\n    <li className={classes.Item}>\n      <button\n        onClick={() => props.openModal(\"NEW_BEER\")}\n        className={classes.NewButton}\n      >\n        New Beer\n      </button>\n    </li>\n    {/* <li className={classes.Item}>\n              <Link to={`${props.urlName}/account`} className={classes.Link}>\n                Account\n              </Link>\n            </li> */}\n    <li className={classes.Item}>\n      <button onClick={() => props.logoutAlert()} className={classes.Logout}>\n        Log Out\n      </button>\n    </li>\n  </ul>\n);\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(RegularNav);\n","import React, { Component } from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport Backdrop from \"./Backdrop\";\nimport HamburgerNav from \"./HamburgerNav\";\nimport RegularNav from \"./RegularNav\";\n\nimport { Redirect } from \"react-router-dom\";\nimport Burger from \"@animated-burgers/burger-squeeze\";\nimport \"@animated-burgers/burger-squeeze/dist/styles.css\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nimport { openNav, closeNav } from \"../actions/navActions\";\nimport { logout } from \"../actions/authActions\";\nconst actions = {\n  logout,\n  openModal,\n  openNav,\n  closeNav,\n};\n\nclass NavBar extends Component {\n  state = {};\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    navOpen: PropTypes.bool,\n  };\n\n  logoutAlert = () => {\n    swal({\n      title: \"Log out?\",\n      icon: \"warning\",\n      buttons: [\"Cancel\", \"Logout\"],\n      dangerMode: true,\n    }).then((willLogout) => {\n      if (willLogout) {\n        this.props.logout();\n      } else {\n        swal(\"You have not been logged out\");\n      }\n    });\n  };\n\n  comboToggle = async (modalType) => {\n    await this.props.closeNav();\n    await this.props.openModal(modalType);\n  };\n\n  render() {\n    const urlName = \"\";\n    const { token, isAuthenticated } = this.props.auth;\n    if (!isAuthenticated && !token) {\n      return <Redirect to={`${urlName}/`} push={true} />\n    }\n\n    const Navigation = (\n      <nav className={classes.Navbar}>\n        <h1>\n          MUG CLUB\n          <span role=\"img\" aria-label=\"mugs of beers\">\n            🍻\n          </span>\n        </h1>\n        {this.props.navOpen \n          ? <HamburgerNav\n              logoutAlert={this.logoutAlert}\n              comboToggle={this.comboToggle}\n              urlName={urlName} />\n          : <RegularNav \n              logoutAlert={this.logoutAlert} \n              urlName={urlName} />\n        }\n        <div className={classes.HamburgerContainer}>\n          <Burger\n            isOpen={this.props.navOpen}\n            onClick={\n              this.props.navOpen\n                ? () => this.props.closeNav()\n                : () => this.props.openNav()\n            }\n          />\n        </div>\n      </nav>\n    );\n\n    return (\n      <>\n        <Backdrop />\n        {token && Navigation}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  navOpen: state.modal.navOpen,\n});\n\nexport default connect(mapStateToProps, actions)(NavBar);\n","import React from \"react\";\nimport HomePage from \"../pages/homePage\";\nimport SearchPage from \"../pages/searchPage\";\nimport BeersPage from \"../pages/beersPage\";\nimport NavBar from \"../components/NavBar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst Routing = (props) => {\n  const urlName = \"\";\n  const { token, isAuthenticated } = props.auth;\n\n  return (\n    <>\n      <Router>\n        {!isAuthenticated && !token && <Redirect to={`${urlName}/`} push={true} />}\n        <div>\n          <NavBar />\n          <Switch>\n            <Route exact path={`${urlName}/`}>\n              <HomePage />\n            </Route>\n            <Route path={`${urlName}/search-customers`}>\n              <SearchPage />\n            </Route>\n            <Route path={`${urlName}/beers-list`}>\n              <BeersPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Routing);\n","import React from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport styles from \"../css/BeersList.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nfunction BeerList(props) {\n  const [checked, setChecked] = React.useState([-1]);\n  const [unchecked, setUnchecked] = React.useState([-1]);\n\n  const handleToggle = (beer) => () => {\n    const currentIndex = checked.indexOf(beer);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(beer);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n\n    if (beer.finished === true) {\n      const currentIndex = unchecked.indexOf(beer);\n      const newChecked = [...unchecked];\n      if (currentIndex === -1) {\n        newChecked.push(beer);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n      setUnchecked(newChecked);\n    }\n    console.log(unchecked);\n  };\n\n  const checkForIcon = (beer) => {\n    if (\n      checked.indexOf(beer) !== -1 && !beer.finished ||\n      beer.finished && unchecked.indexOf(beer) !== -1 || beer.finished \n      ) {\n      return (\n        <span className={styles.CheckIcon}>\n          <FontAwesomeIcon icon={faCheckCircle} />\n        </span>\n      );\n    }\n  };\n\n  const removeIcon = (beer) => {\n    for (let beer of unchecked) {\n    }\n  };\n\n  const mappedBeers = props.beers.map((beer) => {\n    return (\n      <li\n        key={uniqid()}\n        onClick={handleToggle(beer)}\n        className={\n          beer.finished ? `${styles.Item} ${styles.Completed}` : styles.Item\n        }\n      >\n        <img\n          className={styles.Avatar}\n          alt={`${beer.brewery}`}\n          src={`${beer.url}`}\n        />\n        <div className={styles.NameContainer}>\n          <h1>{`${beer.brewery}`}</h1>\n          <h2>{`${beer.name}`}</h2>\n        </div>\n        <div>\n          {checkForIcon(beer)}\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <ul className={styles.ListContainer}>{mappedBeers}</ul>\n      <div className={classes.ButtonContainer}>\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          onClick={(e) => props.handleSubmit(e, checked, unchecked)}\n          className={classes.EditButton}\n        />\n        <input\n          type=\"submit\"\n          value=\"Cancel\"\n          onClick={() => props.closeModal()}\n          className={classes.CancelButton}\n        />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(BeerList);\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\nimport BeersList from \"./BeersList\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { updateCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = {\n  closeModal,\n  updateCustomer,\n  fetchCustomers,\n};\n\nclass EditCustomer extends Component {\n  state = {\n    first: this.props.first,\n    last: this.props.last,\n    clubId: this.props.clubId,\n    customerId: this.props.customerId,\n    completed: this.props.completed,\n    customerBeers: this.props.customerBeers,\n  };\n\n  static propTypes = {\n    first: PropTypes.string,\n    last: PropTypes.string,\n    clubId: PropTypes.number,\n    completed: PropTypes.bool,\n    customerBeers: PropTypes.array,\n    customerId: PropTypes.string,\n  };\n\n  updateCompletedBeers = (checkedArr, unchecked) => {\n    let updatedArr = this.state.customerBeers;\n    for (let k = 0; k < updatedArr.length; k++) {\n      for (let h = 1; h < checkedArr.length; h++) {\n        if (updatedArr[k]._id === checkedArr[h]._id) {\n          updatedArr[k].finished = true;\n        }\n      }\n      for (let h = 1; h < unchecked.length; h++) {\n        if (updatedArr[k]._id === unchecked[h]._id) {\n          updatedArr[k].finished = false;\n        }\n      }\n    }\n    this.setState({\n      customerBeers: updatedArr,\n    });\n  };\n\n  checkCompletion = (beers) => {\n    let value = true;\n    for (let i = 0; i < beers.length; i++) {\n      if (beers[i].finished === false) {\n        return (value = false);\n      }\n    }\n    if (value === true) {\n      this.setState({\n        completed: true,\n      });\n    }\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e, checkedArr, unchecked) => {\n    e.preventDefault();\n    await this.updateCompletedBeers(checkedArr, unchecked);\n    await this.checkCompletion(this.state.customerBeers);\n    const updatedCustomer = await {\n      name: {\n        first: this.state.first,\n        last: this.state.last,\n      },\n      mugClub: {\n        clubId: this.state.clubId,\n        completed: this.state.completed,\n        beers: this.state.customerBeers,\n      },\n    };\n    try {\n      await this.props.updateCustomer(updatedCustomer, this.props.customerId);\n      await this.props.fetchCustomers();\n      swal({\n        title: `You've updated ${this.state.first} ${this.state.last}!`,\n        icon: \"success\",\n        button: \"Ok!\",\n      });\n      this.props.closeModal();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  render() {\n    if (!this.props) {\n      return null;\n    }\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>Edit Customer</h2>\n              <div className={classes.ModalContent}>\n                <form\n                  className={classes.Form}\n                  onSubmit={(e) => this.props.handleSubmit(e)}\n                >\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"first\"\n                      className={classes.Input}\n                      defaultValue={this.props.first}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"first\" className={classes.Label}>\n                      First Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"last\"\n                      className={classes.Input}\n                      defaultValue={this.props.last}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"last\" className={classes.Label}>\n                      Last Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"clubId\"\n                      className={classes.Input}\n                      defaultValue={this.props.clubId}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"clubId\" className={classes.Label}>\n                      Mug Club ID\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"beerList\" className={classes.BeerLabel}>\n                      Select Beer to Mark as Complete:\n                    </label>\n                    <BeersList\n                      beers={this.props.customerBeers}\n                      updateCompletedBeers={this.updateCompletedBeers}\n                      handleSubmit={this.handleSubmit}\n                      toggleModal={() => this.props.closeModal()}\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  first: state.modal.info.name.first,\n  last: state.modal.info.name.last,\n  clubId: state.modal.info.mugClub.clubId,\n  completed: state.modal.info.mugClub.completed,\n  customerBeers: state.modal.info.mugClub.beers,\n  customerId: state.modal.info._id,\n});\n\nexport default connect(mapStateToProps, actions)(EditCustomer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { createCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = { closeModal, createCustomer, fetchCustomers };\n\nclass NewCustomer extends Component {\n  state = {};\n\n  static propTypes = {\n    customers: PropTypes.array,\n  };\n\n  customerIdCheck = (customers) => {\n    const enteredValue = this.state.clubId;\n    for (let i = 0; i < customers.length; i++) {\n      let id = customers[i].mugClub.clubId.toString();\n      if (id === enteredValue) {\n        return true;\n      }\n    }\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if the submitted Mug Club Id is currently in the database\n    let value = this.customerIdCheck(this.props.customers);\n    if (value) {\n      swal({\n        title: `Mug Club Number ${this.state.clubId} is already taken.`,\n        text: \"Please enter a new number.\",\n        icon: \"info\",\n        button: \"Ok\",\n      });\n    } else {\n      const newCustomer = {\n        name: {\n          first: this.state.first,\n          last: this.state.last,\n        },\n        mugClub: {\n          clubId: this.state.clubId,\n        },\n      };\n      try {\n        console.log(\"Saving customer...\");\n        await this.props.createCustomer(newCustomer);\n        console.log(\"Refetching customers...\");\n        await this.props.fetchCustomers();\n        swal({\n          title: `${this.state.first} has been created!`,\n          icon: \"success\",\n          button: \"Ok!\",\n        });\n        console.log(`${this.state.first} ${this.state.last} was saved!`);\n        this.props.closeModal();\n      } catch (e) {\n        console.log(e);\n        swal({\n          title: `Oops! Something went wrong :(`,\n          icon: \"info\",\n          button: \"Crap!\",\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>New Customer</h2>\n              <div className={classes.ModalContent}>\n                <form\n                  className={classes.ModalForm}\n                  onSubmit={(e) => this.handleSubmit(e)}\n                >\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"first\"\n                      className={classes.Input}\n                      defaultValue={this.state.first}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"first\" className={classes.Label}>\n                      First Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"last\"\n                      className={classes.Input}\n                      defaultValue={this.state.last}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"last\" className={classes.Label}>\n                      Last Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"number\"\n                      name=\"clubId\"\n                      className={classes.Input}\n                      defaultValue={this.state.clubId}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"clubId\" className={classes.Label}>\n                      Mug Club ID (Suggested #: {this.props.customers.length})\n                    </label>\n                  </div>\n                  <div className={classes.ButtonContainer}>\n                    <input\n                      type=\"submit\"\n                      value=\"Submit\"\n                      onClick={(e) => this.handleSubmit(e)}\n                      className={classes.EditButton}\n                    />\n                    <input\n                      type=\"submit\"\n                      value=\"Cancel\"\n                      onClick={() => this.props.closeModal()}\n                      className={classes.CancelButton}\n                      formNoValidate\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(NewCustomer);\n","const beerTypes = {\n  PaleAles: [\n    \"American Amber Ale\",\n    \"American Pale Ale\",\n    \"Blonde Ale\",\n    \"English Bitter\",\n    \"English Pale Ale\"\n  ],\n  IndianPaleAles: [\"American IPA\", \"Imperial or Double IPA\", \"English IPA\"],\n  Lagers: [\n    \"American Lager\",\n    \"German Helles\",\n    \"German Pilsner\",\n    \"Czech Pilsner\"\n  ],\n  DarkLagers: [\n    \"Amber American Lager\",\n    \"Oktoberfest\",\n    \"German Schwarzbier\",\n    \"Vienna Lager\"\n  ],\n  GermanBocks: [\"Traditional Bock\", \"Doppelbock\", \"Weizenbock\", \"Maibock\"],\n  BrownAles: [\"American Brown Ale\", \"English Brown Ale\"],\n  Porters: [\n    \"American Imperial Porter\",\n    \"English Brown Porter\",\n    \"Robust Porter\"\n  ],\n  Stouts: [\n    \"American Stout\",\n    \"American Imperial Stout\",\n    \"Oatmeal Stout\",\n    \"Milk Stout\",\n    \"Irish Dry Stout\"\n  ],\n  BelgianStyle: [\n    \"Belgian Pale Ale\",\n    \"Belgian Dubbel\",\n    \"Belgian Tripel\",\n    \"Belgian Quadrupel\",\n    \"Belgian Strong Dark Ale\",\n    \"Belgian Saison\"\n  ],\n  Wheat: [\n    \"American Pale Wheat\",\n    \"Belgian Witbier\",\n    \"Berliner Weisse\",\n    \"Dunkelweizen\",\n    \"Hefeweizen\"\n  ],\n  Sour: [\n    \"American Sour\",\n    \"Belgian Fruit Lambic\",\n    \"Flanders Red Ale\",\n    \"Belgian Gueuze\"\n  ],\n  Specialty: [\n    \"American Black Ale\",\n    \"Barrel-Aged\",\n    \"Chocolate\",\n    \"Coffee\",\n    \"Fruit and Vegetable\",\n    \"Gluten-free\",\n    \"Herb and Spice\",\n    \"Honey\",\n    \"Pumpkin\",\n    \"Rye\",\n    \"Session\",\n    \"Smoked\",\n    \"Seasonal\",\n    \"Other\"\n  ]\n};\n\nexport default beerTypes;\n","import React from \"react\";\nimport beerTypes from \"./BeerTypes\";\nconst uniqid = require(\"uniqid\");\n\nexport const typeMap = Object.entries(beerTypes).map(([key, value]) => {\n  return (\n    <optgroup key={uniqid()} label={key.split(/(?=[A-Z])/).join(\" \")}>\n      {value.map(type => (\n        <option key={uniqid()} value={type}>\n          {type}\n        </option>\n      ))}\n    </optgroup>\n  );\n});\n\n//Iterate over object, return the optgroup with the key name, then map each key's array to display the options within that optgroup\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { deleteBeer, updateBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  deleteBeer,\n  updateBeer,\n  fetchBeers,\n};\n\nclass EditBeer extends Component {\n  state = {\n    id: this.props.id,\n    name: this.props.name,\n    type: this.props.type,\n    brewery: this.props.brewery,\n    breweryLocation: this.props.breweryLocation,\n    url: this.props.url,\n  };\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const updatedBeer = {\n      name: this.state.name,\n      type: this.state.type,\n      brewery: this.state.brewery,\n      breweryLocation: this.state.breweryLocation,\n      url: this.state.url,\n    };\n    try {\n      const id = this.state.id;\n      await this.props.updateBeer(updatedBeer, id);\n      swal({\n        title: `You've updated the ${this.state.name} Beer`,\n        icon: \"success\",\n        button: \"Sweet!\",\n      });\n      this.props.closeModal();\n      this.props.fetchBeers();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  deleteBeerAlert = () => {\n    swal({\n      title: `Delete ${this.props.name}?`,\n      text: `Do you really want to delete this beer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        swal(`Hasta la Vista! ${this.props.name} has been deleted!`, {\n          icon: \"success\",\n        });\n        await this.props.deleteBeer(this.props.id);\n        await this.props.fetchBeers();\n        this.props.closeModal();\n      } else {\n        swal(`Today is your luck day, you sweet sweet miracle drink!`);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>Edit Beer</h2>\n            <div className={classes.ModalContent}>\n              {/* <img\n                className={classes.ModalImage}\n                src={this.props.url}\n                alt={this.props.name}\n              /> */}\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    defaultValue={this.props.name}\n                    onChange={(e) => this.handleInputChange(e)}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={this.props.type}\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option defaultValue={this.props.type}>\n                        {this.props.type}\n                      </option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    defaultValue={this.props.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    defaultValue={this.props.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"url\"\n                    className={classes.Input}\n                    defaultValue={this.props.url}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"url\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                  />\n                </div>\n              </form>\n              <DeleteIcon delete={() => this.deleteBeerAlert()} />\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  id: state.modal.info._id,\n  name: state.modal.info.name,\n  type: state.modal.info.type,\n  brewery: state.modal.info.brewery,\n  breweryLocation: state.modal.info.breweryLocation,\n  url: state.modal.info.url,\n});\n\nexport default connect(mapStateToProps, actions)(EditBeer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { createBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  createBeer,\n  fetchBeers,\n};\n\nclass NewBeerModal extends Component {\n  state = {\n    name: \"\",\n    type: \"\",\n    brewery: \"\",\n    breweryLocation: \"\",\n    url: \"\",\n  };\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newBeer = {\n        name: this.state.name,\n        type: this.state.type,\n        brewery: this.state.brewery,\n        breweryLocation: this.state.breweryLocation,\n        url: this.state.beerUrl,\n        finished: false,\n      };\n      await this.props.createBeer(newBeer);\n      swal({\n        title: `${this.state.name} has been created!`,\n        icon: \"success\",\n        button: \"Cool!\",\n      });\n      console.log(\"Fetching beers...\");\n      await this.props.fetchBeers();\n      this.props.closeModal();\n    } catch (e) {\n      console.error(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>New Beer</h2>\n            <div className={classes.ModalContent}>\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.props.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    value={this.state.name}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={null}\n                    value={this.state.type}\n                    placeholder=\"Beer Type\"\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option value={this.state.type}>{this.state.type}</option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    value={this.state.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    value={this.state.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"beerUrl\"\n                    className={classes.Input}\n                    value={this.state.beerUrl}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"beerUrl\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                    formNoValidate\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(NewBeerModal);\n","import React, { Component } from \"react\";\nimport EditCustomer from \"./EditCustomer\";\nimport NewCustomer from \"./NewCustomer\";\nimport EditBeer from \"./EditBeer\";\nimport NewBeer from \"./NewBeer\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass RenderModal extends Component {\n  static propTypes = {\n    modalType: PropTypes.string,\n  };\n\n  render() {\n    let renderedModal = this.props.modalType;\n    switch (renderedModal) {\n      case \"EDIT_CUSTOMER\":\n        return <EditCustomer />;\n      case \"NEW_CUSTOMER\":\n        return <NewCustomer />;\n      case \"EDIT_BEER\":\n        return <EditBeer />;\n      case \"NEW_BEER\":\n        return <NewBeer />;\n      case \"BEER_LIST\":\n        console.log(\"Beer List\");\n        return <></>;\n      default:\n        return <></>;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  modalType: state.modal.modalType,\n});\n\nexport default connect(mapStateToProps)(RenderModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBeers } from \"../actions/beerActions\";\nimport { fetchCustomers, createCustomer } from \"../actions/customerActions\";\nimport { readString } from \"react-papaparse\";\n\n\nconst actions = { fetchBeers, fetchCustomers, createCustomer };\nconst csvFile = require(\"./Test.csv\");\n\nclass LoadExistingDatabase extends Component {\n  state = {\n    existingCustomers: \"\",\n  };\n\n  runConversionAlogrithm = async () => {\n    const list = this.props.beers;\n    let existingCustomersArray = [];\n\n    const results = readString(csvFile, {\n      delimiter: \",\",\n      download: true,\n      complete: function (results) {\n        let headers = results.data[0];\n        let i = 1;\n        while (i < results.data.length) {\n          let customer = results.data[i];\n          let temp = {\n            name: {\n              first: customer[1],\n              last: customer[2],\n            },\n            mugClub: {\n              completed: null,\n              clubId: parseInt(customer[0]),\n              beers: populateBeersList(headers, customer),\n            },\n            beersCompleted: parseInt(customer[3]),\n          };\n\n          if (customer[3] >= list.length) {\n            temp.mugClub.completed = true;\n          } else {\n            temp.mugClub.completed = false;\n          }\n          existingCustomersArray.push(temp);\n          i++;\n        }\n      },\n    });\n\n    const populateBeersList = async (headers, customer) => {\n      let beerList = [...this.props.beers];\n      let map = await this.mapBeers(headers, customer);\n\n      let temp = [];\n      for (let [key, value] of Object.entries(map)) {\n        for (let beer in beerList) {\n          if (beerList[beer].name === key && value.finished === true) {\n            const merged = { ...beerList[beer], ...value };\n            temp.push(merged);\n          } else if (beerList[beer].name === key) {\n            temp.push(beerList[beer]);\n          }\n        }\n      }\n      return temp;\n    };\n\n    this.setState({\n      existingCustomers: existingCustomersArray,\n    });\n    console.table(this.state.existingCustomers);\n  }\n\n  mapBeers = (headers, customer) => {\n    let map = {};\n    for (let i = 5; i < customer.length; i++) {\n      const beer = headers[i];\n      if (customer[i] === \"1\") {\n        map[beer] = {\n          finished: true,\n        };\n      } else {\n        map[beer] = {\n          finished: false,\n        };\n      }\n    }\n    return map;\n  }\n\n  \n  saveCustomersToDatabase = (customersArray) => {\n    for (let customer of customersArray) {\n      const newCustomer = {\n        name: {\n          first: customer.name.first,\n          last: customer.name.last,\n        },\n        mugClub: {\n          completed: customer.mugClub.completed,\n          clubId: customer.mugClub.clubId,\n          beers: customer.mugClub.beers,\n        },\n      };\n      this.props.createCustomer(newCustomer);\n      console.log(newCustomer);\n      \n      // console.log(\"Customer created\");\n    }\n  };\n\n  render() {\n    const { customers } = this.state;\n    return (\n      <div>\n        <button\n          onClick={() =>\n            this.runConversionAlogrithm()\n          }>\n          Run Alogrithm\n        </button>\n        <button\n          onClick={() =>\n            this.saveCustomersToDatabase(this.state.existingCustomers)\n          }>\n          Save Customers\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  beers: state.beers.beers,\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(LoadExistingDatabase);\n","import React, { Component } from \"react\";\nimport Routing from \"../components/Routing\";\nimport Backdrop from \"../components/Backdrop\";\nimport RenderModal from \"../components/RenderModal\";\nimport LoadExistingCustomers from \"../containers/LoadExistingDatabase\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { loadUser } from \"../actions/authActions\";\nimport { fetchBeers } from \"../actions/beerActions\";\nimport { fetchCustomers } from \"../actions/customerActions\";\nconst actions = { loadUser, fetchBeers, fetchCustomers };\n\nclass Container extends Component {\n  state = {};\n\n  componentDidMount = async () => {\n    // Checks if there is a token present on page refresh,\n    // then loads the current user\n    const { token, isAuthenticated } = await this.props.auth;\n    if (token) {\n      this.props.loadUser();\n      setTimeout(this.loadDatabase, 1000);\n    }\n  };\n\n  loadDatabase = async () => {\n    const { token } = this.props.auth;\n    if (token) {\n      try {\n        this.props.fetchBeers();\n        this.props.fetchCustomers();\n      } catch (error) {\n        throw new Error(\n          \"Cannot connect to database. Server may be busy or unavailable.\"\n        );\n      }\n    } else {\n      //Add error redirect to login page -> due to database not loading\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Routing />\n        {/* Only run in Production <LoadExistingCustomers /> */}\n        <Backdrop></Backdrop>\n        <RenderModal />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, actions)(Container);\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  beers: []\n};\n\nexport default function beerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_BEERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_BEERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        beers: action.payload\n      };\n    case FETCH_BEERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        beers: []\n      };\n    case CREATE_BEER:\n      return {\n        ...state,\n        beers: [...state.beers, action.payload]\n      };\n    case DELETE_BEER:\n      return {\n        ...state,\n        beers: state.beers.filter(beer => beer._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  showEditCustomerModal: false,\n  customers: []\n};\n\nexport default function customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CUSTOMERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_CUSTOMERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        customers: action.payload\n      };\n    case FETCH_CUSTOMERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        customers: []\n      };\n    case CREATE_CUSTOMER:\n      return {\n        ...state,\n        customers: [action.payload, ...state.customers]\n      };\n    case DELETE_CUSTOMER:\n      return {\n        ...state,\n        customers: state.customers.filter(\n          customer => customer._id !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/action-types\";\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/action-types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    // case REAUTHENTICATE:\n    //     return {\n    //       ...state, \n    //       isAuthenticated: true\n    //     }\n    default:\n      return state;\n  }\n}\n","import {\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  OPEN_NAV,\n  CLOSE_NAV,\n} from \"../actions/action-types\";\n\nconst initialState = {\n  modalType: \"\",\n  modalOpen: false,\n  navOpen: false,\n  error: null,\n  info: null,\n};\n\nexport default function modalReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalOpen: true,\n        modalType: action.payload.modalType,\n        info: action.payload.data,\n        error: null,\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalOpen: false,\n        modalType: \"\",\n        info: null,\n        error: null,\n      };\n    case OPEN_NAV:\n      return {\n        ...state,\n        navOpen: true,\n        error: null,\n      };\n    case CLOSE_NAV:\n      return {\n        ...state,\n        navOpen: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport beerReducer from \"./beerReducer\";\nimport customerReducer from \"./customerReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport modalReducer from \"./modalReducer\";\n\nexport default combineReducers({\n  beers: beerReducer,\n  customers: customerReducer,\n  auth: authReducer,\n  error: errorReducer,\n  modal: modalReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nlet store;\n\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  )\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\n\n\n\nexport default store;\n","import React from \"react\";\nimport \"../css/App.css\";\nimport Container from \"../containers/Container\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomerCard\":\"Customer_CustomerCard__194L9\",\"TitleContainer\":\"Customer_TitleContainer__2I3v_\",\"Completed\":\"Customer_Completed__20Oce\",\"CustomerTitle\":\"Customer_CustomerTitle__3WyTr\",\"ButtonContainer\":\"Customer_ButtonContainer__3EM2k\",\"Span\":\"Customer_Span__Mdy56\",\"CheckIcon\":\"Customer_CheckIcon__3cZZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Search_InputContainer__EV67Y\",\"SearchTitle\":\"Search_SearchTitle__2cVn2\",\"Group\":\"Search_Group__2sFLS\",\"Input\":\"Search_Input__3yxj7\",\"Label\":\"Search_Label__3QGEQ\",\"AddIcon\":\"Search_AddIcon__ThTYn\",\"CustomerContainer\":\"Search_CustomerContainer__1720d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayContainer\":\"BeerDisplay_DisplayContainer__m4NDd\",\"BeersTitle\":\"BeerDisplay_BeersTitle__1fJIo\",\"ListContainer\":\"BeerDisplay_ListContainer__1pVdd\",\"ListItem\":\"BeerDisplay_ListItem__VcB7F\",\"AddIcon\":\"BeerDisplay_AddIcon__783QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContainer\":\"BeersList_ListContainer__2dnCL\",\"Item\":\"BeersList_Item__1JPF1\",\"NameContainer\":\"BeersList_NameContainer__1I9B8\",\"Avatar\":\"BeersList_Avatar__3s5nj\",\"Completed\":\"BeersList_Completed__1_Co_\",\"FinishedCheckbox\":\"BeersList_FinishedCheckbox__3f4Y1\",\"CheckIcon\":\"BeersList_CheckIcon__2_kNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3f-j8\",\"Modal\":\"Backdrop_Modal__ls4pp\",\"Nav\":\"Backdrop_Nav__3CfBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditButton\":\"Icons_EditButton__1XMCS\",\"DeleteButton\":\"Icons_DeleteButton__H3TUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__1JihT\",\"LoginContainer\":\"Login_LoginContainer__1dsSN\",\"Group\":\"Login_Group__3Eheb\",\"Input\":\"Login_Input__1O-uz\",\"Label\":\"Login_Label__8s_y6\",\"ButtonContainer\":\"Login_ButtonContainer__X9VWm\",\"Button\":\"Login_Button__2ZHXe\",\"Back\":\"Login_Back__-LXR0\",\"Error\":\"Login_Error__2T70R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BgImage\":\"Home_BgImage__HvnmK\",\"Container\":\"Home_Container__2VrjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"NavBar_Navbar__2rhEp\",\"List\":\"NavBar_List__1JPHj\",\"Link\":\"NavBar_Link__tN1Hz\",\"NewButton\":\"NavBar_NewButton__3sFG3\",\"Logout\":\"NavBar_Logout__3Ro_N\",\"HamburgerContainer\":\"NavBar_HamburgerContainer__28OdJ\",\"HamburgerList\":\"NavBar_HamburgerList__1wXFj\",\"HamburgerItem\":\"NavBar_HamburgerItem__3sXUo\",\"LinkDiv\":\"NavBar_LinkDiv__1NijY\"};"],"sourceRoot":""}