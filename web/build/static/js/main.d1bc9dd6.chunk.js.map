{"version":3,"sources":["css/Modals.module.css","components/ErrorMessage.js","actions/errorActions.js","actions/action-types.js","actions/authActions.js","components/Register.js","components/Login.js","containers/LoginContainer.js","components/Home.js","pages/homePage.js","components/DeleteIcon.js","components/EditIcon.js","components/Customer.js","actions/modalActions.js","actions/customerActions.js","components/Search.js","lib/filterCustomers.js","containers/SearchContainer.js","pages/searchPage.js","components/BeerDisplay.js","actions/beerActions.js","containers/BeersContainer.js","pages/beersPage.js","components/Account.js","pages/accountPage.js","actions/navActions.js","components/Backdrop.js","components/HamburgerNav.js","components/RegularNav.js","components/NavBar.js","pages/Routing.js","components/BeersList.js","components/EditCustomer.js","components/NewCustomer.js","lib/BeerTypes.js","lib/TypeMap.js","components/EditBeer.js","components/NewBeer.js","components/RenderModal.js","containers/AppContainer.js","reducers/beerReducer.js","reducers/customerReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","store.js","pages/App.js","serviceWorker.js","index.js","css/Customer.module.css","css/Search.module.css","css/BeerDisplay.module.css","css/BeersList.module.css","css/Backdrop.module.css","css/Icons.module.css","css/Home.module.css","css/LoginContainer.module.css","css/Account.module.css","css/NavBar.module.css"],"names":["module","exports","connect","error","className","classes","Error","returnErrors","message","status","id","type","payload","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","token","auth","config","headers","Authorization","actions","closeRegister","props","onSubmit","e","LoginContainer","Group","name","onChange","Input","required","Bar","htmlFor","Label","Button","onClick","Back","icon","faArrowAltCircleLeft","openRegister","ButtonContainer","login","email","password","body","JSON","stringify","post","register","clearErrors","state","setState","target","value","preventDefault","user","onSubmitReg","newUser","prevProps","this","isAuthenticated","registerOpen","to","Container","Title","Component","Home","BgImage","HomePage","DeleteIcon","DeleteButton","delete","faTrashAlt","EditIcon","edit","EditButton","faPencilAlt","modalOpen","modal","CustomerCard","completed","TitleContainer","Completed","CustomerTitle","first","last","CheckIcon","faCheckCircle","CustomerDetails","clubId","Span","calculateCompletedBeers","beers","length","openModal","deleteCustomer","modalType","closeModal","URL","fetchCustomers","fetchCustomersBegin","fetch","json","customers","fetchCustomersSuccess","fetchCustomersFailure","uniqid","require","Search","search","updateSearch","event","customer","swal","title","text","buttons","dangerMode","willDelete","_id","arr","count","i","finished","filteredCustomers","loading","filtered","filter","mugClub","toString","number","strings","toLowerCase","includes","filterCustomers","mappedCustomers","slice","map","key","username","openBeerModal","toggleCustomerBeersModal","Background","InputContainer","SearchTitle","AddIcon","faPlus","defaultValue","CustomerContainer","SearchContainer","componentDidMount","a","loadDatabase","SearchPage","beerList","beer","ListItem","dense","button","ListItemAvatar","Avatar","alt","brewery","src","url","DisplayContainer","BeersTitle","List","ListContainer","fetchBeers","fetchBeersBegin","fetchBeersSuccess","fetchBeersFailure","BeersContainer","BeerPage","Account","AccountContainer","InfoContainer","AccountPage","closeNav","navOpen","Backdrop","Modal","Nav","HamburgerList","HamburgerItem","LinkDiv","faSearch","faBeer","comboToggle","logoutAlert","faUserTimes","Item","urlName","Link","NewButton","Logout","logout","openNav","NavBar","willLogout","push","Navigation","Navbar","role","aria-label","HamburgerContainer","isOpen","exact","path","React","useState","checked","setChecked","unchecked","setUnchecked","handleToggle","currentIndex","indexOf","newChecked","splice","console","log","mappedBeers","styles","NameContainer","checkForIcon","handleSubmit","CancelButton","updateCustomer","put","updateCustomerBeers","updatedBeers","EditCustomer","customerId","customerBeers","updateCompletedBeers","k","h","checkCompletion","handleInputChange","updatedCustomer","ModalContainer","Grow","in","ModalTitle","ModalContent","Form","BeerLabel","BeersList","toggleModal","info","createCustomer","newCustomer","NewCustomer","customerIdCheck","enteredValue","ModalForm","formNoValidate","beerTypes","PaleAles","IndianPaleAles","Lagers","DarkLagers","GermanBocks","BrownAles","Porters","Stouts","BelgianStyle","Wheat","Sour","Specialty","typeMap","Object","entries","label","split","join","deleteBeer","updateBeer","beerURL","EditBeer","breweryLocation","updatedBeer","deleteBeerAlert","Select","createBeer","newBeer","NewBeerModal","beerUrl","placeholder","NewBeer","AppContainer","initialState","showEditCustomerModal","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,MAAQ,sBAAsB,WAAa,2BAA2B,aAAe,6BAA6B,WAAa,2BAA2B,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,sBAAsB,UAAY,0BAA0B,OAAS,uBAAuB,gBAAkB,gCAAgC,WAAa,2BAA2B,aAAe,+B,qKCa5fC,cAAQ,KAVP,GAUDA,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,oCACE,6BACE,wBAAIC,UAAWC,IAAQC,OAAQH,Q,iCCNxBI,EAAe,SAACC,EAASC,GAAuB,IAAfC,EAAc,uDAAT,KACjD,MAAO,CACLC,KCiBsB,aDhBtBC,QAAS,CAAEJ,UAASC,SAAQC,QEanBG,EAAW,kBAAM,SAACC,EAAUC,GAEvCD,EAAS,CAAEH,KDPe,iBCS1BK,IACGC,IAGK,kDACJC,EAAYH,IAEbI,MAAK,SAACC,GAAD,OACJN,EAAS,CACPH,KDjBmB,cCkBnBC,QAASQ,EAAIC,UAIhBC,OAAM,SAACC,GACNT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,SACtDK,EAAS,CACPH,KDxBkB,oBC2GbO,EAAc,SAACH,GAE1B,IAAMU,EAAQV,IAAWW,KAAKD,MAGxBE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,KAS7B,OAJIA,IACFE,EAAOC,QAAQ,gBAAkBH,GAG5BE,GCnIHG,EAAU,CAAEC,cDiJW,WAC3B,OAAO,SAAUjB,GACfA,EAAS,CACPH,KD1HwB,mBC4H1BG,EAAS,CACPH,KDzIsB,oBE6CbT,cAAQ,KAAM4B,EAAd5B,EAzDE,SAAC8B,GAChB,OACE,0BAAMC,SAAU,SAACC,GAAD,OAAOF,EAAMC,SAASC,KACpC,yBAAK9B,UAAWC,IAAQ8B,gBACvBH,EAAM7B,OAAS,kBAAC,EAAD,CAAcA,MAAO6B,EAAM7B,QACzC,yBAAKC,UAAWC,IAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,OACLC,SAAUN,EAAMM,SAChBlC,UAAWC,IAAQkC,MACnBC,UAAQ,IAEV,0BAAMpC,UAAWC,IAAQoC,MACzB,2BAAOC,QAAQ,OAAOtC,UAAWC,IAAQsC,OAAzC,SAIF,yBAAKvC,UAAWC,IAAQ+B,OACtB,2BACEzB,KAAK,QACL0B,KAAK,QACLC,SAAUN,EAAMM,SAChBlC,UAAWC,IAAQkC,MACnBC,UAAQ,IAEV,0BAAMpC,UAAWC,IAAQoC,MACzB,2BAAOC,QAAQ,QAAQtC,UAAWC,IAAQsC,OAA1C,UAIF,yBAAKvC,UAAWC,IAAQ+B,OACtB,2BACEzB,KAAK,WACL0B,KAAK,WACLC,SAAUN,EAAMM,SAChBlC,UAAWC,IAAQkC,MACnBC,UAAQ,IAEV,0BAAMpC,UAAWC,IAAQoC,MACzB,2BAAOC,QAAQ,WAAWtC,UAAWC,IAAQsC,OAA7C,aAIF,4BAAQhC,KAAK,SAAS0B,KAAK,WAAWjC,UAAWC,IAAQuC,QAAzD,YAGA,yBACEC,QAAS,kBAAMb,EAAMD,iBACrB3B,UAAWC,IAAQyC,MACnB,kBAAC,IAAD,CAAiBC,KAAMC,YCvD3BlB,EAAU,CAAEmB,aFyIU,WAC1B,OAAO,SAAUnC,GACfA,EAAS,CACPH,KDhHuB,kBCkHzBG,EAAS,CACPH,KD9HsB,oBGgCbT,cAAQ,KAAM4B,EAAd5B,EA/CD,SAAC8B,GAAD,OACZ,oCACE,0BAAMC,SAAUD,EAAMC,UACpB,yBAAK7B,UAAWC,IAAQ8B,gBAErBH,EAAM7B,OAAS,kBAAC,EAAD,CAAcA,MAAO6B,EAAM7B,QAC3C,yBAAKC,UAAWC,IAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,QACLjC,UAAWC,IAAQkC,MACnBD,SAAUN,EAAMM,SAChBE,UAAQ,IAEV,2BAAOE,QAAQ,QAAQtC,UAAWC,IAAQsC,OAA1C,UAIF,yBAAKvC,UAAWC,IAAQ+B,OACtB,2BACEzB,KAAK,WACL0B,KAAK,WACLjC,UAAWC,IAAQkC,MACnBD,SAAUN,EAAMM,SAChBE,UAAQ,IAEV,2BAAOE,QAAQ,WAAWtC,UAAWC,IAAQsC,OAA7C,aAIF,yBAAKvC,UAAWC,IAAQ6C,iBACtB,4BAAQvC,KAAK,SAAS0B,KAAK,QAAQjC,UAAWC,IAAQuC,QAAtD,SAGA,4BACEP,KAAK,WACLQ,QAAS,kBAAMb,EAAMiB,gBACrB7C,UAAWC,IAAQuC,QAHrB,mB,QC/BJd,EAAU,CACdqB,MH6EmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyB,SAACvC,GAC7C,IAMMwC,EAAOC,KAAKC,UAAU,CAAEJ,QAAOC,aACrCrC,IACGyC,KAGK,6CACJH,EAZW,CACb1B,QAAS,CACP,eAAgB,sBAajBT,MAAK,SAACC,GACLN,EAAS,CACPH,KD1FqB,gBC2FrBC,QAASQ,EAAIC,UAIhBC,OAAM,SAACC,GACNT,EACEP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,OAAQ,eAEvDK,EAAS,CACPH,KDnGkB,oBILxB+C,SHiCsB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,KAAMe,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,OAA+B,SAACvC,GACtD,IAOMwC,EAAOC,KAAKC,UAAU,CAAEnB,OAAMe,QAAOC,aAE3CrC,IACGyC,KAGK,8CACJH,EAdW,CACb1B,QAAS,CACP,eAAgB,sBAejBT,MAAK,SAACC,GAAD,OACJN,EAAS,CACPH,KD9CwB,mBC+CxBC,QAASQ,EAAIC,UAIhBC,OAAM,SAACC,GACNT,EACEP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,OAAQ,kBAEvDK,EAAS,CACPH,KDvDqB,uBIP3BgD,YLHyB,WACzB,MAAO,CACLhD,KCUwB,kBIFtBwB,E,4MACJyB,MAAQ,CACNvB,KAAM,GACNe,MAAO,GACPC,SAAU,GACV7C,QAAS,M,EAuBX8B,SAAW,SAACJ,GACV,EAAK2B,SAAL,eAAiB3B,EAAE4B,OAAOzB,KAAOH,EAAE4B,OAAOC,S,EAI5C9B,SAAW,SAACC,GACVA,EAAE8B,iBADc,MAEY,EAAKJ,MAC3BK,EAAO,CACXb,MAJc,EAERA,MAGNC,SALc,EAEDA,UAMf,EAAKrB,MAAMmB,MAAMc,GACjB,EAAKjC,MAAM2B,e,EAGbO,YAAc,SAAChC,GACbA,EAAE8B,iBADiB,MAEe,EAAKJ,MACjCO,EAAU,CACd9B,KAJiB,EAEXA,KAGNe,MALiB,EAELA,MAIZC,SANiB,EAEEA,UAOrB,EAAKrB,MAAM0B,SAASS,GACpB,EAAKnC,MAAM2B,e,iEAvCMS,GAAY,IACrBjE,EAAUkE,KAAKrC,MAAf7B,MACJA,IAAUiE,EAAUjE,QAEL,eAAbA,EAAMO,IAAoC,kBAAbP,EAAMO,GACrC2D,KAAKR,SAAS,CAAErD,QAASL,EAAMK,QAAQA,UAEvC6D,KAAKR,SAAS,CAAErD,QAAS,U,+BAmCrB,IACA8D,EAAoBD,KAAKrC,MAAMN,KAA/B4C,gBACAC,EAAiBF,KAAKrC,MAAMN,KAA5B6C,aAER,OACE,6BACGD,GAAmB,kBAAC,IAAD,CAAUE,GAAG,uBAC/BF,GACA,6BAASlE,UAAWC,IAAQoE,WAC1B,yBAAKrE,UAAWC,IAAQqE,OACtB,0CACA,uDAIAH,GACA,kBAAC,EAAD,CACEtC,SAAUoC,KAAKpC,SACf9B,MAAOkE,KAAKT,MAAMpD,QAClB8B,SAAU+B,KAAK/B,WAIlBiC,GACC,kBAAC,EAAD,CACEtC,SAAUoC,KAAKH,YACf/D,MAAOkE,KAAKT,MAAMpD,QAClB8B,SAAU+B,KAAK/B,iB,GArFFqC,aA+FdzE,eApGS,SAAC,GAAD,MAAsB,CAC5CwB,KADsB,EAAGA,KAEzBvB,MAFsB,EAASA,SAoGO2B,EAAzB5B,CAAkCiC,GCrGlCyC,EAXF,WACX,OACE,oCACE,yBAAKxE,UAAWC,IAAQwE,UACxB,yBAAKzE,UAAWC,IAAQoE,WACtB,kBAAC,EAAD,SCFOK,EAJE,SAAC9C,GAChB,OAAO,kBAAC,EAAD,O,4ECOM+C,EANI,SAAC/C,GAAD,OACjB,4BAAQ5B,UAAWC,IAAQ2E,aAAcnC,QAASb,EAAMiD,QACtD,kBAAC,IAAD,CAAiBlC,KAAMmC,QCIZC,EANE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,4BAAQhF,UAAWC,IAAQgF,WAAYxC,QAASuC,GAC9C,kBAAC,IAAD,CAAiBrC,KAAMuC,QCwCZpF,eAtCS,SAAC,GAAD,MAA+B,CACrDqF,UADsB,EAAGC,MAASD,aAsCrBrF,EAlCE,SAAC8B,GAChB,OACE,yBAAK5B,UAAWC,IAAQoF,cACtB,yBACErF,UACE4B,EAAM0D,UAAN,UACOrF,IAAQsF,eADf,YACiCtF,IAAQuF,WACrCvF,IAAQsF,gBAGd,wBAAIvF,UAAWC,IAAQwF,eACpB7D,EAAMK,KAAKyD,MADd,IACsB9D,EAAMK,KAAK0D,KAC9B/D,EAAM0D,UACL,yBAAKtF,UAAWC,IAAQ2F,WACtB,kBAAC,IAAD,CAAiBjD,KAAMkD,OAEvB,MAEN,wBAAI7F,UAAWC,IAAQ6F,iBAAvB,aAAmDlE,EAAMmE,SAE3D,0BAAM/F,UAAWC,IAAQ+F,MACvB,wBAAIhG,UAAWC,IAAQ6F,iBAAvB,oBACoBlE,EAAMqE,wBAAwBrE,EAAMsE,OADxD,KACkE,IAC/DtE,EAAMsE,MAAMC,SAGjB,0BAAMnG,UAAWC,IAAQ6C,iBACvB,kBAAC,EAAD,CAAUkC,KAAMpD,EAAMwE,YACtB,kBAAC,EAAD,CAAYvB,OAAQjD,EAAMyE,sB,iBCvC3B,IAAMD,EAAY,SAACE,GAAD,IAAYrF,EAAZ,uDAAiB,GAAjB,MAAyB,CAChDV,KVsBwB,aUrBxBC,QAAS,CAAC8F,YAAWrF,UAGVsF,EAAa,iBAAO,CAC/BhG,KVkByB,gBWbrBiG,EAEA,mDAGOC,EAAiB,WAC5B,OAAO,SAAC/F,EAAUC,GAEhB,OADAD,EAASgG,KACFC,MAAMH,EAAK1F,EAAYH,IAC3BI,MAAK,SAACC,GAAD,OAASA,EAAI4F,UAClB7F,MAAK,SAAC8F,GAEL,OADAnG,EAASoG,GAAsBD,IACxBA,KAER3F,OAAM,SAACnB,GAAD,OAAWW,EAASqG,GAAsBhH,SAI1C2G,EAAsB,iBAAO,CACxCnG,KXzBmC,0BW4BxBuG,GAAwB,SAACD,GAAD,MAAgB,CACnDtG,KX5BqC,0BW6BrCC,QAASqG,IAGEE,GAAwB,SAAChH,GAAD,MAAY,CAC/CQ,KXhCqC,0BWiCrCC,QAAS,CAAET,WC7BP2B,GAAU,CACd0E,YACAC,eDqD4B,SAAC/F,GAAD,OAAQ,SAACI,EAAUC,GAC/CC,IACGiE,OAAO2B,EAAMlG,EAAIQ,EAAYH,IAC7BI,MAAK,SAACC,GAAD,OACJN,EAAS,CACPH,KX7DuB,kBW8DvBC,QAASF,OAGZY,OAAM,SAACC,GAAD,OACLT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,eCtDtD2G,GAASC,EAAQ,IAEjBC,G,4MACJ1D,MAAQ,CACN2D,OAAQ,I,EAOVC,aAAe,SAACC,GACd,EAAK5D,SAAS,CAAE0D,OAAQE,EAAM3D,OAAOC,S,EAGvC0C,eAAiB,SAACiB,GAChBC,IAAK,CACHC,MAAM,UAAD,OAAYF,EAASrF,KAAKyD,MAA1B,KACL+B,KAAK,8CACLC,SAAS,EACT/E,KAAM,UACNgF,YAAY,IACX5G,MAAK,SAAC6G,GACHA,GACFL,IAAK,SAAD,OACOD,EAASrF,KAAKyD,MADrB,YAC8B4B,EAASrF,KAAK0D,KAD5C,sBAEF,CACEhD,KAAM,YAGV,EAAKf,MAAMyE,eAAeiB,EAASO,MAEnCN,IAAK,SAAD,OAAUD,EAASrF,KAAKyD,MAAxB,kB,EAKVO,wBAA0B,SAAC6B,GACzB,GAAIA,EAAK,CAEP,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAIF,EAAI3B,OAAQ6B,KACN,IAApBF,EAAIE,GAAGC,UACTF,IAGJ,OAAOA,I,uDAID,IAIJG,EAJG,OACCf,EAAWlD,KAAKT,MAAhB2D,OACFN,EAAY5C,KAAKrC,MAAMiF,UACvBsB,EAAUlE,KAAKrC,MAAMuG,QAE3B,GAAItB,GAAaM,EAAQ,CACvB,GAAIgB,EAAS,OAAO,0CACpBD,EChFS,WAAkD,IAAzBrB,EAAwB,uDAAZ,GAAIM,EAAQ,uCAC1DiB,EAAWvB,EAAUwB,QAAO,SAACf,GAE/B,IAAIhH,EAAKgH,EAASgB,QAAQvC,OAAOwC,WAC7BC,EAASrB,IAAW7G,EAAKgH,EAAW,KAGpCmB,EACFnB,EAASrF,KAAKyD,MAAMgD,cAAcC,SAASxB,EAAOuB,gBAClDpB,EAASrF,KAAK0D,KAAK+C,cAAcC,SAASxB,EAAOuB,eAEnD,OAAID,IAGAD,GAGG,SAET,OAAOJ,ED6DiBQ,CAAgB/B,EAAWM,GAGjD,IAAM0B,EAAkBX,EACpBA,EAAkBY,MAAM,EAAG,IAAIC,KAAI,SAACzB,GAClC,OACE,kBAAC,EAAD,CACE0B,IAAKhC,KACL/E,KAAMqF,EAASrF,KACfe,MAAOsE,EAAStE,MAChBiG,SAAU3B,EAAS2B,SACnBlD,OAAQuB,EAASgB,QAAQvC,OACzBG,MAAOoB,EAASgB,QAAQpC,MACxBZ,UAAWgC,EAASgB,QAAQhD,UAC5Bc,UAAW,kBAAM,EAAKxE,MAAMwE,UAAU,gBAAiBkB,IACvD4B,cAAe,kBACb,EAAKtH,MAAMuH,yBAAyB7B,IAEtCrB,wBAAyB,EAAKA,wBAC9BI,eAAgB,kBAAM,EAAKA,eAAeiB,SAIhD,KACJ,OACE,oCACE,yBAAKtH,UAAWC,IAAQmJ,YACtB,yBAAKpJ,UAAWC,IAAQoJ,gBACtB,wBAAIrJ,UAAWC,IAAQqJ,aAAvB,mBAEE,yBACEtJ,UAAWC,IAAQsJ,QACnB9G,QAAS,kBAAM,EAAKb,MAAMwE,UAAU,kBAEpC,kBAAC,IAAD,CAAiBzD,KAAM6G,QAG3B,yBAAKxJ,UAAWC,IAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,SACLjC,UAAWC,IAAQkC,MACnBsH,aAAcxF,KAAKT,MAAM2D,OACzBjF,SAAU+B,KAAKmD,aACfhF,UAAQ,IAEV,2BAAOE,QAAQ,SAAStC,UAAWC,IAAQsC,OAA3C,qCAKF,yBAAKvC,UAAWC,IAAQyJ,mBACrBvC,GACC,oCACE,wCACC0B,EACD,uD,GA9GGtE,aAyHNzE,gBAlIS,SAAC,GAAiD,IAA/CwB,EAA8C,EAA9CA,KAA8C,IAAxCuF,UAC/B,MAAO,CACLA,UAFqE,EAA3BA,UAG1CsB,QAHqE,EAAhBA,QAIrD7G,KAAMA,KA8H8BI,GAAzB5B,CAAkCoH,IE5I3CxF,GAAU,CACdjB,WACAgG,kBAOIkD,G,4MACJC,kB,sBAAoB,gCAAAC,EAAA,2DACW,EAAKjI,MAAMN,KAAhCD,EADU,EACVA,MAAOwF,EADG,EACHA,WACXxF,GAAUwF,EAFI,gCAGV,EAAKjF,MAAMnB,WAHD,uBAIV,EAAKqJ,aAAazI,GAJR,2C,EAQpByI,aAAe,SAACzI,GACd,GAAIA,EACF,IACE,EAAKO,MAAM6E,iBACX,MAAO1G,GACP,MAAM,IAAIG,MACR,oE,uDASN,OAAO,kBAAC,GAAD,U,GAxBmBqE,aA4BfzE,gBAjCS,SAAC,GAAD,MAAyC,CAC/DwB,KADsB,EAAGA,KAEzBuF,UAFsB,EAASA,UAAaA,aAiCNnF,GAAzB5B,CAAkC6J,ICrClCI,GAJI,SAACnI,GAClB,OAAO,kBAAC,GAAD,O,4DCQHF,GAAU,CAAE0E,YAAWG,cAKvBS,GAASC,EAAQ,IAiDRnH,gBArDS,SAAC,GAAD,QAAGoG,MAAH,MAAoC,CAC1DA,MADsB,EAAYA,MAElCiC,QAFsB,EAAmBA,WAqDHzG,GAAzB5B,EA/CK,SAAC8B,GAAW,IACtBsE,EAAUtE,EAAVsE,MACF8D,EAAW9D,EACbA,EAAM6C,KAAI,SAACkB,GACT,OACE,kBAACC,GAAA,EAAD,CACElB,IAAKhC,KACLmD,OAAK,EACLC,QAAM,EACNpK,UAAWC,KAAQiK,SACnBzH,QAAS,kBAAMb,EAAMwE,UAAU,YAAa6D,KAE5C,kBAACI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEtK,UAAWC,KAAQqK,OACnBC,IAAG,UAAKN,EAAKO,SACbC,IAAKR,EAAKS,OAGd,yBAAK1K,UAAWC,KAAQ+B,OACtB,4BAAKiI,EAAKO,SACV,4BAAKP,EAAKhI,WAKlB,KAEJ,OACE,6BAASjC,UAAWC,KAAQ0K,kBAC1B,wBAAI3K,UAAWC,KAAQ2K,YAAvB,aAEE,yBACE5K,UAAWC,KAAQsJ,QACnB9G,QAAS,kBAAMb,EAAMwE,UAAU,cAE/B,kBAAC,IAAD,CAAiBzD,KAAM6G,QAG3B,kBAACqB,GAAA,EAAD,CAAMV,OAAK,EAACnK,UAAWC,KAAQ6K,eAC5BlJ,EAAMuG,SAAW,oDACjB6B,OCjDHxD,GACJ,+CAGWuE,GAAa,WACxB,OAAO,SAACrK,EAAUC,GAEhB,OADAD,EAASsK,MACFrE,MAAMH,GAAK1F,EAAYH,IAC3BI,MAAK,SAAAC,GAAG,OAAIA,EAAI4F,UAChB7F,MAAK,SAAAmF,GAEJ,OADAxF,EAASuK,GAAkB/E,IACpBA,KAERhF,OAAM,SAAAnB,GAAK,OAAIW,EAASwK,GAAkBnL,SAIpCiL,GAAkB,iBAAO,CACpCzK,KjB7B+B,sBiBgCpB0K,GAAoB,SAAA/E,GAAK,MAAK,CACzC3F,KjBhCiC,sBiBiCjCC,QAAS0F,IAGEgF,GAAoB,SAAAnL,GAAK,MAAK,CACzCQ,KjBpCiC,sBiBqCjCC,QAAS,CAAET,WClCP2B,GAAU,CAAEjB,WAAUsK,eAMtBI,G,4MACJvB,kB,sBAAoB,gCAAAC,EAAA,2DACO,EAAKjI,MAAMN,KAA5BD,EADU,EACVA,MAAO6E,EADG,EACHA,OACX7E,GAAU6E,EAFI,gCAGV,EAAKtE,MAAMnB,WAHD,uBAIV,EAAKqJ,aAAazI,GAJR,2C,EAQpByI,aAAe,SAACzI,GACd,GAAIA,EACF,IACE,EAAKO,MAAMmJ,aACX,MAAOjJ,GACP,MAAM,IAAI5B,MACR,oE,uDAMN,OAAO,kBAAC,GAAD,U,GArBkBqE,aAyBdzE,gBA9BS,SAAC,GAAD,MAAiC,CACvDwB,KADsB,EAAGA,KAEzB4E,MAFsB,EAASA,MAASA,SA8BFxE,GAAzB5B,CAAkCqL,IC7BlCC,GAJE,SAACxJ,GAChB,OAAO,kBAAC,GAAD,O,oBCaMyJ,GAdC,SAAAzJ,GAAK,OACnB,oCACE,yBAAK5B,UAAWC,KAAQqL,kBACtB,uCACA,yBAAKtL,UAAWC,KAAQsL,eACtB,oCACA,qCACA,8CACA,kDCFOC,GANK,SAAA5J,GAAK,OACvB,oCACE,kBAAC,GAAD,Q,uCCCS6J,GAAW,iBAAO,CAC7BlL,KtBsBuB,cuBtBnBmB,GAAU,CAAE6E,aAAYkF,aAuBf3L,gBAtBS,SAAC,GAAD,QAAGsF,MAAH,MAAuC,CAC7DD,UADsB,EAAYA,UAElCuG,QAFsB,EAAuBA,WAsBPhK,GAAzB5B,EAjBE,SAAC8B,GAAD,OACf,oCACGA,EAAMuD,WACL,yBACEnF,UAAS,UAAKC,KAAQ0L,SAAb,YAAyB1L,KAAQ2L,OAC1CnJ,QAAS,kBAAMb,EAAM2E,gBAGxB3E,EAAM8J,SACL,yBACE1L,UAAS,UAAKC,KAAQ0L,SAAb,YAAyB1L,KAAQ4L,KAC1CpJ,QAAS,kBAAMb,EAAM6J,kB,SCTvB/J,GAAU,CACd0E,YACAqF,aAgFa3L,eAAQ,KAAM4B,GAAd5B,EA5EM,SAAC8B,GACpB,OACE,wBAAI5B,UAAWC,KAAQ6L,eACrB,kBAAC,KAAD,CACE1H,GAAE,UANM,GAMN,qBACFpE,UAAWC,KAAQ8L,cACnBtJ,QAAS,kBAAMb,EAAM6J,aAErB,yBAAKzL,UAAWC,KAAQ+L,SACtB,6BACE,kBAAC,IAAD,CAAiBrJ,KAAMsJ,OAEzB,wCAGJ,kBAAC,KAAD,CACE7H,GAAE,UAlBM,GAkBN,eACFpE,UAAWC,KAAQ8L,cACnBtJ,QAAS,kBAAMb,EAAM6J,aAErB,yBAAKzL,UAAWC,KAAQ+L,SACtB,6BACE,kBAAC,IAAD,CAAiBrJ,KAAMuJ,OAEzB,uCAGJ,4BACEzJ,QAAS,kBAAMb,EAAMuK,YAAY,iBACjCnM,UAAWC,KAAQ8L,eAEnB,yBAAK/L,UAAWC,KAAQ+L,SACtB,6BACE,kBAAC,IAAD,CAAiBrJ,KAAM6G,OAEzB,8CAGJ,4BACE/G,QAAS,kBAAMb,EAAMuK,YAAY,aACjCnM,UAAWC,KAAQ8L,eAEnB,yBAAK/L,UAAWC,KAAQ+L,SACtB,6BACE,kBAAC,IAAD,CAAiBrJ,KAAM6G,OAEzB,0CAeJ,4BACE/G,QAAS,kBAAMb,EAAMwK,eACrBpM,UAAWC,KAAQ8L,eAEnB,yBAAK/L,UAAWC,KAAQ+L,SACtB,6BACE,kBAAC,IAAD,CAAiBrJ,KAAM0J,OAEzB,6CCnFJ3K,GAAU,CACd0E,aA4CatG,eAAQ,KAAM4B,GAAd5B,EAzCI,SAAC8B,GAAD,OACjB,wBAAI5B,UAAWC,KAAQ4K,MACrB,wBAAI7K,UAAWC,KAAQqM,MACrB,kBAAC,KAAD,CAAMlI,GAAE,UAAKxC,EAAM2K,QAAX,qBAAuCvM,UAAWC,KAAQuM,MAAlE,WAIF,wBAAIxM,UAAWC,KAAQqM,MACrB,kBAAC,KAAD,CAAMlI,GAAE,UAAKxC,EAAM2K,QAAX,eAAiCvM,UAAWC,KAAQuM,MAA5D,eAIF,wBAAIxM,UAAWC,KAAQqM,MACrB,4BACE7J,QAAS,kBAAMb,EAAMwE,UAAU,iBAC/BpG,UAAWC,KAAQwM,WAFrB,iBAOF,wBAAIzM,UAAWC,KAAQqM,MACrB,4BACE7J,QAAS,kBAAMb,EAAMwE,UAAU,aAC/BpG,UAAWC,KAAQwM,WAFrB,aAYF,wBAAIzM,UAAWC,KAAQqM,MACrB,4BAAQ7J,QAAS,kBAAMb,EAAMwK,eAAepM,UAAWC,KAAQyM,QAA/D,gB,oBC5BAhL,I,OAAU,CACdiL,OzBgEoB,WACpB,MAAO,CACLpM,KDjE0B,mB0BA5B6F,YACAwG,QJlBqB,iBAAO,CAC5BrM,KtByBsB,a0BPtBkL,cAOIoB,G,4MACJrJ,MAAQ,G,EAOR4I,YAAc,WACZ7E,IAAK,CACHC,MAAO,WACP7E,KAAM,UACN+E,QAAS,CAAC,SAAU,UACpBC,YAAY,IACX5G,MAAK,SAAC+L,GACHA,EACF,EAAKlL,MAAM+K,SAEXpF,IAAK,oC,EAKX4E,Y,uCAAc,WAAO7F,GAAP,SAAAuD,EAAA,sEACN,EAAKjI,MAAM6J,WADL,uBAEN,EAAK7J,MAAMwE,UAAUE,GAFf,2C,6GAKJ,IAAD,SAE4BrC,KAAKrC,MAAMN,KAAtCD,EAFD,EAECA,MACR,IAHO,EAEQ6C,kBACU7C,EACvB,OAAO,kBAAC,IAAD,CAAU+C,GAAE,UAHL,GAGK,KAAiB2I,MAAM,IAG5C,IAAMC,EACJ,yBAAKhN,UAAWC,KAAQgN,QACtB,uCAEE,0BAAMC,KAAK,MAAMC,aAAW,iBAA5B,iBAIDlJ,KAAKrC,MAAM8J,QACR,kBAAC,GAAD,CACEU,YAAanI,KAAKmI,YAClBD,YAAalI,KAAKkI,YAClBI,QAlBM,KAmBR,kBAAC,GAAD,CACEH,YAAanI,KAAKmI,YAClBG,QArBM,KAuBZ,yBAAKvM,UAAWC,KAAQmN,oBACtB,kBAAC,KAAD,CACEC,OAAQpJ,KAAKrC,MAAM8J,QACnBjJ,QACEwB,KAAKrC,MAAM8J,QACP,kBAAM,EAAK9J,MAAM6J,YACjB,kBAAM,EAAK7J,MAAMgL,eAO/B,OACE,oCACE,kBAAC,GAAD,MACCvL,GAAS2L,O,GApEGzI,aA0ENzE,gBA/ES,SAAC,GAAD,MAAsB,CAC5CwB,KADsB,EAAGA,KAEzBoK,QAFsB,EAAStG,MAEhBsG,WA6EuBhK,GAAzB5B,CAAkC+M,ICpDlC/M,gBArCS,SAAC,GAAD,IAAGwB,EAAH,EAAGA,KAAH,MAAe,CACrCA,KAAMA,EACN4C,gBAAiB5C,EAAK4C,mBAmCTpE,EAhCC,SAAC8B,GACf,IADyB,EAEUA,EAAMN,KAAjCD,EAFiB,EAEjBA,MAAO6C,EAFU,EAEVA,gBAEf,OACE,oCACE,kBAAC,KAAD,MACIA,IAAoB7C,GACpB,kBAAC,IAAD,CAAU+C,GAAE,UAPJ,GAOI,KAAiB2I,MAAM,IAErC,6BACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAI,UAZX,GAYW,MACf,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAfL,GAeK,sBACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAlBL,GAkBK,gBACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UArBL,GAqBK,aACT,kBAAC,GAAD,c,mEChCR7L,GAAU,CAAE0E,YAAWG,cACvBS,GAASC,EAAQ,IAwFRnH,mBAAQ,KAAM4B,GAAd5B,EAtFf,SAAkB8B,GAAQ,IAAD,EACO4L,IAAMC,SAAS,EAAE,IADxB,oBAChBC,EADgB,KACPC,EADO,OAEWH,IAAMC,SAAS,EAAE,IAF5B,oBAEhBG,EAFgB,KAELC,EAFK,KAIjBC,EAAe,SAAC7D,GAAD,OAAU,WAC7B,IAAM8D,EAAeL,EAAQM,QAAQ/D,GAC/BgE,EAAU,aAAOP,GAQvB,IAPsB,IAAlBK,EACFE,EAAWlB,KAAK9C,GAEhBgE,EAAWC,OAAOH,EAAc,GAElCJ,EAAWM,IAEW,IAAlBhE,EAAKhC,SAAmB,CAC1B,IAAM8F,EAAeH,EAAUI,QAAQ/D,GACjCgE,EAAU,aAAOL,IACD,IAAlBG,EACFE,EAAWlB,KAAK9C,GAEhBgE,EAAWC,OAAOH,EAAc,GAElCF,EAAaI,GAEfE,QAAQC,IAAIR,KAgBRS,EAAczM,EAAMsE,MAAM6C,KAAI,SAACkB,GACnC,OACE,wBACEjB,IAAKhC,KACLvE,QAASqL,EAAa7D,GACtBjK,UACEiK,EAAKhC,SAAL,UAAmBqG,KAAOhC,KAA1B,YAAkCgC,KAAO9I,WAAc8I,KAAOhC,MAGhE,yBACEtM,UAAWsO,KAAOhE,OAClBC,IAAG,UAAKN,EAAKO,SACbC,IAAG,UAAKR,EAAKS,OAEf,yBAAK1K,UAAWsO,KAAOC,eACrB,sCAAQtE,EAAKO,UACb,sCAAQP,EAAKhI,QAEf,6BA/Be,SAACgI,GACpB,IAC8B,IAA3ByD,EAAQM,QAAQ/D,KAAiBA,EAAKhC,UACtCgC,EAAKhC,WAAyC,IAA7B2F,EAAUI,QAAQ/D,IAAiBA,EAAKhC,SAE1D,OACE,0BAAMjI,UAAWsO,KAAO1I,WACtB,kBAAC,IAAD,CAAiBjD,KAAMkD,OAyBtB2I,CAAavE,QAMtB,OACE,oCACE,wBAAIjK,UAAWsO,KAAOxD,eAAgBuD,GACtC,yBAAKrO,UAAWC,KAAQ6C,iBACtB,2BACEvC,KAAK,SACLoD,MAAM,SACNlB,QAAS,SAACX,GAAD,OAAOF,EAAM6M,aAAa3M,EAAG4L,EAASE,IAC/C5N,UAAWC,KAAQgF,aAErB,2BACE1E,KAAK,SACLoD,MAAM,SACNlB,QAAS,kBAAMb,EAAM2E,cACrBvG,UAAWC,KAAQyO,oBC5EvBhN,GAAU,CACd6E,aACAoI,elB0C4B,SAACrH,EAAUhH,GAAX,OAAkB,SAACI,EAAUC,GACzDC,IACGgO,IAAIpI,EAAMlG,EAAIgH,EAAUxG,EAAYH,IACpCI,KAAKL,EAAS+F,MACdvF,OAAM,SAACC,GAAD,OACLT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,ckB9C1DoG,iBACAoI,oBlB+DiC,SAACC,GAAD,MAAmB,CACpDvO,KXpDmC,wBWqDnCC,QAASsO,KkB7CLC,G,4MACJvL,MAAQ,G,EAWRoG,kBAAoB,WAClBuE,QAAQC,IAAI,+BADY,MASpB,EAAKxM,MANP8D,EAHsB,EAGtBA,MACAC,EAJsB,EAItBA,KACAI,EALsB,EAKtBA,OACAiJ,EANsB,EAMtBA,WACA1J,EAPsB,EAOtBA,UACA2J,EARsB,EAQtBA,cAEF,EAAKxL,SAAS,CACZiC,MAAOA,EACPC,KAAMA,EACNI,OAAQA,EACRiJ,WAAYA,EACZ1J,UAAWA,EACX2J,cAAeA,K,EAInBC,qBAAuB,SAACxB,GAGtB,IAHmC,IAC3BuB,EAAkB,EAAKzL,MAAvByL,cACJH,EAAY,aAAOG,GACdE,EAAI,EAAGA,EAAIL,EAAa3I,OAAQgJ,IACvC,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAQvH,OAAQiJ,IAC9BN,EAAaK,GAAGtH,MAAQ6F,EAAQ0B,GAAGvH,MACrCiH,EAAaK,GAAGlH,UAAW,GAIjC,EAAKrG,MAAMiN,oBAAoBC,I,EAGjCO,gBAAkB,SAACnJ,GAEjB,IADA,IAAIvC,GAAQ,EACHqE,EAAI,EAAGA,EAAI9B,EAAMC,OAAQ6B,IAChC,IAA0B,IAAtB9B,EAAM8B,GAAGC,SACX,OAAgB,GAGN,IAAVtE,GACF,EAAKF,SAAS,CACZ6B,WAAW,K,EAKjBgK,kBAAoB,SAACxN,GACnB,IACMG,EADSH,EAAE4B,OACGzB,KACpB,EAAKwB,SAAL,eAAiBxB,EAAOH,EAAE4B,OAAOC,S,EAGnC8K,a,uCAAe,WAAO3M,EAAG4L,GAAV,eAAA7D,EAAA,6DACb/H,EAAE8B,iBADW,SAEP,EAAKsL,qBAAqBxB,GAFnB,uBAGP,EAAK2B,gBAAgB,EAAK7L,MAAMyL,eAHzB,uBAIiB,CAC5BhN,KAAM,CACJyD,MAAO,EAAKlC,MAAMkC,MAClBC,KAAM,EAAKnC,MAAMmC,MAEnB2C,QAAS,CACPvC,OAAQ,EAAKvC,MAAMuC,OACnBT,UAAW,EAAK9B,MAAM8B,UACtBY,MAAO,EAAKtE,MAAMkN,eAZT,cAIPS,EAJO,0BAgBL,EAAK3N,MAAM+M,eAAeY,EAAiB,EAAK3N,MAAMoN,YAhBjD,yBAiBL,EAAKpN,MAAM6E,iBAjBN,yBAkBL,EAAK7E,MAAM2E,aAlBN,QAmBXgB,IAAK,CACHC,MAAM,kBAAD,OAAoB,EAAKhE,MAAMkC,MAA/B,YAAwC,EAAKlC,MAAMmC,KAAnD,KACLhD,KAAM,UACNyH,OAAQ,QAtBC,kDAyBX+D,QAAQC,IAAR,MACA7G,IAAK,CACHC,MAAM,gCACN7E,KAAM,OACNyH,OAAQ,UA7BC,0D,+GAkCL,IAAD,OACP,OAAKnG,KAAKrC,MAIR,oCACE,6BAAS5B,UAAWC,KAAQuP,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK1P,UAAWC,KAAQ2L,OACtB,wBAAI5L,UAAWC,KAAQ0P,YAAvB,iBACA,yBAAK3P,UAAWC,KAAQ2P,cACtB,0BACE5P,UAAWC,KAAQ4P,KACnBhO,SAAU,SAACC,GAAD,OAAO,EAAKF,MAAM6M,aAAa3M,KAEzC,yBAAK9B,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,QACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAM8D,MACzBxD,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,QAAQtC,UAAWC,KAAQsC,OAA1C,eAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,OACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAM+D,KACzBzD,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,OAAOtC,UAAWC,KAAQsC,OAAzC,cAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,SACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAMmE,OACzB7D,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,SAAStC,UAAWC,KAAQsC,OAA3C,gBAIF,6BACE,2BAAOD,QAAQ,WAAWtC,UAAWC,KAAQ6P,WAA7C,oCAGA,kBAACC,GAAD,CACE7J,MAAOjC,KAAKrC,MAAMqN,cAClBC,qBAAsBjL,KAAKiL,qBAC3BT,aAAcxK,KAAKwK,aACnBuB,YAAa,kBAAM,EAAKpO,MAAM2E,uBA/DvC,S,GArGchC,aAiLZzE,gBAnMS,SAAC,GAAmC,IAAxBmQ,EAAuB,EAAhC7K,MAAS6K,KAAQpJ,EAAe,EAAfA,UAExCgB,EAGEoI,EAHFpI,IAFuD,EAKrDoI,EAFFhO,KAAQyD,EAH+C,EAG/CA,MAAOC,EAHwC,EAGxCA,KAHwC,EAKrDsK,EADF3H,QAAWvC,EAJ4C,EAI5CA,OAAQG,EAJoC,EAIpCA,MAGrB,MAAO,CACLR,MAAOA,EACPC,KAAMA,EACNI,OAAQA,EACRT,UAXuD,EAI7BA,UAQ1B2J,cAAe/I,EACf8I,WAAYnH,EACZiH,aARuBjI,EAAjBiI,gBA6L8BpN,GAAzB5B,CAAkCiP,IC9M3CrN,GAAU,CACd6E,aACA2J,enBiC4B,SAACC,GAAD,OAAiB,SAACzP,EAAUC,GACxDC,IACGyC,KAAKmD,EAAK2J,EAAarP,EAAYH,IACnCI,MAAK,SAACC,GAAD,OACJN,EAAS,CACPH,KXvCuB,kBWwCvBC,QAASQ,EAAIC,UAGhBC,OAAM,SAACC,GAAD,OACLT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,cmB1C1DoG,kBAMI2J,G,4MACJ5M,MAAQ,G,EAMR6M,gBAAkB,SAACxJ,GAEjB,IADA,IAAMyJ,EAAe,EAAK9M,MAAMuC,OACvBiC,EAAI,EAAGA,EAAInB,EAAUV,OAAQ6B,IAAK,CAEzC,GADSnB,EAAUmB,GAAGM,QAAQvC,OAAOwC,aAC1B+H,EACT,OAAO,I,EAKbhB,kBAAoB,SAACxN,GACnB,IACMG,EADSH,EAAE4B,OACGzB,KACpB,EAAKwB,SAAL,eAAiBxB,EAAOH,EAAE4B,OAAOC,S,EAGnC8K,a,uCAAe,WAAO3M,GAAP,eAAA+H,EAAA,yDACb/H,EAAE8B,kBAGU,EAAKyM,gBAAgB,EAAKzO,MAAMiF,WAJ/B,gBAMXU,IAAK,CACHC,MAAM,mBAAD,OAAqB,EAAKhE,MAAMuC,OAAhC,sBACL0B,KAAM,6BACN9E,KAAM,OACNyH,OAAQ,OAVC,8BAaL+F,EAAc,CAClBlO,KAAM,CACJyD,MAAO,EAAKlC,MAAMkC,MAClBC,KAAM,EAAKnC,MAAMmC,MAEnB2C,QAAS,CACPvC,OAAQ,EAAKvC,MAAMuC,SAnBZ,SAuBToI,QAAQC,IAAI,sBAvBH,UAwBH,EAAKxM,MAAMsO,eAAeC,GAxBvB,eAyBThC,QAAQC,IAAI,2BAzBH,UA0BH,EAAKxM,MAAM6E,iBA1BR,QA2BTc,IAAK,CACHC,MAAM,GAAD,OAAK,EAAKhE,MAAMkC,MAAhB,sBACL/C,KAAM,UACNyH,OAAQ,QAEV+D,QAAQC,IAAR,UAAe,EAAK5K,MAAMkC,MAA1B,YAAmC,EAAKlC,MAAMmC,KAA9C,gBACA,EAAK/D,MAAM2E,aAjCF,kDAmCT4H,QAAQC,IAAR,MACA7G,IAAK,CACHC,MAAM,gCACN7E,KAAM,OACNyH,OAAQ,UAvCD,0D,6GA6CL,IAAD,OACP,OACE,oCACE,6BAASpK,UAAWC,KAAQuP,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK1P,UAAWC,KAAQ2L,OACtB,wBAAI5L,UAAWC,KAAQ0P,YAAvB,gBACA,yBAAK3P,UAAWC,KAAQ2P,cACtB,0BACE5P,UAAWC,KAAQsQ,UACnB1O,SAAU,SAACC,GAAD,OAAO,EAAK2M,aAAa3M,KAEnC,yBAAK9B,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,QACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKT,MAAMkC,MACzBxD,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,QAAQtC,UAAWC,KAAQsC,OAA1C,eAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,OACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKT,MAAMmC,KACzBzD,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,OAAOtC,UAAWC,KAAQsC,OAAzC,cAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,SACL0B,KAAK,SACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKT,MAAMuC,OACzB7D,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,SAAStC,UAAWC,KAAQsC,OAA3C,6BAC6B0B,KAAKrC,MAAMiF,UAAUV,OADlD,MAIF,yBAAKnG,UAAWC,KAAQ6C,iBACtB,2BACEvC,KAAK,SACLoD,MAAM,SACNlB,QAAS,SAACX,GAAD,OAAO,EAAK2M,aAAa3M,IAClC9B,UAAWC,KAAQgF,aAErB,2BACE1E,KAAK,SACLoD,MAAM,SACNlB,QAAS,kBAAM,EAAKb,MAAM2E,cAC1BvG,UAAWC,KAAQyO,aACnB8B,gBAAc,e,GAtIVjM,aAmJXzE,gBAvJS,SAAC,GAAD,MAAmC,CACzD+G,UADsB,EAAGA,UAAaA,aAuJAnF,GAAzB5B,CAAkCsQ,IC5FlCK,GA1EG,CAChBC,SAAU,CACR,qBACA,oBACA,aACA,iBACA,oBAEFC,eAAgB,CAAC,eAAgB,yBAA0B,eAC3DC,OAAQ,CACN,iBACA,gBACA,iBACA,iBAEFC,WAAY,CACV,uBACA,cACA,qBACA,gBAEFC,YAAa,CAAC,mBAAoB,aAAc,aAAc,WAC9DC,UAAW,CAAC,qBAAsB,qBAClCC,QAAS,CACP,2BACA,uBACA,iBAEFC,OAAQ,CACN,iBACA,0BACA,gBACA,aACA,mBAEFC,aAAc,CACZ,mBACA,iBACA,iBACA,oBACA,0BACA,kBAEFC,MAAO,CACL,sBACA,kBACA,kBACA,eACA,cAEFC,KAAM,CACJ,gBACA,uBACA,mBACA,kBAEFC,UAAW,CACT,qBACA,cACA,YACA,SACA,sBACA,cACA,iBACA,QACA,UACA,MACA,UACA,SACA,WACA,UCpEErK,GAASC,EAAQ,IAEVqK,GAAUC,OAAOC,QAAQf,IAAW1H,KAAI,YAAmB,IAAD,oBAAhBC,EAAgB,KAAXrF,EAAW,KACrE,OACE,8BAAUqF,IAAKhC,KAAUyK,MAAOzI,EAAI0I,MAAM,aAAaC,KAAK,MACzDhO,EAAMoF,KAAI,SAAAxI,GAAI,OACb,4BAAQyI,IAAKhC,KAAUrD,MAAOpD,GAC3BA,UCGLmB,GAAU,CACd0E,YACAG,aACAqL,WhByCwB,SAAAtR,GAAE,OAAI,SAACI,EAAUC,GACzCC,IACGiE,OAAO2B,GAAMlG,EAAIQ,EAAYH,IAC7BI,MAAK,SAAAC,GAAG,OACPN,EAAS,CACPH,KjBxDmB,ciByDnBC,QAASF,OAGZY,OAAM,SAAAC,GAAG,OACRT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,cgBlD1DwR,WhBsDwB,SAAC5H,EAAM3J,GAAP,OAAc,SAACI,EAAUC,GACjD,IAAMmR,EAAUtL,GAAMlG,EACtBM,IACGgO,IAAIkD,EAAS7H,EAAMnJ,EAAYH,IAC/BI,KAAKL,EAASqK,OACd7J,OAAM,SAAAC,GAAG,OACRT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,cgB3D1D0K,eAcIgH,G,4MACJvO,MAAQ,G,EAERoG,kBAAoB,WAClBuE,QAAQC,IAAI,2BADY,MAEkC,EAAKxM,MAAvDtB,EAFgB,EAEhBA,GAAI2B,EAFY,EAEZA,KAAM1B,EAFM,EAENA,KAAMiK,EAFA,EAEAA,QAASwH,EAFT,EAESA,gBAAiBtH,EAF1B,EAE0BA,IAClD,EAAKjH,SAAS,CACZnD,GAAIA,EACJ2B,KAAMA,EACN1B,KAAMA,EACNiK,QAASA,EACTwH,gBAAiBA,EACjBtH,IAAKA,K,EAaT4E,kBAAoB,SAACxN,GACnB,IACMG,EADSH,EAAE4B,OACGzB,KACpB,EAAKwB,SAAL,eAAiBxB,EAAOH,EAAE4B,OAAOC,S,EAGnC8K,a,uCAAe,WAAO3M,GAAP,iBAAA+H,EAAA,6DACb/H,EAAE8B,iBACIqO,EAAc,CAClBhQ,KAAM,EAAKuB,MAAMvB,KACjB1B,KAAM,EAAKiD,MAAMjD,KACjBiK,QAAS,EAAKhH,MAAMgH,QACpBwH,gBAAiB,EAAKxO,MAAMwO,gBAC5BtH,IAAK,EAAKlH,MAAMkH,KAPL,SAULpK,EAAK,EAAKkD,MAAMlD,GAVX,SAWL,EAAKsB,MAAMiQ,WAAWI,EAAa3R,GAX9B,cAYXiH,IAAK,CACHC,MAAM,sBAAD,OAAwB,EAAKhE,MAAMvB,KAAnC,SACLU,KAAM,UACNyH,OAAQ,WAfC,SAiBL,EAAKxI,MAAMmJ,aAjBN,wBAkBL,EAAKnJ,MAAM2E,aAlBN,0DAoBX4H,QAAQC,IAAR,MACA7G,IAAK,CACHC,MAAM,gCACN7E,KAAM,OACNyH,OAAQ,UAxBC,0D,wDA6Bf8H,gBAAkB,WAChB3K,IAAK,CACHC,MAAM,UAAD,OAAY,EAAK5F,MAAMK,KAAvB,KACLwF,KAAK,0CACLC,SAAS,EACT/E,KAAM,UACNgF,YAAY,IACX5G,KANH,uCAMQ,WAAO6G,GAAP,SAAAiC,EAAA,0DACFjC,EADE,uBAEJL,IAAK,mBAAD,OAAoB,EAAK3F,MAAMK,KAA/B,sBAAyD,CAC3DU,KAAM,YAHJ,SAKE,EAAKf,MAAMgQ,WAAW,EAAKhQ,MAAMtB,IALnC,uBAME,EAAKsB,MAAMmJ,aANb,OAOJ,EAAKnJ,MAAM2E,aAPP,uBASJgB,IAAK,0DATD,4CANR,wD,uDAoBQ,IAAD,OACP,OACE,6BAASvH,UAAWC,KAAQuP,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK1P,UAAWC,KAAQ2L,OACtB,wBAAI5L,UAAWC,KAAQ0P,YAAvB,aACA,yBAAK3P,UAAWC,KAAQ2P,cAMtB,0BACE5P,UAAWC,KAAQsQ,UACnB1O,SAAU,SAACC,GAAD,OAAO,EAAK2M,aAAa3M,KAEnC,yBAAK9B,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,OACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAMK,KACzBC,SAAU,SAACJ,GAAD,OAAO,EAAKwN,kBAAkBxN,IACxCM,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,OAAOtC,UAAWC,KAAQsC,OAAzC,cAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,4BACEC,KAAK,OACLjC,UAAWC,KAAQkS,OACnBjQ,SAAU+B,KAAKqL,kBACf7F,aAAcxF,KAAKrC,MAAMrB,KACzB6B,UAAQ,GAER,8BAAUqP,MAAM,qBACd,4BAAQhI,aAAcxF,KAAKrC,MAAMrB,MAC9B0D,KAAKrC,MAAMrB,OAGf+Q,IAEH,2BAAOhP,QAAQ,OAAOtC,UAAWC,KAAQsC,OAAzC,SAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,UACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAM4I,QACzBtI,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,UAAUtC,UAAWC,KAAQsC,OAA5C,YAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,kBACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAMoQ,gBACzB9P,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,kBAAkBtC,UAAWC,KAAQsC,OAApD,qBAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,MACLjC,UAAWC,KAAQkC,MACnBsH,aAAcxF,KAAKrC,MAAM8I,IACzBxI,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,MAAMtC,UAAWC,KAAQsC,OAAxC,2BAIF,yBAAKvC,UAAWC,KAAQ6C,iBACtB,2BACEvC,KAAK,SACLoD,MAAM,SACNlB,QAAS,SAACX,GAAD,OAAO,EAAK2M,aAAa3M,IAClC9B,UAAWC,KAAQgF,aAErB,2BACE1E,KAAK,SACLoD,MAAM,SACNlB,QAAS,kBAAM,EAAKb,MAAM2E,cAC1BvG,UAAWC,KAAQyO,iBAIzB,kBAAC,EAAD,CAAY7J,OAAQZ,KAAKiO,0B,GA3LhB3N,aAoMRzE,gBAhNS,SAAC,GAAwB,IAAbmQ,EAAY,EAArB7K,MAAS6K,KAElC,MAAO,CACL3P,GAFyD2P,EAAnDpI,IAGN5F,KAHyDgO,EAA9ChO,KAIX1B,KAJyD0P,EAAxC1P,KAKjBiK,QALyDyF,EAAlCzF,QAMvBwH,gBANyD/B,EAAzB+B,gBAOhCtH,IAPyDuF,EAARvF,OA+MbhJ,GAAzB5B,CAAkCiS,ICzN3CrQ,GAAU,CACd0E,YACAG,aACA6L,WjB6BwB,SAAAC,GAAO,OAAI,SAAC3R,EAAUC,GAC9CC,IACGyC,KAAKmD,GAAK6L,EAASvR,EAAYH,IAC/BI,MAAK,SAAAC,GAAG,OACPN,EAAS,CACPH,KjB3CmB,ciB4CnBC,QAASQ,EAAIC,UAGhBC,OAAM,SAAAC,GAAG,OACRT,EAASP,EAAagB,EAAIC,SAASH,KAAME,EAAIC,SAASf,ciBtC1D0K,eAGIuH,G,4MACJ9O,MAAQ,CACNvB,KAAM,GACN1B,KAAM,GACNiK,QAAS,GACTwH,gBAAiB,GACjBtH,IAAK,I,EAKP4E,kBAAoB,SAACxN,GACnB,IACMG,EADSH,EAAE4B,OACGzB,KACpB,EAAKwB,SAAL,eAAiBxB,EAAOH,EAAE4B,OAAOC,S,EAGnC8K,a,uCAAe,WAAO3M,GAAP,eAAA+H,EAAA,6DACb/H,EAAE8B,iBADW,SAGLyO,EAAU,CACdpQ,KAAM,EAAKuB,MAAMvB,KACjB1B,KAAM,EAAKiD,MAAMjD,KACjBiK,QAAS,EAAKhH,MAAMgH,QACpBwH,gBAAiB,EAAKxO,MAAMwO,gBAC5BtH,IAAK,EAAKlH,MAAM+O,QAChBtK,UAAU,GATD,SAWL,EAAKrG,MAAMwQ,WAAWC,GAXjB,cAYX9K,IAAK,CACHC,MAAM,GAAD,OAAK,EAAKhE,MAAMvB,KAAhB,sBACLU,KAAM,UACNyH,OAAQ,UAEV+D,QAAQC,IAAI,qBAjBD,SAkBL,EAAKxM,MAAMmJ,aAlBN,OAmBX,EAAKnJ,MAAM2E,aAnBA,kDAqBX4H,QAAQpO,MAAR,MACAwH,IAAK,CACHC,MAAM,gCACN7E,KAAM,OACNyH,OAAQ,UAzBC,0D,6GA8BL,IAAD,OACP,OACE,6BAASpK,UAAWC,KAAQuP,gBAC1B,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACR,yBAAK1P,UAAWC,KAAQ2L,OACtB,wBAAI5L,UAAWC,KAAQ0P,YAAvB,YACA,yBAAK3P,UAAWC,KAAQ2P,cACtB,0BACE5P,UAAWC,KAAQsQ,UACnB1O,SAAU,SAACC,GAAD,OAAO,EAAKF,MAAM6M,aAAa3M,KAEzC,yBAAK9B,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,OACLjC,UAAWC,KAAQkC,MACnBwB,MAAOM,KAAKT,MAAMvB,KAClBC,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,OAAOtC,UAAWC,KAAQsC,OAAzC,cAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,4BACEC,KAAK,OACLjC,UAAWC,KAAQkS,OACnBjQ,SAAU+B,KAAKqL,kBACf7F,aAAc,KACd9F,MAAOM,KAAKT,MAAMjD,KAClBiS,YAAY,YACZpQ,UAAQ,GAER,8BAAUqP,MAAM,qBACd,4BAAQ9N,MAAOM,KAAKT,MAAMjD,MAAO0D,KAAKT,MAAMjD,OAE7C+Q,IAEH,2BAAOhP,QAAQ,OAAOtC,UAAWC,KAAQsC,OAAzC,SAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,UACLjC,UAAWC,KAAQkC,MACnBwB,MAAOM,KAAKT,MAAMgH,QAClBtI,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,UAAUtC,UAAWC,KAAQsC,OAA5C,YAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,kBACLjC,UAAWC,KAAQkC,MACnBwB,MAAOM,KAAKT,MAAMwO,gBAClB9P,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,kBAAkBtC,UAAWC,KAAQsC,OAApD,qBAIF,yBAAKvC,UAAWC,KAAQ+B,OACtB,2BACEzB,KAAK,OACL0B,KAAK,UACLjC,UAAWC,KAAQkC,MACnBwB,MAAOM,KAAKT,MAAM+O,QAClBrQ,SAAU+B,KAAKqL,kBACflN,UAAQ,IAEV,0BAAMpC,UAAWC,KAAQoC,MACzB,2BAAOC,QAAQ,UAAUtC,UAAWC,KAAQsC,OAA5C,2BAIF,yBAAKvC,UAAWC,KAAQ6C,iBACtB,2BACEvC,KAAK,SACLoD,MAAM,SACNlB,QAAS,SAACX,GAAD,OAAO,EAAK2M,aAAa3M,IAClC9B,UAAWC,KAAQgF,aAErB,2BACE1E,KAAK,SACLoD,MAAM,SACNlB,QAAS,kBAAM,EAAKb,MAAM2E,cAC1BvG,UAAWC,KAAQyO,aACnB8B,gBAAc,c,GAjJPjM,aA8JZzE,eAAQ,KAAM4B,GAAd5B,CAAuBwS,IC3IvBxS,gBA3BS,SAAC,GAAD,MAA+B,CACrDwG,UADsB,EAAGlB,MAASkB,aA2BrBxG,EAvBK,SAAC8B,GAEnB,OADoBA,EAAM0E,WAExB,IAAK,gBACH,OAAO,kBAAC,GAAD,MACT,IAAK,eACH,OAAO,kBAAC,GAAD,MACT,IAAK,YACH,OAAO,kBAAC,GAAD,MACT,IAAK,WACH,OAAO,kBAACmM,GAAD,MACT,IAAK,YAEH,OADAtE,QAAQC,IAAI,aACL,qCACT,QACE,OAAO,yCCbEsE,GATM,kBACnB,oCACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,0BCHEC,GAAe,CACnBxK,SAAS,EACTpI,MAAO,KACPmG,MAAO,ICFT,IAAMyM,GAAe,CACnBxK,SAAS,EACTpI,MAAO,KACP6S,uBAAuB,EACvB/L,UAAW,GACXiI,aAAc,ICZhB,IAAM6D,GAAe,CACnBvS,QAAS,GACTC,OAAQ,KACRC,GAAI,MCQAqS,GAAe,CACnBtR,MAAOwR,aAAaC,QAAQ,SAC5B5O,gBAAiB,KACjB6O,WAAW,EACXlP,KAAM,KACNM,cAAc,GCXVwO,GAAe,CACnBrM,UAAW,GACXnB,WAAW,EACXuG,SAAS,EACT3L,MAAO,KACPkQ,KAAM,MCLO+C,oBAAgB,CAC7B9M,MLMa,WAAoD,IAA/B1C,EAA8B,uDAAtBmP,GAAcM,EAAQ,uCAChE,OAAQA,EAAO1S,MACb,IrChB6B,oBqCiB3B,OAAO,gBACFiD,EADL,CAEE2E,SAAS,EACTpI,MAAO,OAEX,IrCrB+B,sBqCsB7B,OAAO,gBACFyD,EADL,CAEE2E,SAAS,EACTjC,MAAO+M,EAAOzS,UAElB,IrC1B+B,sBqC2B7B,OAAO,gBACFgD,EADL,CAEE2E,SAAS,EACTpI,MAAOkT,EAAOzS,QAAQT,MACtBmG,MAAO,KAEX,IrC/BuB,cqCgCrB,OAAO,gBACF1C,EADL,CAEE0C,MAAM,GAAD,oBAAM1C,EAAM0C,OAAZ,CAAmB+M,EAAOzS,YAEnC,IrCnCuB,cqCoCrB,OAAO,gBACFgD,EADL,CAEE0C,MAAO1C,EAAM0C,MAAMmC,QAAO,SAAA4B,GAAI,OAAIA,EAAKpC,MAAQoL,EAAOzS,aAE1D,QACE,OAAOgD,IKrCXqD,UJQa,WAAwD,IAA/BrD,EAA8B,uDAAtBmP,GAAcM,EAAQ,uCACpE,OAAQA,EAAO1S,MACb,ItCZiC,wBsCa/B,OAAO,gBACFiD,EADL,CAEE2E,SAAS,EACTpI,MAAO,OAEX,ItCjBmC,0BsCkBjC,OAAO,gBACFyD,EADL,CAEE2E,SAAS,EACTtB,UAAWoM,EAAOzS,UAEtB,ItCtBmC,0BsCuBjC,OAAO,gBACFgD,EADL,CAEE2E,SAAS,EACTpI,MAAOkT,EAAOzS,QAAQT,MACtB8G,UAAW,KAEf,ItC3B2B,kBsC4BzB,OAAO,gBACFrD,EADL,CAEEqD,UAAU,CAAEoM,EAAOzS,SAAV,oBAAsBgD,EAAMqD,cAEzC,ItC/B2B,kBsCgCzB,OAAO,gBACFrD,EADL,CAEEqD,UAAWrD,EAAMqD,UAAUwB,QACzB,SAACf,GAAD,OAAcA,EAASO,MAAQoL,EAAOzS,aAG5C,ItCnBiC,wBsCoB/B,OAAO,gBACFgD,EADL,CAEEsL,aAAcmE,EAAOzS,UAEzB,QACE,OAAOgD,II9CXlC,KFWa,WAAyC,IAA/BkC,EAA8B,uDAAtBmP,GAAcM,EAAQ,uCACrD,OAAQA,EAAO1S,MACb,IxCTwB,ewCUtB,OAAO,gBACFiD,EADL,CAEEuP,WAAW,IAEf,IxCbuB,cwCcrB,OAAO,gBACFvP,EADL,CAEEU,iBAAiB,EACjB6O,WAAW,EACXlP,KAAMoP,EAAOzS,UAEjB,IxClByB,gBwCmBzB,IxChB4B,mBwCkB1B,OADAqS,aAAaK,QAAQ,QAASD,EAAOzS,QAAQa,OACtC,gBACFmC,EADL,GAEKyP,EAAOzS,QAFZ,CAGE0D,iBAAiB,EACjB6O,WAAW,IAEf,IxC5BsB,awC6BtB,IxC3BsB,awC4BtB,IxC3B0B,iBwC4B1B,IxC1ByB,gBwC4BvB,OADAF,aAAaM,WAAW,SACjB,gBACF3P,EADL,CAEEnC,MAAO,KACPwC,KAAM,KACNK,iBAAiB,EACjB6O,WAAW,IAEf,IxCtByB,gBwCuBvB,OAAO,gBACFvP,EADL,CAEEW,cAAc,IAElB,IxC1B0B,iBwC2BxB,OAAO,gBACFX,EADL,CAEEW,cAAc,IAElB,QACE,OAAOX,IExDXzD,MHHa,WAAwC,IAA/ByD,EAA8B,uDAAtBmP,GAAcM,EAAQ,uCACpD,OAAQA,EAAO1S,MACb,IvCYsB,auCXpB,MAAO,CACLH,QAAS6S,EAAOzS,QAAQJ,QACxBC,OAAQ4S,EAAOzS,QAAQH,OACvBC,GAAI2S,EAAOzS,QAAQF,IAEvB,IvCOwB,euCNtB,MAAO,CACLF,QAAS,GACTC,OAAQ,KACRC,GAAI,MAER,QACE,OAAOkD,IGXX4B,MDGa,WAAqD,IAA/B5B,EAA8B,uDAAtBmP,GAAcM,EAAQ,uCACjE,OAAQA,EAAO1S,MACb,IzCQsB,ayCPpB,OAAO,gBACFiD,EADL,CAEE2B,WAAW,EACXmB,UAAW2M,EAAOzS,QAAQ8F,UAC1B2J,KAAMgD,EAAOzS,QAAQS,KACrBlB,MAAO,OAEX,IzCCuB,cyCArB,OAAO,gBACFyD,EADL,CAEE2B,WAAW,EACXmB,UAAW,GACX2J,KAAM,KACNlQ,MAAO,OAEX,IzCLoB,WyCMlB,OAAO,gBACFyD,EADL,CAEEkI,SAAS,EACT3L,MAAO,OAEX,IzCVqB,YyCWnB,OAAO,gBACFyD,EADL,CAEEkI,SAAS,EACT3L,MAAO,OAEX,QACE,OAAOyD,MExCP4P,GAAa,CAACC,MA0BLC,GArBLC,aACNC,GARiB,GAUjBC,aACEC,KAAe,WAAf,EAAmBN,MCAVO,OARf,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,QCEcM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxT,MAAK,SAAAyT,GACjCA,EAAaC,iB,mBElInB7U,EAAOC,QAAU,CAAC,aAAe,+BAA+B,eAAiB,iCAAiC,UAAY,4BAA4B,cAAgB,gCAAgC,gBAAkB,kCAAkC,KAAO,uBAAuB,UAAY,8B,mBCAxSD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,YAAc,4BAA4B,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,sBAAsB,QAAU,wBAAwB,kBAAoB,oC,mBCA5PD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,WAAa,gCAAgC,cAAgB,mCAAmC,SAAW,8BAA8B,QAAU,+B,mBCA9ND,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,KAAO,wBAAwB,cAAgB,iCAAiC,OAAS,0BAA0B,UAAY,6BAA6B,iBAAmB,oCAAoC,UAAY,+B,mBCAlSD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,IAAM,wB,mBCA9FD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,aAAe,8B,mBCAxED,EAAOC,QAAU,CAAC,QAAU,sBAAsB,UAAY,0B,kBCA9DD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,MAAQ,8BAA8B,eAAiB,uCAAuC,MAAQ,8BAA8B,MAAQ,8BAA8B,MAAQ,8BAA8B,gBAAkB,wCAAwC,OAAS,+BAA+B,KAAO,6BAA6B,MAAQ,gC,mBCA9ZD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,cAAgB,iC,kBCAvFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,UAAY,0BAA0B,OAAS,uBAAuB,mBAAqB,mCAAmC,cAAgB,8BAA8B,cAAgB,8BAA8B,QAAU,0B","file":"static/js/main.d1bc9dd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modals_ModalContainer__2fLw_\",\"Modal\":\"Modals_Modal__10u8J\",\"ModalTitle\":\"Modals_ModalTitle__3Hyrz\",\"ModalContent\":\"Modals_ModalContent__3WyKt\",\"ModalImage\":\"Modals_ModalImage__1WFqM\",\"ModalForm\":\"Modals_ModalForm__UKGm1\",\"Group\":\"Modals_Group__1HYDG\",\"Input\":\"Modals_Input__5uc30\",\"Label\":\"Modals_Label__VeMPf\",\"BeerLabel\":\"Modals_BeerLabel__32m32\",\"Select\":\"Modals_Select__RvQto\",\"ButtonContainer\":\"Modals_ButtonContainer__3zo7f\",\"EditButton\":\"Modals_EditButton__2khIt\",\"CancelButton\":\"Modals_CancelButton__2Gel2\"};","import React from \"react\";\nimport classes from \"../css/LoginContainer.module.css\";\n\nimport { connect } from \"react-redux\";\nconst actions = {};\n\nconst ErrorMessage = ({ error }) => (\n  <>\n    <div>\n      <h3 className={classes.Error}>{error}</h3>\n    </div>\n  </>\n);\n\nexport default connect(null, actions)(ErrorMessage);\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./action-types\";\n\n// Return errors\nexport const returnErrors = (message, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { message, status, id }\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const FETCH_BEERS_BEGIN = \"FETCH_BEERS_BEGIN\";\nexport const FETCH_BEERS_SUCCESS = \"FETCH_BEERS_SUCCESS\";\nexport const FETCH_BEERS_FAILURE = \"FETCH_BEERS_FAILURE\";\n\nexport const CREATE_BEER = \"CREATE_BEER\";\nexport const DELETE_BEER = \"DELETE_BEER\";\n\nexport const FETCH_CUSTOMERS_BEGIN = \"FETCH_CUSTOMERS_BEGIN\";\nexport const FETCH_CUSTOMERS_SUCCESS = \"FETCH_CUSTOMERS_SUCCESS\";\nexport const FETCH_CUSTOMERS_FAILURE = \"FETCH_CUSTOMERS_FAILURE\";\n\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\";\nexport const DELETE_CUSTOMER = \"DELETE_CUSTOMER\";\n\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\nexport const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_NAV = \"OPEN_NAV\";\nexport const CLOSE_NAV = \"CLOSE_NAV\";\n\nexport const UPDATE_CUSTOMER_BEERS = \"UPDATE_CUSTOMER_BEERS\";\nexport const CLUB_COMPLETED = \"CLUB_COMPLETED\";\n\nexport const OPEN_REGISTER = \"OPEN_REGISTER\";\nexport const CLOSE_REGISTER = \"CLOSE_REGISTER\";\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\n//Action types\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  OPEN_REGISTER,\n  CLOSE_REGISTER,\n  CLEAR_ERRORS,\n} from \"./action-types\";\n\n//Check for token and then load the user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:5000/api/auth/user\"\n        : \"https://bearmugclub.herokuapp.com/api/auth/user\",\n      tokenConfig(getState)\n    )\n    .then((res) =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      })\n    )\n    //If token is invalid\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n//Register user\nexport const register = ({ name, email, password }) => (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  //Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:5000/api/users\"\n        : \"https://bearmugclub.herokuapp.com/api/users\",\n      body,\n      config\n    )\n    .then((res) =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      })\n    )\n    //For an error with registration\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n//Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n\n//Login User\nexport const login = ({ email, password }) => (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  //Request body\n  const body = JSON.stringify({ email, password });\n  axios\n    .post(\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:5000/api/auth\"\n        : \"https://bearmugclub.herokuapp.com/api/auth\",\n      body,\n      config\n    )\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    //For an error with the login\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n// Setup config, headers, and token\nexport const tokenConfig = (getState) => {\n  //Get token from local storage\n  const token = getState().auth.token;\n\n  //Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  //If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n\nexport const openRegister = () => {\n  return function (dispatch) {\n    dispatch({\n      type: OPEN_REGISTER,\n    });\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n  };\n};\n\nexport const closeRegister = () => {\n  return function (dispatch) {\n    dispatch({\n      type: CLOSE_REGISTER,\n    });\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n  };\n};\n","import React from \"react\";\nimport classes from \"../css/LoginContainer.module.css\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport { closeRegister } from \"../actions/authActions\";\nconst actions = { closeRegister };\n\nconst Register = (props) => {\n  return (\n    <form onSubmit={(e) => props.onSubmit(e)}>\n      <div className={classes.LoginContainer}>\n      {props.error && <ErrorMessage error={props.error}/>}\n        <div className={classes.Group}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"name\" className={classes.Label}>\n            Name\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"email\" className={classes.Label}>\n            Email\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"password\" className={classes.Label}>\n            Password\n          </label>\n        </div>\n        <button type=\"submit\" name=\"register\" className={classes.Button}>\n          Register\n        </button>\n        <div \n          onClick={() => props.closeRegister()} \n          className={classes.Back}>\n          <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default connect(null, actions)(Register);\n","import React from \"react\";\nimport classes from \"../css/LoginContainer.module.css\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nimport { connect } from \"react-redux\";\nimport { openRegister } from \"../actions/authActions\";\nconst actions = { openRegister };\n\nconst Login = (props) => (\n  <>\n    <form onSubmit={props.onSubmit}>\n      <div className={classes.LoginContainer}>\n\n        {props.error && <ErrorMessage error={props.error}/>}\n        <div className={classes.Group}>\n          <input\n            type=\"text\"\n            name=\"email\"\n            className={classes.Input}\n            onChange={props.onChange}\n            required\n          />\n          <label htmlFor=\"email\" className={classes.Label}>\n            Email\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className={classes.Input}\n            onChange={props.onChange}\n            required\n          />\n          <label htmlFor=\"password\" className={classes.Label}>\n            Password\n          </label>\n        </div>\n        <div className={classes.ButtonContainer}>\n          <button type=\"submit\" name=\"login\" className={classes.Button}>\n            Login\n          </button>\n          <button\n            name=\"register\"\n            onClick={() => props.openRegister()}\n            className={classes.Button}\n          >\n            Register\n          </button>\n        </div>\n      </div>\n    </form>\n  </>\n);\n\nexport default connect(null, actions)(Login);\n","import React, { Component } from \"react\";\nimport classes from \"../css/LoginContainer.module.css\";\nimport Register from \"../components/Register\";\nimport Login from \"../components/Login\";\nimport { Redirect } from \"react-router-dom\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { login, register } from \"../actions/authActions\";\nconst actions = {\n  login,\n  register,\n  clearErrors,\n};\nconst mapStateToProps = ({ auth, error }) => ({\n  auth: auth,\n  error: error,\n});\n\nclass LoginContainer extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    message: null,\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    error: PropTypes.object.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //Check for login/register error\n      if (error.id === \"LOGIN_FAIL\" || error.id === \"REGISTER_FAIL\" ) {\n        this.setState({ message: error.message.message });\n      } else {\n        this.setState({ message: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  //-- Submit for Login and Register\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password,\n    };\n    //Attempt to log in\n    this.props.login(user);\n    this.props.clearErrors();\n  };\n\n  onSubmitReg = (e) => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n    //Attempt to register\n    this.props.register(newUser);\n    this.props.clearErrors();\n  };\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    const { registerOpen } = this.props.auth;\n\n    return (\n      <div>\n        {isAuthenticated && <Redirect to=\"/search-customers\" />}\n        {!isAuthenticated && (\n          <section className={classes.Container}>\n            <div className={classes.Title}>\n              <h2>Welcome to</h2>\n              <h1>\n                Mug Club 🍻\n              </h1>\n            </div>\n            {!registerOpen && (\n              <Login\n                onSubmit={this.onSubmit}\n                error={this.state.message}\n                onChange={this.onChange}\n              />\n            )}\n\n            {registerOpen && (\n              <Register\n                onSubmit={this.onSubmitReg}\n                error={this.state.message}\n                onChange={this.onChange}\n              />\n            )}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actions)(LoginContainer);\n","import React from \"react\";\nimport classes from \"../css/Home.module.css\";\nimport LoginContainer from \"../containers/LoginContainer\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className={classes.BgImage}></div>\n      <div className={classes.Container}>\n        <LoginContainer />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"../components/Home\";\n\nconst HomePage = (props) => {\n  return <Home />;\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst DeleteIcon = (props) => (\n  <button className={classes.DeleteButton} onClick={props.delete}>\n    <FontAwesomeIcon icon={faTrashAlt} />\n  </button>\n)\n\nexport default DeleteIcon;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst EditIcon = ({ edit }) => (\n  <button className={classes.EditButton} onClick={edit}>\n    <FontAwesomeIcon icon={faPencilAlt} />\n  </button>\n);\n\nexport default EditIcon;\n","import React from \"react\";\nimport classes from \"../css/Customer.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport EditIcon from \"./EditIcon\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nconst mapStateToProps = ({ modal: { modalOpen } }) => ({\n  modalOpen: modalOpen,\n});\n\nconst Customer = (props) => {\n  return (\n    <div className={classes.CustomerCard}>\n      <div\n        className={\n          props.completed\n            ? `${classes.TitleContainer} ${classes.Completed}`\n            : classes.TitleContainer\n        }\n      >\n        <h1 className={classes.CustomerTitle}>\n          {props.name.first} {props.name.last}\n          {props.completed ? (\n            <div className={classes.CheckIcon}>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </div>\n          ) : null}\n        </h1>\n        <h2 className={classes.CustomerDetails}>Mug Club #{props.clubId}</h2>\n      </div>\n      <span className={classes.Span}>\n        <h2 className={classes.CustomerDetails}>\n          Beers Completed: {props.calculateCompletedBeers(props.beers)} /{\" \"}\n          {props.beers.length}\n        </h2>\n      </span>\n      <span className={classes.ButtonContainer}>\n        <EditIcon edit={props.openModal} />\n        <DeleteIcon delete={props.deleteCustomer} />\n      </span>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Customer);\n","import { OPEN_MODAL, CLOSE_MODAL } from \"./action-types\";\n\nexport const openModal = (modalType, data={}) => ({\n  type: OPEN_MODAL,\n  payload: {modalType, data}\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL\n});\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER,\n  UPDATE_CUSTOMER_BEERS,\n  CLUB_COMPLETED,\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nconst URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://bearmugclub.herokuapp.com/api/customers/\"\n    : \"http://localhost:5000/api/customers/\";\n\nexport const fetchCustomers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchCustomersBegin());\n    return fetch(URL, tokenConfig(getState))\n      .then((res) => res.json())\n      .then((customers) => {\n        dispatch(fetchCustomersSuccess(customers));\n        return customers;\n      })\n      .catch((error) => dispatch(fetchCustomersFailure(error)));\n  };\n};\n\nexport const fetchCustomersBegin = () => ({\n  type: FETCH_CUSTOMERS_BEGIN,\n});\n\nexport const fetchCustomersSuccess = (customers) => ({\n  type: FETCH_CUSTOMERS_SUCCESS,\n  payload: customers,\n});\n\nexport const fetchCustomersFailure = (error) => ({\n  type: FETCH_CUSTOMERS_FAILURE,\n  payload: { error },\n});\n\nexport const createCustomer = (newCustomer) => (dispatch, getState) => {\n  axios\n    .post(URL, newCustomer, tokenConfig(getState))\n    .then((res) =>\n      dispatch({\n        type: CREATE_CUSTOMER,\n        payload: res.data,\n      })\n    )\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateCustomer = (customer, id) => (dispatch, getState) => {\n  axios\n    .put(URL + id, customer, tokenConfig(getState))\n    .then(dispatch(fetchCustomers()))\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteCustomer = (id) => (dispatch, getState) => {\n  axios\n    .delete(URL + id, tokenConfig(getState))\n    .then((res) =>\n      dispatch({\n        type: DELETE_CUSTOMER,\n        payload: id,\n      })\n    )\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateCustomerBeers = (updatedBeers) => ({\n  type: UPDATE_CUSTOMER_BEERS,\n  payload: updatedBeers,\n})\n\nexport const clubCompleted = () => ({\n  type: CLUB_COMPLETED\n})\n","import React, { Component } from \"react\";\nimport classes from \"../css/Search.module.css\";\nimport Customer from \"./Customer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"@sweetalert/with-react\";\nimport filterCustomers from \"../lib/filterCustomers\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { openModal } from \"../actions/modalActions\";\nimport { deleteCustomer } from \"../actions/customerActions\";\nconst actions = {\n  openModal,\n  deleteCustomer,\n};\nconst mapStateToProps = ({ auth, customers: { customers, loading } }) => {\n  return {\n    customers: customers,\n    loading: loading,\n    auth: auth,\n  };\n};\nconst uniqid = require(\"uniqid\");\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n  };\n\n  static propTypes = {\n    customers: PropTypes.array.isRequired,\n  };\n\n  updateSearch = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  deleteCustomer = (customer) => {\n    swal({\n      title: `Delete ${customer.name.first}?`,\n      text: `Do you really want to delete this customer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal(\n          `Boom! ${customer.name.first} ${customer.name.last} has been deleted!`,\n          {\n            icon: \"success\",\n          }\n        );\n        this.props.deleteCustomer(customer._id);\n      } else {\n        swal(`Phew! ${customer.name.first} is safe!`);\n      }\n    });\n  };\n\n  calculateCompletedBeers = (arr) => {\n    if (arr) {\n      let count = 0;\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].finished === true) {\n          count++;\n        }\n      }\n      return count;\n    }\n  };\n\n  render() {\n    const { search } = this.state;\n    const customers = this.props.customers;\n    const loading = this.props.loading;\n    let filteredCustomers;\n    if (customers && search) {\n      if (loading) return <h2>Loading...</h2>;\n      filteredCustomers = filterCustomers(customers, search);\n    }\n\n    const mappedCustomers = filteredCustomers\n      ? filteredCustomers.slice(0, 20).map((customer) => {\n          return (\n            <Customer\n              key={uniqid()}\n              name={customer.name}\n              email={customer.email}\n              username={customer.username}\n              clubId={customer.mugClub.clubId}\n              beers={customer.mugClub.beers}\n              completed={customer.mugClub.completed}\n              openModal={() => this.props.openModal(\"EDIT_CUSTOMER\", customer)}\n              openBeerModal={() =>\n                this.props.toggleCustomerBeersModal(customer)\n              }\n              calculateCompletedBeers={this.calculateCompletedBeers}\n              deleteCustomer={() => this.deleteCustomer(customer)}\n            />\n          );\n        })\n      : null;\n    return (\n      <>\n        <div className={classes.Background}>\n          <div className={classes.InputContainer}>\n            <h1 className={classes.SearchTitle}>\n              Search Customers\n              <div\n                className={classes.AddIcon}\n                onClick={() => this.props.openModal(\"NEW_CUSTOMER\")}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </h1>\n            <div className={classes.Group}>\n              <input\n                type=\"text\"\n                name=\"search\"\n                className={classes.Input}\n                defaultValue={this.state.search}\n                onChange={this.updateSearch}\n                required\n              />\n              <label htmlFor=\"search\" className={classes.Label}>\n                Please Enter Name or Mug Club ID\n              </label>\n            </div>\n\n            <div className={classes.CustomerContainer}>\n              {search && (\n                <>\n                  <h3>Results:</h3>\n                  {mappedCustomers}\n                  <h4>Max 20 Results</h4>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actions)(Search);\n","export default function filterCustomers(customers = [], search) {\n  let filtered = customers.filter((customer) => {\n    // Number Search\n    let id = customer.mugClub.clubId.toString();\n    let number = search === id ? customer : null;\n\n    // Name Search\n    let strings =\n      customer.name.first.toLowerCase().includes(search.toLowerCase()) ||\n      customer.name.last.toLowerCase().includes(search.toLowerCase());\n\n    if (strings) {\n      return strings;\n    }\n    if (number) {\n      return number;\n    }\n    return null;\n  });\n  return filtered;\n};","import React, { Component } from \"react\";\nimport Search from \"../components/Search\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { loadUser } from \"../actions/authActions\";\nimport { fetchCustomers } from \"../actions/customerActions\";\nconst actions = {\n  loadUser,\n  fetchCustomers,\n};\nconst mapStateToProps = ({ auth, customers: { customers } }) => ({\n  auth: auth,\n  customers: customers,\n});\n\nclass SearchContainer extends Component {\n  componentDidMount = async () => {\n    const { token, customers } = this.props.auth;\n    if (token && !customers) {\n      await this.props.loadUser();\n      await this.loadDatabase(token);\n    }\n  };\n\n  loadDatabase = (token) => {\n    if (token) {\n      try {\n        this.props.fetchCustomers();\n      } catch (error) {\n        throw new Error(\n          \"Cannot connect to database. Server may be busy or unavailable.\"\n        );\n      }\n    } else {\n      //Add error redirect to login page -> due to database not loading\n    }\n  };\n\n  render() {\n    return <Search />\n  }\n}\n\nexport default connect(mapStateToProps, actions)(SearchContainer);\n","import React from \"react\";\nimport SearchContainer from \"../containers/SearchContainer\";\n\nconst SearchPage = (props) => {\n  return <SearchContainer />;\n};\n\nexport default SearchPage;\n","import React from \"react\";\nimport classes from \"../css/BeerDisplay.module.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst mapStateToProps = ({ beers: { beers, loading } }) => ({\n  beers: beers,\n  loading: loading\n});\nconst uniqid = require(\"uniqid\");\n\nconst BeerDisplay = (props) => {\n  const { beers } = props;\n  const beerList = beers\n    ? beers.map((beer) => {\n        return (\n          <ListItem\n            key={uniqid()}\n            dense\n            button\n            className={classes.ListItem}\n            onClick={() => props.openModal(\"EDIT_BEER\", beer)}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.Avatar}\n                alt={`${beer.brewery}`}\n                src={beer.url}\n              />\n            </ListItemAvatar>\n            <div className={classes.Group}>\n              <h3>{beer.brewery}</h3>\n              <h2>{beer.name}</h2>\n            </div>\n          </ListItem>\n        );\n      })\n    : null;\n\n  return (\n    <section className={classes.DisplayContainer}>\n      <h1 className={classes.BeersTitle}>\n        Beers List\n        <div\n          className={classes.AddIcon}\n          onClick={() => props.openModal(\"NEW_BEER\")}\n        >\n          <FontAwesomeIcon icon={faPlus} />\n        </div>\n      </h1>\n      <List dense className={classes.ListContainer}>\n        {props.loading && <h2>Loading Beers Bro...</h2>}\n        {beerList}\n      </List>\n    </section>\n  );\n};\n\nexport default connect(mapStateToProps, actions)(BeerDisplay);\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nconst URL = process.env.NODE_ENV === \"production\" \n? \"https://bearmugclub.herokuapp.com/api/beers/\"\n: \"http://localhost:5000/api/beers/\";\n\nexport const fetchBeers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchBeersBegin());\n    return fetch(URL, tokenConfig(getState))\n      .then(res => res.json())\n      .then(beers => {\n        dispatch(fetchBeersSuccess(beers));\n        return beers;\n      })\n      .catch(error => dispatch(fetchBeersFailure(error)));\n  };\n};\n\nexport const fetchBeersBegin = () => ({\n  type: FETCH_BEERS_BEGIN\n});\n\nexport const fetchBeersSuccess = beers => ({\n  type: FETCH_BEERS_SUCCESS,\n  payload: beers\n});\n\nexport const fetchBeersFailure = error => ({\n  type: FETCH_BEERS_FAILURE,\n  payload: { error }\n});\n\nexport const createBeer = newBeer => (dispatch, getState) => {\n  axios\n    .post(URL, newBeer, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: CREATE_BEER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteBeer = id => (dispatch, getState) => {\n  axios\n    .delete(URL + id, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_BEER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateBeer = (beer, id) => (dispatch, getState) => {\n  const beerURL = URL + id;\n  axios\n    .put(beerURL, beer, tokenConfig(getState))\n    .then(dispatch(fetchBeers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import React, { Component } from \"react\";\nimport BeerDisplay from \"../components/BeerDisplay\";\nimport { connect } from \"react-redux\";\nimport { loadUser } from \"../actions/authActions\";\nimport { fetchBeers } from \"../actions/beerActions\";\nconst actions = { loadUser, fetchBeers };\nconst mapStateToProps = ({ auth, beers: { beers } }) => ({\n  auth: auth,\n  beers: beers\n});\n\nclass BeersContainer extends Component {\n  componentDidMount = async () => {\n    const { token, beers } = this.props.auth;\n    if (token && !beers) {\n      await this.props.loadUser();\n      await this.loadDatabase(token);\n    }\n  };\n\n  loadDatabase = (token) => {\n    if (token) {\n      try {\n        this.props.fetchBeers();\n      } catch (e) {\n        throw new Error(\n          \"Cannot connect to database. Server may be busy or unavailable.\"\n        );\n      }\n    }\n  };\n  render() {\n    return <BeerDisplay />;\n  }\n}\n\nexport default connect(mapStateToProps, actions)(BeersContainer);\n","import React from \"react\";\nimport BeersContainer from \"../containers/BeersContainer\";\n\nconst BeerPage = (props) => {\n  return <BeersContainer />;\n};\n\nexport default BeerPage;\n","import React from 'react';\nimport classes from \"../css/Account.module.css\";\n\nconst Account = props => (\n  <>\n    <div className={classes.AccountContainer}>\n      <h1>Account</h1>\n      <div className={classes.InfoContainer}>\n        <h2>Name</h2>\n        <h2>Email</h2>\n        <h2>Reset Password</h2>\n        <h2>Delete Account</h2>\n      </div>\n    </div>\n  </>\n)\n\nexport default Account;","import React from 'react';\nimport Account from \"../components/Account\";\n\nconst AccountPage = props => (\n  <>\n    <Account />\n  </>\n)\n\nexport default AccountPage;","import { OPEN_NAV, CLOSE_NAV } from \"./action-types\";\n\nexport const openNav = () => ({\n  type: OPEN_NAV\n});\n\nexport const closeNav = () => ({\n  type: CLOSE_NAV\n});","import React from \"react\";\nimport classes from \"../css/Backdrop.module.css\";\n\n// Redux imports\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { closeNav } from \"../actions/navActions\";\nconst actions = { closeModal, closeNav };\nconst mapStateToProps = ({ modal: { modalOpen, navOpen} }) => ({\n  modalOpen: modalOpen,\n  navOpen: navOpen,\n});\n\nconst Backdrop = (props) => (\n  <>\n    {props.modalOpen && (\n      <div\n        className={`${classes.Backdrop} ${classes.Modal}`}\n        onClick={() => props.closeModal()}\n      ></div>\n    )}\n    {props.navOpen && (\n      <div\n        className={`${classes.Backdrop} ${classes.Nav}`}\n        onClick={() => props.closeNav()}\n      ></div>\n    )}\n  </>\n);\n\nexport default connect(mapStateToProps, actions)(Backdrop);\n","import React from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faSearch,\n  faBeer,\n  faUserTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nimport { closeNav } from \"../actions/navActions\";\nconst actions = {\n  openModal,\n  closeNav,\n};\nconst urlName = \"\";\n\nconst HamburgerNav = (props) => {\n  return (\n    <ul className={classes.HamburgerList}>\n      <Link\n        to={`${urlName}/search-customers`}\n        className={classes.HamburgerItem}\n        onClick={() => props.closeNav()}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faSearch} />\n          </div>\n          <h2>Search</h2>\n        </div>\n      </Link>\n      <Link\n        to={`${urlName}/beers-list`}\n        className={classes.HamburgerItem}\n        onClick={() => props.closeNav()}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faBeer} />\n          </div>\n          <h2>Beers</h2>\n        </div>\n      </Link>\n      <button\n        onClick={() => props.comboToggle(\"NEW_CUSTOMER\")}\n        className={classes.HamburgerItem}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faPlus} />\n          </div>\n          <h2>New Customer</h2>\n        </div>\n      </button>\n      <button\n        onClick={() => props.comboToggle(\"NEW_BEER\")}\n        className={classes.HamburgerItem}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faPlus} />\n          </div>\n          <h2>New Beer</h2>\n        </div>\n      </button>\n      {/* <Link\n        to={`${urlName}/account`}\n        className={classes.HamburgerItem}\n        onClick={() => props.closeNav()}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faUserCircle} />\n          </div>\n          <h2>Account</h2>\n        </div>\n      </Link> */}\n      <button\n        onClick={() => props.logoutAlert()}\n        className={classes.HamburgerItem}\n      >\n        <div className={classes.LinkDiv}>\n          <div>\n            <FontAwesomeIcon icon={faUserTimes} />\n          </div>\n          <h2>Log Out</h2>\n        </div>\n      </button>\n    </ul>\n  );\n};\n\nexport default connect(null, actions)(HamburgerNav);\n","import React from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport { Link } from \"react-router-dom\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nconst actions = {\n  openModal,\n};\n\nconst RegularNav = (props) => (\n  <ul className={classes.List}>\n    <li className={classes.Item}>\n      <Link to={`${props.urlName}/search-customers`} className={classes.Link}>\n        Search\n      </Link>\n    </li>\n    <li className={classes.Item}>\n      <Link to={`${props.urlName}/beers-list`} className={classes.Link}>\n        Beers List\n      </Link>\n    </li>\n    <li className={classes.Item}>\n      <button\n        onClick={() => props.openModal(\"NEW_CUSTOMER\")}\n        className={classes.NewButton}\n      >\n        New Customer\n      </button>\n    </li>\n    <li className={classes.Item}>\n      <button\n        onClick={() => props.openModal(\"NEW_BEER\")}\n        className={classes.NewButton}\n      >\n        New Beer\n      </button>\n    </li>\n    {/* <li className={classes.Item}>\n              <Link to={`${props.urlName}/account`} className={classes.Link}>\n                Account\n              </Link>\n            </li> */}\n    <li className={classes.Item}>\n      <button onClick={() => props.logoutAlert()} className={classes.Logout}>\n        Log Out\n      </button>\n    </li>\n  </ul>\n);\n\nexport default connect(null, actions)(RegularNav);\n","import React, { Component } from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport Backdrop from \"./Backdrop\";\nimport HamburgerNav from \"./HamburgerNav\";\nimport RegularNav from \"./RegularNav\";\n\nimport { Redirect } from \"react-router-dom\";\nimport Burger from \"@animated-burgers/burger-squeeze\";\nimport \"@animated-burgers/burger-squeeze/dist/styles.css\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nimport { openNav, closeNav } from \"../actions/navActions\";\nimport { logout } from \"../actions/authActions\";\nconst actions = {\n  logout,\n  openModal,\n  openNav,\n  closeNav,\n};\nconst mapStateToProps = ({ auth, modal }) => ({\n  auth: auth,\n  navOpen: modal.navOpen,\n});\n\nclass NavBar extends Component {\n  state = {};\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    navOpen: PropTypes.bool,\n  };\n\n  logoutAlert = () => {\n    swal({\n      title: \"Log out?\",\n      icon: \"warning\",\n      buttons: [\"Cancel\", \"Logout\"],\n      dangerMode: true,\n    }).then((willLogout) => {\n      if (willLogout) {\n        this.props.logout();\n      } else {\n        swal(\"You have not been logged out\");\n      }\n    });\n  };\n\n  comboToggle = async (modalType) => {\n    await this.props.closeNav();\n    await this.props.openModal(modalType);\n  };\n\n  render() {\n    const urlName = \"\";\n    const { token, isAuthenticated } = this.props.auth;\n    if (!isAuthenticated && !token) {\n      return <Redirect to={`${urlName}/`} push={true} />\n    }\n\n    const Navigation = (\n      <nav className={classes.Navbar}>\n        <h1>\n          MUG CLUB\n          <span role=\"img\" aria-label=\"mugs of beers\">\n            🍻\n          </span>\n        </h1>\n        {this.props.navOpen \n          ? <HamburgerNav\n              logoutAlert={this.logoutAlert}\n              comboToggle={this.comboToggle}\n              urlName={urlName} />\n          : <RegularNav \n              logoutAlert={this.logoutAlert} \n              urlName={urlName} />\n        }\n        <div className={classes.HamburgerContainer}>\n          <Burger\n            isOpen={this.props.navOpen}\n            onClick={\n              this.props.navOpen\n                ? () => this.props.closeNav()\n                : () => this.props.openNav()\n            }\n          />\n        </div>\n      </nav>\n    );\n\n    return (\n      <>\n        <Backdrop />\n        {token && Navigation}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actions)(NavBar);\n","import React from \"react\";\nimport HomePage from \"./homePage\";\nimport SearchPage from \"./searchPage\";\nimport BeersPage from \"./beersPage\";\nimport AccountPage from \"./accountPage\";\nimport NavBar from \"../components/NavBar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nconst mapStateToProps = ({ auth }) => ({\n  auth: auth,\n  isAuthenticated: auth.isAuthenticated,\n});\n\nconst Routing = (props) => {\n  const urlName = \"\";\n  const { token, isAuthenticated } = props.auth;\n\n  return (\n    <>\n      <Router>\n        {!isAuthenticated && !token && (\n          <Redirect to={`${urlName}/`} push={true} />\n        )}\n        <div>\n          <NavBar />\n          <Switch>\n            <Route exact path={`${urlName}/`}>\n              <HomePage />\n            </Route>\n            <Route path={`${urlName}/search-customers`}>\n              <SearchPage />\n            </Route>\n            <Route path={`${urlName}/beers-list`}>\n              <BeersPage />\n            </Route>\n            <Route path={`${urlName}/account`}>\n              <AccountPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(Routing);\n","import React from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport styles from \"../css/BeersList.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nfunction BeerList(props) {\n  const [checked, setChecked] = React.useState([-1]);\n  const [unchecked, setUnchecked] = React.useState([-1]);\n\n  const handleToggle = (beer) => () => {\n    const currentIndex = checked.indexOf(beer);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(beer);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n\n    if (beer.finished === true) {\n      const currentIndex = unchecked.indexOf(beer);\n      const newChecked = [...unchecked];\n      if (currentIndex === -1) {\n        newChecked.push(beer);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n      setUnchecked(newChecked);\n    }\n    console.log(unchecked);\n  };\n\n  const checkForIcon = (beer) => {\n    if (\n      (checked.indexOf(beer) !== -1 && !beer.finished) ||\n      (beer.finished && unchecked.indexOf(beer) !== -1) || beer.finished \n      ) {\n      return (\n        <span className={styles.CheckIcon}>\n          <FontAwesomeIcon icon={faCheckCircle} />\n        </span>\n      );\n    }\n  };\n\n  const mappedBeers = props.beers.map((beer) => {\n    return (\n      <li\n        key={uniqid()}\n        onClick={handleToggle(beer)}\n        className={\n          beer.finished ? `${styles.Item} ${styles.Completed}` : styles.Item\n        }\n      >\n        <img\n          className={styles.Avatar}\n          alt={`${beer.brewery}`}\n          src={`${beer.url}`}\n        />\n        <div className={styles.NameContainer}>\n          <h1>{`${beer.brewery}`}</h1>\n          <h2>{`${beer.name}`}</h2>\n        </div>\n        <div>\n          {checkForIcon(beer)}\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <ul className={styles.ListContainer}>{mappedBeers}</ul>\n      <div className={classes.ButtonContainer}>\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          onClick={(e) => props.handleSubmit(e, checked, unchecked)}\n          className={classes.EditButton}\n        />\n        <input\n          type=\"submit\"\n          value=\"Cancel\"\n          onClick={() => props.closeModal()}\n          className={classes.CancelButton}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default connect(null, actions)(BeerList);\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\nimport BeersList from \"./BeersList\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport {\n  updateCustomer,\n  fetchCustomers,\n  updateCustomerBeers,\n} from \"../actions/customerActions\";\nconst actions = {\n  closeModal,\n  updateCustomer,\n  fetchCustomers,\n  updateCustomerBeers,\n};\nconst mapStateToProps = ({ modal: { info }, customers}) => {\n  const {\n    _id,\n    name: { first, last },\n    mugClub: { clubId, beers, completed },\n  } = info;\n  const { updatedBeers } = customers;\n  return {\n    first: first,\n    last: last,\n    clubId: clubId,\n    completed: completed,\n    customerBeers: beers,\n    customerId: _id,\n    updatedBeers: updatedBeers,\n  };\n};\n\nclass EditCustomer extends Component {\n  state = {};\n\n  static propTypes = {\n    first: PropTypes.string,\n    last: PropTypes.string,\n    clubId: PropTypes.number,\n    completed: PropTypes.bool,\n    customerBeers: PropTypes.array,\n    customerId: PropTypes.string,\n  };\n\n  componentDidMount = () => {\n    console.log(\"Edit Customer Modal Mounted\");\n    const {\n      first,\n      last,\n      clubId,\n      customerId,\n      completed,\n      customerBeers,\n    } = this.props;\n    this.setState({\n      first: first,\n      last: last,\n      clubId: clubId,\n      customerId: customerId,\n      completed: completed,\n      customerBeers: customerBeers,\n    });\n  };\n\n  updateCompletedBeers = (checked) => {\n    const { customerBeers } = this.state;\n    let updatedBeers = [...customerBeers];\n    for (let k = 0; k < updatedBeers.length; k++) {\n      for (let h = 1; h < checked.length; h++) {\n        if (updatedBeers[k]._id === checked[h]._id) {\n          updatedBeers[k].finished = true;\n        }\n      }\n    }\n    this.props.updateCustomerBeers(updatedBeers);\n  };\n\n  checkCompletion = (beers) => {\n    let value = true;\n    for (let i = 0; i < beers.length; i++) {\n      if (beers[i].finished === false) {\n        return (value = false);\n      }\n    }\n    if (value === true) {\n      this.setState({\n        completed: true,\n      });\n    }\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e, checked) => {\n    e.preventDefault();\n    await this.updateCompletedBeers(checked);\n    await this.checkCompletion(this.state.customerBeers);\n    const updatedCustomer = await {\n      name: {\n        first: this.state.first,\n        last: this.state.last,\n      },\n      mugClub: {\n        clubId: this.state.clubId,\n        completed: this.state.completed,\n        beers: this.props.updatedBeers,\n      },\n    };\n    try {\n      await this.props.updateCustomer(updatedCustomer, this.props.customerId);\n      await this.props.fetchCustomers();\n      await this.props.closeModal();\n      swal({\n        title: `You've updated ${this.state.first} ${this.state.last}!`,\n        icon: \"success\",\n        button: \"Ok!\",\n      });\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  render() {\n    if (!this.props) {\n      return null;\n    }\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>Edit Customer</h2>\n              <div className={classes.ModalContent}>\n                <form\n                  className={classes.Form}\n                  onSubmit={(e) => this.props.handleSubmit(e)}\n                >\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"first\"\n                      className={classes.Input}\n                      defaultValue={this.props.first}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"first\" className={classes.Label}>\n                      First Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"last\"\n                      className={classes.Input}\n                      defaultValue={this.props.last}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"last\" className={classes.Label}>\n                      Last Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"clubId\"\n                      className={classes.Input}\n                      defaultValue={this.props.clubId}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"clubId\" className={classes.Label}>\n                      Mug Club ID\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"beerList\" className={classes.BeerLabel}>\n                      Select Beer to Mark as Complete:\n                    </label>\n                    <BeersList\n                      beers={this.props.customerBeers}\n                      updateCompletedBeers={this.updateCompletedBeers}\n                      handleSubmit={this.handleSubmit}\n                      toggleModal={() => this.props.closeModal()}\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actions)(EditCustomer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { createCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = { \n  closeModal, \n  createCustomer, \n  fetchCustomers \n};\nconst mapStateToProps = ({ customers: { customers } }) => ({\n  customers: customers,\n});\n\nclass NewCustomer extends Component {\n  state = {};\n  \n  static propTypes = {\n    customers: PropTypes.array,\n  };\n\n  customerIdCheck = (customers) => {\n    const enteredValue = this.state.clubId;\n    for (let i = 0; i < customers.length; i++) {\n      let id = customers[i].mugClub.clubId.toString();\n      if (id === enteredValue) {\n        return true;\n      }\n    }\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if the submitted Mug Club Id is currently in the database\n    let value = this.customerIdCheck(this.props.customers);\n    if (value) {\n      swal({\n        title: `Mug Club Number ${this.state.clubId} is already taken.`,\n        text: \"Please enter a new number.\",\n        icon: \"info\",\n        button: \"Ok\",\n      });\n    } else {\n      const newCustomer = {\n        name: {\n          first: this.state.first,\n          last: this.state.last,\n        },\n        mugClub: {\n          clubId: this.state.clubId,\n        },\n      };\n      try {\n        console.log(\"Saving customer...\");\n        await this.props.createCustomer(newCustomer);\n        console.log(\"Refetching customers...\");\n        await this.props.fetchCustomers();\n        swal({\n          title: `${this.state.first} has been created!`,\n          icon: \"success\",\n          button: \"Ok!\",\n        });\n        console.log(`${this.state.first} ${this.state.last} was saved!`);\n        this.props.closeModal();\n      } catch (e) {\n        console.log(e);\n        swal({\n          title: `Oops! Something went wrong :(`,\n          icon: \"info\",\n          button: \"Crap!\",\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>New Customer</h2>\n              <div className={classes.ModalContent}>\n                <form\n                  className={classes.ModalForm}\n                  onSubmit={(e) => this.handleSubmit(e)}\n                >\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"first\"\n                      className={classes.Input}\n                      defaultValue={this.state.first}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"first\" className={classes.Label}>\n                      First Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"last\"\n                      className={classes.Input}\n                      defaultValue={this.state.last}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"last\" className={classes.Label}>\n                      Last Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"number\"\n                      name=\"clubId\"\n                      className={classes.Input}\n                      defaultValue={this.state.clubId}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"clubId\" className={classes.Label}>\n                      Mug Club ID (Suggested #: {this.props.customers.length})\n                    </label>\n                  </div>\n                  <div className={classes.ButtonContainer}>\n                    <input\n                      type=\"submit\"\n                      value=\"Submit\"\n                      onClick={(e) => this.handleSubmit(e)}\n                      className={classes.EditButton}\n                    />\n                    <input\n                      type=\"submit\"\n                      value=\"Cancel\"\n                      onClick={() => this.props.closeModal()}\n                      className={classes.CancelButton}\n                      formNoValidate\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actions)(NewCustomer);\n","const beerTypes = {\n  PaleAles: [\n    \"American Amber Ale\",\n    \"American Pale Ale\",\n    \"Blonde Ale\",\n    \"English Bitter\",\n    \"English Pale Ale\"\n  ],\n  IndianPaleAles: [\"American IPA\", \"Imperial or Double IPA\", \"English IPA\"],\n  Lagers: [\n    \"American Lager\",\n    \"German Helles\",\n    \"German Pilsner\",\n    \"Czech Pilsner\"\n  ],\n  DarkLagers: [\n    \"Amber American Lager\",\n    \"Oktoberfest\",\n    \"German Schwarzbier\",\n    \"Vienna Lager\"\n  ],\n  GermanBocks: [\"Traditional Bock\", \"Doppelbock\", \"Weizenbock\", \"Maibock\"],\n  BrownAles: [\"American Brown Ale\", \"English Brown Ale\"],\n  Porters: [\n    \"American Imperial Porter\",\n    \"English Brown Porter\",\n    \"Robust Porter\"\n  ],\n  Stouts: [\n    \"American Stout\",\n    \"American Imperial Stout\",\n    \"Oatmeal Stout\",\n    \"Milk Stout\",\n    \"Irish Dry Stout\"\n  ],\n  BelgianStyle: [\n    \"Belgian Pale Ale\",\n    \"Belgian Dubbel\",\n    \"Belgian Tripel\",\n    \"Belgian Quadrupel\",\n    \"Belgian Strong Dark Ale\",\n    \"Belgian Saison\"\n  ],\n  Wheat: [\n    \"American Pale Wheat\",\n    \"Belgian Witbier\",\n    \"Berliner Weisse\",\n    \"Dunkelweizen\",\n    \"Hefeweizen\"\n  ],\n  Sour: [\n    \"American Sour\",\n    \"Belgian Fruit Lambic\",\n    \"Flanders Red Ale\",\n    \"Belgian Gueuze\"\n  ],\n  Specialty: [\n    \"American Black Ale\",\n    \"Barrel-Aged\",\n    \"Chocolate\",\n    \"Coffee\",\n    \"Fruit and Vegetable\",\n    \"Gluten-free\",\n    \"Herb and Spice\",\n    \"Honey\",\n    \"Pumpkin\",\n    \"Rye\",\n    \"Session\",\n    \"Smoked\",\n    \"Seasonal\",\n    \"Other\"\n  ]\n};\n\nexport default beerTypes;\n","import React from \"react\";\nimport beerTypes from \"./BeerTypes\";\nconst uniqid = require(\"uniqid\");\n\nexport const typeMap = Object.entries(beerTypes).map(([key, value]) => {\n  return (\n    <optgroup key={uniqid()} label={key.split(/(?=[A-Z])/).join(\" \")}>\n      {value.map(type => (\n        <option key={uniqid()} value={type}>\n          {type}\n        </option>\n      ))}\n    </optgroup>\n  );\n});\n\n//Iterate over object, return the optgroup with the key name, then map each key's array to display the options within that optgroup\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { deleteBeer, updateBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  deleteBeer,\n  updateBeer,\n  fetchBeers,\n};\nconst mapStateToProps = ({ modal: { info }}) => {\n  const { _id, name, type, brewery, breweryLocation, url } = info;\n  return {\n    id: _id,\n    name: name,\n    type: type,\n    brewery: brewery,\n    breweryLocation: breweryLocation,\n    url: url,\n  };\n};\n\nclass EditBeer extends Component {\n  state = {};\n\n  componentDidMount = () => {\n    console.log(\"Edit Beer Modal Mounted\");\n    const { id, name, type, brewery, breweryLocation, url } = this.props;\n    this.setState({\n      id: id,\n      name: name,\n      type: type,\n      brewery: brewery,\n      breweryLocation: breweryLocation,\n      url: url,\n    });\n  };\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    brewery: PropTypes.string.isRequired,\n    breweryLocation: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const updatedBeer = {\n      name: this.state.name,\n      type: this.state.type,\n      brewery: this.state.brewery,\n      breweryLocation: this.state.breweryLocation,\n      url: this.state.url,\n    };\n    try {\n      const id = this.state.id;\n      await this.props.updateBeer(updatedBeer, id);\n      swal({\n        title: `You've updated the ${this.state.name} Beer`,\n        icon: \"success\",\n        button: \"Sweet!\",\n      });\n      await this.props.fetchBeers();\n      await this.props.closeModal();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  deleteBeerAlert = () => {\n    swal({\n      title: `Delete ${this.props.name}?`,\n      text: `Do you really want to delete this beer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        swal(`Hasta la Vista! ${this.props.name} has been deleted!`, {\n          icon: \"success\",\n        });\n        await this.props.deleteBeer(this.props.id);\n        await this.props.fetchBeers();\n        this.props.closeModal();\n      } else {\n        swal(`Today is your luck day, you sweet sweet miracle drink!`);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>Edit Beer</h2>\n            <div className={classes.ModalContent}>\n              {/* <img\n                className={classes.ModalImage}\n                src={this.props.url}\n                alt={this.props.name}\n              /> */}\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    defaultValue={this.props.name}\n                    onChange={(e) => this.handleInputChange(e)}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={this.props.type}\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option defaultValue={this.props.type}>\n                        {this.props.type}\n                      </option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    defaultValue={this.props.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    defaultValue={this.props.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"url\"\n                    className={classes.Input}\n                    defaultValue={this.props.url}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"url\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                  />\n                </div>\n              </form>\n              <DeleteIcon delete={this.deleteBeerAlert} />\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actions)(EditBeer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { createBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  createBeer,\n  fetchBeers,\n};\n\nclass NewBeerModal extends Component {\n  state = {\n    name: \"\",\n    type: \"\",\n    brewery: \"\",\n    breweryLocation: \"\",\n    url: \"\",\n  };\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newBeer = {\n        name: this.state.name,\n        type: this.state.type,\n        brewery: this.state.brewery,\n        breweryLocation: this.state.breweryLocation,\n        url: this.state.beerUrl,\n        finished: false,\n      };\n      await this.props.createBeer(newBeer);\n      swal({\n        title: `${this.state.name} has been created!`,\n        icon: \"success\",\n        button: \"Cool!\",\n      });\n      console.log(\"Fetching beers...\");\n      await this.props.fetchBeers();\n      this.props.closeModal();\n    } catch (e) {\n      console.error(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>New Beer</h2>\n            <div className={classes.ModalContent}>\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.props.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    value={this.state.name}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={null}\n                    value={this.state.type}\n                    placeholder=\"Beer Type\"\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option value={this.state.type}>{this.state.type}</option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    value={this.state.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    value={this.state.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"beerUrl\"\n                    className={classes.Input}\n                    value={this.state.beerUrl}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"beerUrl\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                    formNoValidate\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\n\nexport default connect(null, actions)(NewBeerModal);\n","import React, { Component } from \"react\";\nimport EditCustomer from \"./EditCustomer\";\nimport NewCustomer from \"./NewCustomer\";\nimport EditBeer from \"./EditBeer\";\nimport NewBeer from \"./NewBeer\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst mapStateToProps = ({ modal: { modalType } }) => ({\n  modalType: modalType,\n});\n\nconst RenderModal = (props) => {\n  let renderedModal = props.modalType;\n  switch (renderedModal) {\n    case \"EDIT_CUSTOMER\":\n      return <EditCustomer />;\n    case \"NEW_CUSTOMER\":\n      return <NewCustomer />;\n    case \"EDIT_BEER\":\n      return <EditBeer />;\n    case \"NEW_BEER\":\n      return <NewBeer />;\n    case \"BEER_LIST\":\n      console.log(\"Beer List\");\n      return <></>;\n    default:\n      return <></>;\n  }\n};\n\nRenderModal.propTypes = {\n  modalType: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(RenderModal);\n","import React, { Component } from \"react\";\nimport Routing from \"../pages/Routing\";\nimport Backdrop from \"../components/Backdrop\";\nimport RenderModal from \"../components/RenderModal\";\n// import LoadExistingCustomers from \"../containers/LoadExistingDatabase\";\n\nconst AppContainer = () => (\n  <>\n    <Routing />\n    {/* Only run in Production <LoadExistingCustomers /> */}\n    <Backdrop></Backdrop>\n    <RenderModal />\n  </>\n);\n\nexport default AppContainer;\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  beers: []\n};\n\nexport default function beerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_BEERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_BEERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        beers: action.payload\n      };\n    case FETCH_BEERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        beers: []\n      };\n    case CREATE_BEER:\n      return {\n        ...state,\n        beers: [...state.beers, action.payload]\n      };\n    case DELETE_BEER:\n      return {\n        ...state,\n        beers: state.beers.filter(beer => beer._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER,\n  UPDATE_CUSTOMER_BEERS\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  showEditCustomerModal: false,\n  customers: [],\n  updatedBeers: [],\n};\n\nexport default function customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CUSTOMERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case FETCH_CUSTOMERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        customers: action.payload,\n      };\n    case FETCH_CUSTOMERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        customers: [],\n      };\n    case CREATE_CUSTOMER:\n      return {\n        ...state,\n        customers: [action.payload, ...state.customers],\n      };\n    case DELETE_CUSTOMER:\n      return {\n        ...state,\n        customers: state.customers.filter(\n          (customer) => customer._id !== action.payload\n        ),\n      };\n    case UPDATE_CUSTOMER_BEERS:\n      return {\n        ...state,\n        updatedBeers: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/action-types\";\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  OPEN_REGISTER,\n  CLOSE_REGISTER,\n} from \"../actions/action-types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n  registerOpen: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    case OPEN_REGISTER:\n      return {\n        ...state,\n        registerOpen: true,\n      };\n    case CLOSE_REGISTER:\n      return {\n        ...state,\n        registerOpen: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  OPEN_NAV,\n  CLOSE_NAV,\n} from \"../actions/action-types\";\n\nconst initialState = {\n  modalType: \"\",\n  modalOpen: false,\n  navOpen: false,\n  error: null,\n  info: null,\n};\n\nexport default function modalReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalOpen: true,\n        modalType: action.payload.modalType,\n        info: action.payload.data,\n        error: null,\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalOpen: false,\n        modalType: \"\",\n        info: null,\n        error: null,\n      };\n    case OPEN_NAV:\n      return {\n        ...state,\n        navOpen: true,\n        error: null,\n      };\n    case CLOSE_NAV:\n      return {\n        ...state,\n        navOpen: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport beerReducer from \"./beerReducer\";\nimport customerReducer from \"./customerReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport modalReducer from \"./modalReducer\";\n\nexport default combineReducers({\n  beers: beerReducer,\n  customers: customerReducer,\n  auth: authReducer,\n  error: errorReducer,\n  modal: modalReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nlet store;\n\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  )\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\n\n\n\nexport default store;\n","import React from \"react\";\nimport \"../css/App.css\";\nimport AppContainer from \"../containers/AppContainer\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomerCard\":\"Customer_CustomerCard__194L9\",\"TitleContainer\":\"Customer_TitleContainer__2I3v_\",\"Completed\":\"Customer_Completed__20Oce\",\"CustomerTitle\":\"Customer_CustomerTitle__3WyTr\",\"ButtonContainer\":\"Customer_ButtonContainer__3EM2k\",\"Span\":\"Customer_Span__Mdy56\",\"CheckIcon\":\"Customer_CheckIcon__3cZZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Search_InputContainer__EV67Y\",\"SearchTitle\":\"Search_SearchTitle__2cVn2\",\"Group\":\"Search_Group__2sFLS\",\"Input\":\"Search_Input__3yxj7\",\"Label\":\"Search_Label__3QGEQ\",\"AddIcon\":\"Search_AddIcon__ThTYn\",\"CustomerContainer\":\"Search_CustomerContainer__1720d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayContainer\":\"BeerDisplay_DisplayContainer__m4NDd\",\"BeersTitle\":\"BeerDisplay_BeersTitle__1fJIo\",\"ListContainer\":\"BeerDisplay_ListContainer__1pVdd\",\"ListItem\":\"BeerDisplay_ListItem__VcB7F\",\"AddIcon\":\"BeerDisplay_AddIcon__783QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContainer\":\"BeersList_ListContainer__2dnCL\",\"Item\":\"BeersList_Item__1JPF1\",\"NameContainer\":\"BeersList_NameContainer__1I9B8\",\"Avatar\":\"BeersList_Avatar__3s5nj\",\"Completed\":\"BeersList_Completed__1_Co_\",\"FinishedCheckbox\":\"BeersList_FinishedCheckbox__3f4Y1\",\"CheckIcon\":\"BeersList_CheckIcon__2_kNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3f-j8\",\"Modal\":\"Backdrop_Modal__ls4pp\",\"Nav\":\"Backdrop_Nav__3CfBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditButton\":\"Icons_EditButton__1XMCS\",\"DeleteButton\":\"Icons_DeleteButton__H3TUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BgImage\":\"Home_BgImage__HvnmK\",\"Container\":\"Home_Container__2VrjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoginContainer_Container__xJpdd\",\"Title\":\"LoginContainer_Title__wSUpU\",\"LoginContainer\":\"LoginContainer_LoginContainer__1x9d7\",\"Group\":\"LoginContainer_Group__Kr6Nx\",\"Input\":\"LoginContainer_Input__1yblj\",\"Label\":\"LoginContainer_Label__33FSc\",\"ButtonContainer\":\"LoginContainer_ButtonContainer__GfVq5\",\"Button\":\"LoginContainer_Button__2VmAu\",\"Back\":\"LoginContainer_Back__1hczp\",\"Error\":\"LoginContainer_Error__w7tbC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountContainer\":\"Account_AccountContainer__3c2NV\",\"InfoContainer\":\"Account_InfoContainer__1NMal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"NavBar_Navbar__2rhEp\",\"List\":\"NavBar_List__1JPHj\",\"Link\":\"NavBar_Link__tN1Hz\",\"NewButton\":\"NavBar_NewButton__3sFG3\",\"Logout\":\"NavBar_Logout__3Ro_N\",\"HamburgerContainer\":\"NavBar_HamburgerContainer__28OdJ\",\"HamburgerList\":\"NavBar_HamburgerList__1wXFj\",\"HamburgerItem\":\"NavBar_HamburgerItem__3sXUo\",\"LinkDiv\":\"NavBar_LinkDiv__1NijY\"};"],"sourceRoot":""}