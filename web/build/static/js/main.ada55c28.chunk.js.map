{"version":3,"sources":["css/Modals.module.css","containers/Test.csv","components/Register.js","actions/errorActions.js","actions/action-types.js","actions/authActions.js","components/Login.js","components/Home.js","pages/homePage.js","components/DeleteIcon.js","components/EditIcon.js","components/Customer.js","actions/modalActions.js","actions/customerActions.js","components/Search.js","pages/searchPage.js","components/BeerDisplay.js","pages/beersPage.js","actions/navActions.js","components/Backdrop.js","components/NavBar.js","components/Routing.js","components/BeersList.js","components/EditCustomer.js","components/NewCustomer.js","lib/BeerTypes.js","lib/TypeMap.js","actions/beerActions.js","components/EditBeer.js","components/NewBeer.js","components/RenderModal.js","containers/LoadExistingDatabase.js","containers/Container.js","reducers/beerReducer.js","reducers/customerReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","store.js","pages/App.js","serviceWorker.js","index.js","css/Customer.module.css","css/Search.module.css","css/BeersList.module.css","css/BeerDisplay.module.css","css/Login.module.css","css/Icons.module.css","css/Home.module.css","css/Backdrop.module.css","css/NavBar.module.css"],"names":["module","exports","Register","props","onSubmit","e","className","classes","LoginContainer","message","error","Group","type","name","onChange","Input","required","Bar","htmlFor","Label","Button","bounce","onClick","toggleReg","Back","icon","faArrowAltCircleLeft","returnErrors","status","id","payload","tokenConfig","getState","token","auth","config","headers","Authorization","actions","login","email","password","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","register","clearErrors","Login","state","toggleLogin","setState","target","value","preventDefault","user","onSubmitReg","newUser","prevProps","this","isAuthenticated","buttons","ButtonContainer","Error","to","Container","Title","Component","connect","home","BgImage","HomePage","Home","DeleteIcon","DeleteButton","delete","faTrashAlt","EditIcon","EditButton","edit","faPencilAlt","modalOpen","modal","CustomerCard","completed","TitleContainer","Completed","CustomerTitle","first","last","CheckIcon","faCheckCircle","CustomerDetails","clubId","Span","calculateCompletedBeers","beers","length","openModal","deleteCustomer","modalType","closeModal","fetchCustomers","fetchCustomersBegin","fetch","json","customers","fetchCustomersSuccess","fetchCustomersFailure","createCustomer","newCustomer","uniqid","require","Search","search","updateSearch","event","customer","swal","title","text","dangerMode","willDelete","_id","arr","count","i","finished","filteredCustomers","filter","mugClub","toString","number","strings","toLowerCase","includes","mappedCustomers","slice","map","index","key","username","openBeerModal","toggleCustomerBeersModal","Background","InputContainer","SearchTitle","AddIcon","faPlus","defaultValue","CustomerContainer","SearchPage","beerList","beer","ListItem","dense","button","ListItemAvatar","Avatar","alt","brewery","src","url","DisplayContainer","BeersTitle","List","ListContainer","BeerPage","closeNav","navOpen","ModalBackdrop","NavBackdrop","logout","openNav","NavBar","comboToggle","a","hamburgerMenu","HamburgerList","HamburgerItem","LinkDiv","faSearch","faBeer","faUserTimes","authLinks","Navbar","Item","Link","NewButton","Logout","HamburgerContainer","isOpen","Routing","exact","path","React","useState","checked","setChecked","mappedBeers","currentIndex","indexOf","newChecked","push","splice","styles","NameContainer","checkForIcon","handleSubmit","CancelButton","updateCustomer","customerURL","put","EditCustomer","customerId","customerBeers","updateCompletedBeers","checkedArr","updatedArr","k","h","checkCompletion","handleInputChange","updatedCustomer","console","log","ModalContainer","Grow","in","Modal","ModalTitle","ModalContent","Form","BeerLabel","BeersList","toggleModal","info","NewCustomer","customerIdCheck","enteredValue","ModalForm","formNoValidate","beerTypes","PaleAles","IndianPaleAles","Lagers","DarkLagers","GermanBocks","BrownAles","Porters","Stouts","BelgianStyle","Wheat","Sour","Specialty","typeMap","Object","entries","label","split","join","fetchBeers","fetchBeersBegin","fetchBeersSuccess","fetchBeersFailure","deleteBeer","updateBeer","beerURL","EditBeer","breweryLocation","updatedBeer","deleteBeerAlert","Select","createBeer","newBeer","NewBeerModal","beerUrl","placeholder","RenderModal","NewBeer","csvFile","LoadExistingDatabase","existingCustomers","runConversionAlogrithm","list","existingCustomersArray","readString","delimiter","download","complete","results","temp","parseInt","populateBeersList","beersCompleted","mapBeers","merged","table","saveCustomersToDatabase","customersArray","loadData","initialState","loading","showEditCustomerModal","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ada55c28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modals_ModalContainer__2fLw_\",\"Modal\":\"Modals_Modal__10u8J\",\"ModalTitle\":\"Modals_ModalTitle__3Hyrz\",\"ModalContent\":\"Modals_ModalContent__3WyKt\",\"ModalImage\":\"Modals_ModalImage__1WFqM\",\"ModalForm\":\"Modals_ModalForm__UKGm1\",\"Group\":\"Modals_Group__1HYDG\",\"Input\":\"Modals_Input__5uc30\",\"Label\":\"Modals_Label__VeMPf\",\"BeerLabel\":\"Modals_BeerLabel__32m32\",\"Select\":\"Modals_Select__RvQto\",\"ButtonContainer\":\"Modals_ButtonContainer__3zo7f\",\"EditButton\":\"Modals_EditButton__2khIt\",\"CancelButton\":\"Modals_CancelButton__2Gel2\"};","module.exports = __webpack_public_path__ + \"static/media/Test.c9ac2ac8.csv\";","import React from \"react\";\nimport classes from \"../css/Login.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Register = props => {\n  return (\n    <form onSubmit={(e) => props.onSubmit(e)}>\n      <div className={classes.LoginContainer}>\n        {props.message && props.error}\n        <div className={classes.Group}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"name\" className={classes.Label}>\n            Name\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"email\" className={classes.Label}>\n            Email\n          </label>\n        </div>\n        <div className={classes.Group}>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={props.onChange}\n            className={classes.Input}\n            required\n          />\n          <span className={classes.Bar}></span>\n          <label htmlFor=\"password\" className={classes.Label}>\n            Password\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          name=\"register\"\n          className={`${classes.Button} ${classes.bounce}`}\n        >\n          Register\n        </button>\n        <div onClick={() => props.toggleReg()} className={classes.Back}>\n          <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Register;\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./action-types\";\n\n// Return errors\nexport const returnErrors = (message, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { message, status, id }\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const FETCH_BEERS_BEGIN = \"FETCH_BEERS_BEGIN\";\nexport const FETCH_BEERS_SUCCESS = \"FETCH_BEERS_SUCCESS\";\nexport const FETCH_BEERS_FAILURE = \"FETCH_BEERS_FAILURE\";\n\nexport const CREATE_BEER = \"CREATE_BEER\";\nexport const DELETE_BEER = \"DELETE_BEER\";\n\nexport const FETCH_CUSTOMERS_BEGIN = \"FETCH_CUSTOMERS_BEGIN\";\nexport const FETCH_CUSTOMERS_SUCCESS = \"FETCH_CUSTOMERS_SUCCESS\";\nexport const FETCH_CUSTOMERS_FAILURE = \"FETCH_CUSTOMERS_FAILURE\";\n\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\";\nexport const DELETE_CUSTOMER = \"DELETE_CUSTOMER\";\n\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\nexport const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_NAV = \"OPEN_NAV\";\nexport const CLOSE_NAV = \"CLOSE_NAV\";\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\n//Action types\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./action-types\";\n\n//Check for token and then load the user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\"https://bearmugclub.herokuapp.com/api/auth/user\", tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    //If token is invalid\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n//Register user\nexport const register = ({ name, email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  //Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    //For an error with registration\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n//Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n//Login User\nexport const login = ({ email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  //Request body\n  const body = JSON.stringify({ email, password });\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/api/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    //For an error with the login\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Setup config, headers, and token\nexport const tokenConfig = getState => {\n  //Get token from local storage\n  const token = getState().auth.token;\n\n  //Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  //If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Login.module.css\";\nimport Register from \"./Register\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { login, register } from \"../actions/authActions\";\nconst actions = { login, register, clearErrors };\n\nclass Login extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    message: null,\n    toggleLogin: false,\n    toggleReg: false\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ message: error.message.message });\n      } else {\n        this.setState({ message: null });\n      }\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  //-- Submit for Login and Register\n  onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password\n    };\n    //Attempt to log in\n    this.props.login(user);\n  };\n\n  onSubmitReg = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const newUser = {\n      name,\n      email,\n      password\n    };\n    //Attempt to register\n    this.props.register(newUser);\n  };\n\n  //-- Toggles for Login and Register\n  toggleLogin = () => {\n    this.props.clearErrors();\n    this.setState({\n      toggleLogin: !this.state.toggleLogin\n    });\n  };\n  toggleReg = () => {\n    this.props.clearErrors();\n    this.setState({\n      toggleReg: !this.state.toggleReg\n    });\n  };\n\n  render() {\n    let buttons;\n    if (!this.state.toggleLogin && !this.state.toggleReg) {\n      buttons = (\n        <div className={classes.ButtonContainer}>\n          <button\n            name=\"login\"\n            onClick={() => this.toggleLogin()}\n            className={classes.Button}\n          >\n            Login\n          </button>\n          <button\n            name=\"register\"\n            onClick={() => this.toggleReg()}\n            className={classes.Button}\n          >\n            Register\n          </button>\n        </div>\n      );\n    }\n\n    let error = (\n      <div>\n        <h3 className={classes.Error}>{this.state.message}</h3>\n      </div>\n    );\n\n    return (\n      <div>\n        {this.props.isAuthenticated ? <Redirect to=\"/searchCustomers\" /> : null}\n        {!this.props.isAuthenticated && (\n          <section className={classes.Container}>\n            <h1 className={classes.Title}>Mug Club 🍻</h1>\n            {buttons}\n            {this.state.toggleLogin && (\n              <form onSubmit={this.onSubmit}>\n                <div className={classes.LoginContainer}>\n                  {this.state.message && error}\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"email\"\n                      className={classes.Input}\n                      onChange={this.onChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"email\" className={classes.Label}>\n                      Email\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      className={classes.Input}\n                      onChange={this.onChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"password\" className={classes.Label}>\n                      Password\n                    </label>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    name=\"login\"\n                    className={`${classes.Button} ${classes.bounce}`}\n                  >\n                    Login\n                  </button>\n                  <div\n                    onClick={() => this.toggleLogin()}\n                    className={classes.Back}\n                  >\n                    <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n                  </div>\n                </div>\n              </form>\n            )}\n            {this.state.toggleReg && (\n              <Register \n                onSubmit={this.onSubmitReg}\n                toggleReg={this.toggleReg}\n                message={this.state.message}\n                onChange={this.onChange}\n                error={this.state.error} />\n            )}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, actions)(\n  Login\n);\n","import React from \"react\";\nimport classes from \"../css/Home.module.css\";\nimport Login from \"./Login\";\n\nconst home = props => {\n  return (\n    <>\n      <div className={classes.BgImage}></div>\n      <div className={classes.Container}>\n        <Login />\n      </div>\n    </>\n  );\n};\n\nexport default home;\n","import React from \"react\";\nimport Home from \"../components/Home\";\n\nconst HomePage = (props) => {\n  return <Home />;\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst DeleteIcon = (props) => {\n  return (\n    <button className={classes.DeleteButton} onClick={props.delete}>\n      <FontAwesomeIcon icon={faTrashAlt} />\n    </button>\n  );\n};\n\nexport default DeleteIcon;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"../css/Icons.module.css\";\n\nconst EditIcon = (props) => {\n  return (\n    <button className={classes.EditButton} onClick={props.edit}>\n      <FontAwesomeIcon icon={faPencilAlt} />\n    </button>\n  );\n};\n\nexport default EditIcon;\n","import React from \"react\";\nimport classes from \"../css/Customer.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport EditIcon from \"./EditIcon\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\n\nconst Customer = (props) => {\n  return (\n    <div className={classes.CustomerCard}>\n      <div\n        className={\n          props.completed\n            ? `${classes.TitleContainer} ${classes.Completed}`\n            : classes.TitleContainer\n        }\n      >\n        <h1 className={classes.CustomerTitle}>\n          {props.name.first} {props.name.last}\n          {props.completed ? (\n            <div className={classes.CheckIcon}>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </div>\n          ) : null}\n        </h1>\n        <h2 className={classes.CustomerDetails}>Mug Club #{props.clubId}</h2>\n      </div>\n      <span className={classes.Span}>\n        <h2 className={classes.CustomerDetails}>\n          Beers Completed: {props.calculateCompletedBeers(props.beers)} /{\" \"}\n          {props.beers.length}\n        </h2>\n      </span>\n      <span className={classes.ButtonContainer}>\n        <EditIcon edit={props.openModal} />\n        <DeleteIcon delete={props.deleteCustomer} />\n      </span>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  modalOpen: state.modal.modalOpen,\n});\n\nexport default connect(mapStateToProps)(Customer);\n","import { OPEN_MODAL, CLOSE_MODAL } from \"./action-types\";\n\nexport const openModal = (modalType, data={}) => ({\n  type: OPEN_MODAL,\n  payload: {modalType, data}\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL\n});\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const fetchCustomers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchCustomersBegin());\n    return fetch(\"https://bearmugclub.herokuapp.com/api/customers\", tokenConfig(getState))\n      .then(res => res.json())\n      .then(customers => {\n        dispatch(fetchCustomersSuccess(customers));\n        return customers;\n      })\n      .catch(error => dispatch(fetchCustomersFailure(error)));\n  };\n};\n\nexport const fetchCustomersBegin = () => ({\n  type: FETCH_CUSTOMERS_BEGIN\n});\n\nexport const fetchCustomersSuccess = customers => ({\n  type: FETCH_CUSTOMERS_SUCCESS,\n  payload: customers\n});\n\nexport const fetchCustomersFailure = error => ({\n  type: FETCH_CUSTOMERS_FAILURE,\n  payload: { error }\n});\n\nexport const createCustomer = newCustomer => (dispatch, getState) => {\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/api/customers\", newCustomer, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: CREATE_CUSTOMER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateCustomer = (customer, id) => (dispatch, getState) => {\n  const customerURL = \"https://bearmugclub.herokuapp.com/api/customers/\" + id;\n  axios\n    .put(customerURL, customer)\n    .then(dispatch(fetchCustomers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteCustomer = id => (dispatch, getState) => {\n  axios\n    .delete(\"https://bearmugclub.herokuapp.com/api/customers/\" + id, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_CUSTOMER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Search.module.css\";\nimport Customer from \"./Customer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { openModal } from \"../actions/modalActions\";\nimport { deleteCustomer } from \"../actions/customerActions\";\nconst actions = { openModal, deleteCustomer };\n\nconst uniqid = require(\"uniqid\");\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n  };\n\n  static propTypes = {\n    customers: PropTypes.array.isRequired,\n  };\n\n  updateSearch = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  deleteCustomer = (customer) => {\n    swal({\n      title: `Delete ${customer.name.first}?`,\n      text: `Do you really want to delete this customer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal(\n          `Boom! ${customer.name.first} ${customer.name.last} has been deleted!`,\n          {\n            icon: \"success\",\n          }\n        );\n        this.props.deleteCustomer(customer._id);\n      } else {\n        swal(`Phew! ${customer.name.first} is safe!`);\n      }\n    });\n  };\n\n  calculateCompletedBeers = (arr) => {\n    if (arr) {\n      let count = 0;\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].finished === true) {\n          count++;\n        }\n      }\n      return count;\n    }\n  };\n\n  render() {\n    let { search } = this.state;\n    let filteredCustomers;\n    if (this.props.customers && search) {\n      filteredCustomers = this.props.customers.filter((customer) => {\n        // Number Search\n        let id = customer.mugClub.clubId.toString();\n        let number = search === id ? customer : null;\n\n        // Name Search\n        let strings =\n          customer.name.first.toLowerCase().includes(search.toLowerCase()) ||\n          customer.name.last.toLowerCase().includes(search.toLowerCase());\n\n        if (strings) {\n          return strings;\n        }\n        if (number) {\n          return number;\n        }\n      });\n    }\n\n    const mappedCustomers = filteredCustomers\n      ? filteredCustomers.slice(0,20).map((customer, index) => {\n          return (\n            <Customer\n              key={uniqid()}\n              name={customer.name}\n              email={customer.email}\n              username={customer.username}\n              clubId={customer.mugClub.clubId}\n              beers={customer.mugClub.beers}\n              completed={customer.mugClub.completed}\n              openModal={() => this.props.openModal(\"EDIT_CUSTOMER\", customer)}\n              openBeerModal={() =>\n                this.props.toggleCustomerBeersModal(customer)\n              }\n              calculateCompletedBeers={this.calculateCompletedBeers}\n              deleteCustomer={() => this.deleteCustomer(customer)}\n            />\n          );\n        })\n      : null;\n    return (\n      <>\n        <div className={classes.Background}>\n          <div className={classes.InputContainer}>\n            <h1 className={classes.SearchTitle}>\n              Search Customers\n              <div\n                className={classes.AddIcon}\n                onClick={() => this.props.openModal(\"NEW_CUSTOMER\")}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </h1>\n            <div className={classes.Group}>\n              <input\n                type=\"text\"\n                name=\"search\"\n                className={classes.Input}\n                defaultValue={this.state.search}\n                onChange={this.updateSearch}\n                required\n              />\n              <label htmlFor=\"search\" className={classes.Label}>\n                Please Enter Name or Mug Club ID\n              </label>\n            </div>\n\n            <div className={classes.CustomerContainer}>\n              \n              {search && (\n                <>\n                  <h3>Results:</h3>\n                  {mappedCustomers}\n                  <h4>Max 20 Results</h4>\n                </>\n                  \n                )\n              }\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(Search);\n","import React from \"react\";\nimport Search from \"../components/Search\";\n\nconst SearchPage = (props) => {\n  return <Search />;\n};\n\nexport default SearchPage;\n","import React from \"react\";\nimport classes from \"../css/BeerDisplay.module.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nconst BeerDisplay = (props) => {\n  const beerList = props.beers\n    ? props.beers.map((beer) => {\n        return (\n          <ListItem\n            key={uniqid()}\n            dense\n            button\n            className={classes.ListItem}\n            onClick={() => props.openModal(\"EDIT_BEER\", beer)}\n          >\n            <ListItemAvatar>\n              <Avatar className={classes.Avatar} alt={`${beer.brewery}`} src={beer.url} />\n            </ListItemAvatar>\n            <div className={classes.Group}>\n              <h3>{beer.brewery}</h3>\n              <h2>{beer.name}</h2>\n            </div>\n          </ListItem>\n        );\n      })\n    : null;\n\n  return (\n    <section className={classes.DisplayContainer}>\n      <h1 className={classes.BeersTitle}>\n        Beers List\n        <div\n          className={classes.AddIcon}\n          onClick={() => props.openModal(\"NEW_BEER\")}\n        >\n          <FontAwesomeIcon icon={faPlus} />\n        </div>\n      </h1>\n      <List dense className={classes.ListContainer}>\n        {beerList}\n      </List>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  beers: state.beers.beers,\n});\n\nexport default connect(mapStateToProps, actions)(BeerDisplay);\n","import React from \"react\";\nimport BeerDisplay from \"../components/BeerDisplay\";\n\nconst BeerPage = (props) => {\n  return <BeerDisplay />;\n};\n\nexport default BeerPage;\n","import { OPEN_NAV, CLOSE_NAV } from \"./action-types\";\n\nexport const openNav = () => ({\n  type: OPEN_NAV\n});\n\nexport const closeNav = () => ({\n  type: CLOSE_NAV\n});","import React from \"react\";\nimport classes from \"../css/Backdrop.module.css\";\n\n// Redux imports\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { closeNav } from \"../actions/navActions\";\nconst actions = { closeModal, closeNav };\n\nconst Backdrop = (props) => {\n  return (\n    <>\n      {props.modalOpen && (\n        <div\n          className={classes.ModalBackdrop}\n          onClick={() => props.closeModal()}\n        ></div>\n      )}\n      {props.navOpen && (\n        <div \n          className={classes.NavBackdrop} \n          onClick={() => props.closeNav()}></div>\n      )} \n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  modalOpen: state.modal.modalOpen,\n  navOpen: state.modal.navOpen\n});\n\nexport default connect(mapStateToProps, actions)(Backdrop);\n","import React, { Component } from \"react\";\nimport classes from \"../css/NavBar.module.css\";\nimport Backdrop from \"./Backdrop\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faSearch,\n  faBeer,\n  faUserTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Burger from \"@animated-burgers/burger-squeeze\";\nimport \"@animated-burgers/burger-squeeze/dist/styles.css\";\n\n// Redux Imports\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../actions/modalActions\";\nimport { openNav, closeNav } from \"../actions/navActions\";\nimport { logout } from \"../actions/authActions\";\nconst actions = { \n  logout, \n  openModal, \n  openNav, \n  closeNav \n};\n\nclass NavBar extends Component {\n  state = {};\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    navOpen: PropTypes.bool\n  };\n\n  logout = () => {\n    this.props.logout();\n  };\n\n  comboToggle = async (modalType) => {\n    await this.props.closeNav();\n    await this.props.openModal(modalType);\n  };\n\n  render() {\n    const urlName = \"\";\n    // const { isAuthenticated } = this.props.auth;\n    // if (!isAuthenticated) {\n    //   return <Redirect to=\"/\" push={true} />;\n    // }\n\n    let hamburgerMenu = (\n      <ul className={classes.HamburgerList}>\n        <Link\n          to={`${urlName}/search-customers`}\n          className={classes.HamburgerItem}\n          onClick={() => this.props.closeNav()}\n        >\n          <div className={classes.LinkDiv}>\n            <div>\n              <FontAwesomeIcon icon={faSearch} />\n            </div>\n            <h2>Search</h2>\n          </div>\n        </Link>\n        <Link\n          to={`${urlName}/beers-list`}\n          className={classes.HamburgerItem}\n          onClick={() => this.props.closeNav()}\n        >\n          <div className={classes.LinkDiv}>\n            <div>\n              <FontAwesomeIcon icon={faBeer} />\n            </div>\n            <h2>Beers</h2>\n          </div>\n        </Link>\n        <button\n          onClick={() => this.comboToggle(\"NEW_CUSTOMER\")}\n          className={classes.HamburgerItem}\n        >\n          <div className={classes.LinkDiv}>\n            <div>\n              <FontAwesomeIcon icon={faPlus} />\n            </div>\n            <h2>New Customer</h2>\n          </div>\n        </button>\n        <button\n          onClick={() => this.comboToggle(\"NEW_BEER\")}\n          className={classes.HamburgerItem}\n        >\n          <div className={classes.LinkDiv}>\n            <div>\n              <FontAwesomeIcon icon={faPlus} />\n            </div>\n            <h2>New Beer</h2>\n          </div>\n        </button>\n        <button \n          onClick={() => this.logout()} \n          className={classes.HamburgerItem}>\n          <div className={classes.LinkDiv}>\n            <div>\n              <FontAwesomeIcon icon={faUserTimes} />\n            </div>\n            <h2>Log Out</h2>\n          </div>\n        </button>\n      </ul>\n    );\n\n    let authLinks = (\n      <nav className={classes.Navbar}>\n        <h1>MUG CLUB 🍻</h1>\n        {this.props.navOpen ? (\n          hamburgerMenu\n        ) : (\n          <ul className={classes.List}>\n            <li className={classes.Item}>\n              <Link to={`${urlName}/search-customers`} className={classes.Link}>\n                Search\n              </Link>\n            </li>\n            <li className={classes.Item}>\n              <Link to={`${urlName}/beers-list`} className={classes.Link}>\n                Beers List\n              </Link>\n            </li>\n            <li className={classes.Item}>\n              <button\n                onClick={() => this.props.openModal(\"NEW_CUSTOMER\")}\n                className={classes.NewButton}\n              >\n                New Customer\n              </button>\n            </li>\n            <li className={classes.Item}>\n              <button\n                onClick={() => this.props.openModal(\"NEW_BEER\")}\n                className={classes.NewButton}\n              >\n                New Beer\n              </button>\n            </li>\n            <li className={classes.Item}>\n              <button onClick={this.logout} className={classes.Logout}>\n                Log Out\n              </button>\n            </li>\n          </ul>\n        )}\n        <div className={classes.HamburgerContainer}>\n          <Burger\n            isOpen={this.props.navOpen}\n            onClick={\n              this.props.navOpen \n              ? () => this.props.closeNav()\n              : () => this.props.openNav()\n            }\n          />\n        </div>\n      </nav>\n    );\n\n    // return <>{this.props.isAuthenticated && authLinks}</>;\n    return (\n      <>\n        <Backdrop />\n        {authLinks}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n  navOpen: state.modal.navOpen\n});\n\nexport default connect(mapStateToProps, actions)(NavBar);\n","import React from 'react';\nimport HomePage from \"../pages/homePage\";\nimport SearchPage from \"../pages/searchPage\";\nimport BeersPage from \"../pages/beersPage\";\nimport NavBar from \"../components/NavBar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Routing = props => {\n  const urlName = \"\"\n  return (\n    <>\n    <Router>\n      <div>\n      <NavBar />\n        <Switch>\n          <Route exact path={`${urlName}/`}>\n            <HomePage />\n          </Route>\n          <Route path={`${urlName}/search-customers`}>\n            <SearchPage />\n          </Route>\n          <Route path={`${urlName}/beers-list`}>\n            <BeersPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </>\n  )\n}\n\nexport default Routing;","import React from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport styles from \"../css/BeersList.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nconst actions = { openModal, closeModal };\nconst uniqid = require(\"uniqid\");\n\nfunction BeerList(props) {\n  const [checked, setChecked] = React.useState([-1]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const checkForIcon = (beer) => {\n    if (checked.indexOf(beer) !== -1 && !beer.finished) {\n      return (\n        <span className={styles.CheckIcon}>\n          <FontAwesomeIcon icon={faCheckCircle} />\n        </span>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const mappedBeers = props.beers.map((beer) => {\n    return (\n      <li\n        key={uniqid()}\n        onClick={handleToggle(beer)}\n        className={\n          beer.finished ? `${styles.Item} ${styles.Completed}` : styles.Item\n        }\n      >\n        <img\n          className={styles.Avatar}\n          alt={`${beer.brewery}`}\n          src={`${beer.url}`}\n        />\n        <div className={styles.NameContainer}>\n          <h1>{`${beer.brewery}`}</h1>\n          <h2>{`${beer.name}`}</h2>\n        </div>\n        <div>\n          {checkForIcon(beer)}\n          {beer.finished && (\n            <span className={styles.CheckIcon}>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </span>\n          )}\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <ul className={styles.ListContainer}>{mappedBeers}</ul>\n      <div className={classes.ButtonContainer}>\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          onClick={(e) => props.handleSubmit(e, checked)}\n          className={classes.EditButton}\n        />\n        <input\n          type=\"submit\"\n          value=\"Cancel\"\n          onClick={() => props.closeModal()}\n          className={classes.CancelButton}\n        />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(BeerList);\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\nimport BeersList from \"./BeersList\";\n\n//Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { updateCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = {\n  closeModal,\n  updateCustomer,\n  fetchCustomers\n};\n\nclass EditCustomer extends Component {\n  state = {\n    first: this.props.first,\n    last: this.props.last,\n    clubId: this.props.clubId,\n    customerId: this.props.customerId,\n    completed: this.props.completed,\n    customerBeers: this.props.customerBeers\n  };\n\n  static propTypes = {\n    first: PropTypes.string,\n    last: PropTypes.string,\n    clubId: PropTypes.number,\n    completed: PropTypes.bool,\n    customerBeers: PropTypes.array,\n    customerId: PropTypes.string\n  };\n\n  updateCompletedBeers = checkedArr => {\n    let updatedArr = this.state.customerBeers;\n    for (let k = 0; k < updatedArr.length; k++) {\n      for (let h = 1; h < checkedArr.length; h++) {\n        if (updatedArr[k]._id === checkedArr[h]._id) {\n          updatedArr[k].finished = true;\n        }\n      }\n    }\n    this.setState({\n      customerBeers: updatedArr\n    });\n  };\n\n  checkCompletion = beers => {\n    let value = true;\n    for (let i = 0; i < beers.length; i++) {\n      if (beers[i].finished === false) {\n        return (value = false);\n      }\n    }\n    if (value === true) {\n      this.setState({\n        completed: true\n      })\n    }\n  };\n\n  handleInputChange = e => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e, checkedArr) => {\n    e.preventDefault();\n    await this.updateCompletedBeers(checkedArr);\n    await this.checkCompletion(this.state.customerBeers);\n    const updatedCustomer = await {\n      name: {\n        first: this.state.first,\n        last: this.state.last\n      },\n      mugClub: {\n        clubId: this.state.clubId,\n        completed: this.state.completed,\n        beers: this.state.customerBeers\n      }\n    };\n    try {\n      await this.props.updateCustomer(updatedCustomer, this.props.customerId);\n      await this.props.fetchCustomers();\n      swal({\n        title: `You've updated ${this.state.first} ${this.state.last}!`,\n        icon: \"success\",\n        button: \"Ok!\"\n      });\n      this.props.closeModal();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\"\n      });\n    }\n  };\n\n  render() {\n    if (!this.props) {\n      return null;\n    }\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>Edit Customer</h2>\n              <div className={classes.ModalContent}>\n              <form\n                className={classes.Form}\n                onSubmit={e => this.props.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"first\"\n                    className={classes.Input}\n                    defaultValue={this.props.first}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"first\" className={classes.Label}>\n                    First Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"last\"\n                    className={classes.Input}\n                    defaultValue={this.props.last}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"last\" className={classes.Label}>\n                    Last Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"clubId\"\n                    className={classes.Input}\n                    defaultValue={this.props.clubId}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"clubId\" className={classes.Label}>\n                    Mug Club ID\n                  </label>\n                </div>\n                <div>\n                  <label htmlFor=\"beerList\" className={classes.BeerLabel}>\n                    Select Beer to Mark as Complete:\n                  </label>\n                  <BeersList\n                    beers={this.props.customerBeers}\n                    updateCompletedBeers={this.updateCompletedBeers}\n                    handleSubmit={this.handleSubmit}\n                    toggleModal={() => this.props.closeModal()}\n                  />\n                </div>\n              </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  first: state.modal.info.name.first,\n  last: state.modal.info.name.last,\n  clubId: state.modal.info.mugClub.clubId,\n  completed: state.modal.info.mugClub.completed,\n  customerBeers: state.modal.info.mugClub.beers,\n  customerId: state.modal.info._id\n});\n\nexport default connect(mapStateToProps, actions)(EditCustomer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { closeModal } from \"../actions/modalActions\";\nimport { createCustomer, fetchCustomers } from \"../actions/customerActions\";\nconst actions = { closeModal, createCustomer, fetchCustomers };\n\nclass NewCustomer extends Component {\n  state = {};\n\n  static propTypes = {\n    customers: PropTypes.array,\n  };\n\n  customerIdCheck = (customers) => {\n    const enteredValue = this.state.clubId;\n    for (let i = 0; i < customers.length; i++) {\n      let id = customers[i].mugClub.clubId.toString();\n      if (id === enteredValue) {\n        return true;\n      }\n    }\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if the submitted Mug Club Id is currently in the database\n    let value = this.customerIdCheck(this.props.customers);\n    if (value) {\n      swal({\n        title: `Mug Club Number ${this.state.clubId} is already taken.`,\n        text: \"Please enter a new number.\",\n        icon: \"info\",\n        button: \"Ok\",\n      });\n    } else {\n      const newCustomer = {\n        name: {\n          first: this.state.first,\n          last: this.state.last,\n        },\n        mugClub: {\n          clubId: this.state.clubId,\n        },\n      };\n      try {\n        console.log(\"Saing customer...\");\n        await this.props.createCustomer(newCustomer);\n        console.log(\"Refetching customers...\")\n        await this.props.fetchCustomers();\n        swal({\n          title: `${this.state.first} has been created!`,\n          icon: \"success\",\n          button: \"Ok!\",\n        });\n        console.log(`${this.state.first} ${this.state.last} was saved!`);\n        this.props.closeModal();\n      } catch (e) {\n        console.log(e);\n        swal({\n          title: `Oops! Something went wrong :(`,\n          icon: \"info\",\n          button: \"Crap!\",\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <section className={classes.ModalContainer}>\n          <Grow in={true}>\n            <div className={classes.Modal}>\n              <h2 className={classes.ModalTitle}>New Customer</h2>\n              <div className={classes.ModalContent}>\n                <form\n                  className={classes.ModalForm}\n                  onSubmit={(e) => this.handleSubmit(e)}\n                >\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"first\"\n                      className={classes.Input}\n                      defaultValue={this.state.first}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"first\" className={classes.Label}>\n                      First Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"last\"\n                      className={classes.Input}\n                      defaultValue={this.state.last}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"last\" className={classes.Label}>\n                      Last Name\n                    </label>\n                  </div>\n                  <div className={classes.Group}>\n                    <input\n                      type=\"text\"\n                      name=\"clubId\"\n                      className={classes.Input}\n                      defaultValue={this.state.clubId}\n                      onChange={this.handleInputChange}\n                      required\n                    />\n                    <span className={classes.Bar}></span>\n                    <label htmlFor=\"clubId\" className={classes.Label}>\n                      Mug Club ID\n                    </label>\n                  </div>\n                  <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                    formNoValidate\n                  />\n                </div>\n                </form>\n              </div>\n            </div>\n          </Grow>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(NewCustomer);\n","const beerTypes = {\n  PaleAles: [\n    \"American Amber Ale\",\n    \"American Pale Ale\",\n    \"Blonde Ale\",\n    \"English Bitter\",\n    \"English Pale Ale\"\n  ],\n  IndianPaleAles: [\"American IPA\", \"Imperial or Double IPA\", \"English IPA\"],\n  Lagers: [\n    \"American Lager\",\n    \"German Helles\",\n    \"German Pilsner\",\n    \"Czech Pilsner\"\n  ],\n  DarkLagers: [\n    \"Amber American Lager\",\n    \"Oktoberfest\",\n    \"German Schwarzbier\",\n    \"Vienna Lager\"\n  ],\n  GermanBocks: [\"Traditional Bock\", \"Doppelbock\", \"Weizenbock\", \"Maibock\"],\n  BrownAles: [\"American Brown Ale\", \"English Brown Ale\"],\n  Porters: [\n    \"American Imperial Porter\",\n    \"English Brown Porter\",\n    \"Robust Porter\"\n  ],\n  Stouts: [\n    \"American Stout\",\n    \"American Imperial Stout\",\n    \"Oatmeal Stout\",\n    \"Milk Stout\",\n    \"Irish Dry Stout\"\n  ],\n  BelgianStyle: [\n    \"Belgian Pale Ale\",\n    \"Belgian Dubbel\",\n    \"Belgian Tripel\",\n    \"Belgian Quadrupel\",\n    \"Belgian Strong Dark Ale\",\n    \"Belgian Saison\"\n  ],\n  Wheat: [\n    \"American Pale Wheat\",\n    \"Belgian Witbier\",\n    \"Berliner Weisse\",\n    \"Dunkelweizen\",\n    \"Hefeweizen\"\n  ],\n  Sour: [\n    \"American Sour\",\n    \"Belgian Fruit Lambic\",\n    \"Flanders Red Ale\",\n    \"Belgian Gueuze\"\n  ],\n  Specialty: [\n    \"American Black Ale\",\n    \"Barrel-Aged\",\n    \"Chocolate\",\n    \"Coffee\",\n    \"Fruit and Vegetable\",\n    \"Gluten-free\",\n    \"Herb and Spice\",\n    \"Honey\",\n    \"Pumpkin\",\n    \"Rye\",\n    \"Session\",\n    \"Smoked\",\n    \"Seasonal\",\n    \"Other\"\n  ]\n};\n\nexport default beerTypes;\n","import React from \"react\";\nimport beerTypes from \"./BeerTypes\";\nconst uniqid = require(\"uniqid\");\n\nexport const typeMap = Object.entries(beerTypes).map(([key, value]) => {\n  return (\n    <optgroup key={uniqid()} label={key.split(/(?=[A-Z])/).join(\" \")}>\n      {value.map(type => (\n        <option key={uniqid()} value={type}>\n          {type}\n        </option>\n      ))}\n    </optgroup>\n  );\n});\n\n//Iterate over object, return the optgroup with the key name, then map each key's array to display the options within that optgroup\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"./action-types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const fetchBeers = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchBeersBegin());\n    return fetch(\"https://bearmugclub.herokuapp.com/api/beers\")\n      .then(res => res.json())\n      .then(beers => {\n        dispatch(fetchBeersSuccess(beers));\n        return beers;\n      })\n      .catch(error => dispatch(fetchBeersFailure(error)));\n  };\n};\n\nexport const fetchBeersBegin = () => ({\n  type: FETCH_BEERS_BEGIN\n});\n\nexport const fetchBeersSuccess = beers => ({\n  type: FETCH_BEERS_SUCCESS,\n  payload: beers\n});\n\nexport const fetchBeersFailure = error => ({\n  type: FETCH_BEERS_FAILURE,\n  payload: { error }\n});\n\nexport const createBeer = newBeer => (dispatch, getState) => {\n  axios\n    .post(\"https://bearmugclub.herokuapp.com/api/beers\", newBeer)\n    .then(res =>\n      dispatch({\n        type: CREATE_BEER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteBeer = id => (dispatch, getState) => {\n  axios\n    .delete(\"https://bearmugclub.herokuapp.com/api/beers/\" + id)\n    .then(res =>\n      dispatch({\n        type: DELETE_BEER,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const updateBeer = (beer, id) => (dispatch, getState) => {\n  const beerURL = \"https://bearmugclub.herokuapp.com/api/beers/\" + id;\n  axios\n    .put(beerURL, beer)\n    .then(dispatch(fetchBeers()))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","import React, { Component } from \"react\";\nimport classes from \"../css/Modals.module.css\";\nimport DeleteIcon from \"./DeleteIcon\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport Grow from \"@material-ui/core/Grow\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { deleteBeer, updateBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  deleteBeer,\n  updateBeer,\n  fetchBeers,\n};\n\nclass EditBeer extends Component {\n  state = {\n    id: this.props.id,\n    name: this.props.name,\n    type: this.props.type,\n    brewery: this.props.brewery,\n    breweryLocation: this.props.breweryLocation,\n    url: this.props.url,\n  };\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const updatedBeer = {\n      name: this.state.name,\n      type: this.state.type,\n      brewery: this.state.brewery,\n      breweryLocation: this.state.breweryLocation,\n      url: this.state.url,\n    };\n    try {\n      const id = this.state.id;\n      await this.props.updateBeer(updatedBeer, id);\n      swal({\n        title: `You've updated the ${this.state.name} Beer`,\n        icon: \"success\",\n        button: \"Sweet!\",\n      });\n      this.props.closeModal();\n      this.props.fetchBeers();\n    } catch (e) {\n      console.log(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  deleteBeerAlert = () => {\n    swal({\n      title: `Delete ${this.props.name}?`,\n      text: `Do you really want to delete this beer?`,\n      buttons: true,\n      icon: \"warning\",\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        swal(`Hasta la Vista! ${this.props.name} has been deleted!`, {\n          icon: \"success\",\n        });\n        await this.props.deleteBeer(this.props.id);\n        await this.props.fetchBeers();\n        this.props.closeModal();\n      } else {\n        swal(`Today is your luck day, you sweet sweet miracle drink!`);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>Edit Beer</h2>\n            <div className={classes.ModalContent}>\n              {/* <img\n                className={classes.ModalImage}\n                src={this.props.url}\n                alt={this.props.name}\n              /> */}\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    defaultValue={this.props.name}\n                    onChange={(e) => this.handleInputChange(e)}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  \n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={this.props.type}\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option defaultValue={this.props.type}>\n                        {this.props.type}\n                      </option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    defaultValue={this.props.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    defaultValue={this.props.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"url\"\n                    className={classes.Input}\n                    defaultValue={this.props.url}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"url\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                  />\n                </div>\n                \n              </form>\n              <DeleteIcon delete={() => this.deleteBeerAlert()} />\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  id: state.modal.info._id,\n  name: state.modal.info.name,\n  type: state.modal.info.type,\n  brewery: state.modal.info.brewery,\n  breweryLocation: state.modal.info.breweryLocation,\n  url: state.modal.info.url,\n});\n\nexport default connect(mapStateToProps, actions)(EditBeer);\n","import React, { Component } from \"react\";\nimport Grow from \"@material-ui/core/Grow\";\nimport classes from \"../css/Modals.module.css\";\nimport { typeMap } from \"../lib/TypeMap\";\nimport swal from \"@sweetalert/with-react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { openModal, closeModal } from \"../actions/modalActions\";\nimport { createBeer, fetchBeers } from \"../actions/beerActions\";\nconst actions = {\n  openModal,\n  closeModal,\n  createBeer,\n  fetchBeers,\n};\n\nclass NewBeerModal extends Component {\n  state = {\n    name: \"\",\n    type: \"\",\n    brewery: \"\",\n    breweryLocation: \"\",\n    url: \"\",\n  };\n\n  static propTypes = {};\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newBeer = {\n        name: this.state.name,\n        type: this.state.type,\n        brewery: this.state.brewery,\n        breweryLocation: this.state.breweryLocation,\n        url: this.state.beerUrl,\n        finished: false,\n      };\n      await this.props.createBeer(newBeer);\n      swal({\n        title: `${this.state.name} has been created!`,\n        icon: \"success\",\n        button: \"Cool!\",\n      });\n      console.log(\"Fetching beers...\")\n      await this.props.fetchBeers();\n      this.props.closeModal();\n    } catch (e) {\n      console.error(e);\n      swal({\n        title: `Oops! Something went wrong :(`,\n        icon: \"fail\",\n        button: \"Crap!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <section className={classes.ModalContainer}>\n        <Grow in={true}>\n          <div className={classes.Modal}>\n            <h2 className={classes.ModalTitle}>New Beer</h2>\n            <div className={classes.ModalContent}>\n              <form\n                className={classes.ModalForm}\n                onSubmit={(e) => this.props.handleSubmit(e)}\n              >\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={classes.Input}\n                    value={this.state.name}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"name\" className={classes.Label}>\n                    Beer Name\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <select\n                    name=\"type\"\n                    className={classes.Select}\n                    onChange={this.handleInputChange}\n                    defaultValue={null}\n                    value={this.state.type}\n                    placeholder=\"Beer Type\"\n                    required\n                  >\n                    <optgroup label=\"Current Beer Type\">\n                      <option value={this.state.type}>{this.state.type}</option>\n                    </optgroup>\n                    {typeMap}\n                  </select>\n                  <label htmlFor=\"type\" className={classes.Label}>\n                    Type\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"brewery\"\n                    className={classes.Input}\n                    value={this.state.brewery}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"brewery\" className={classes.Label}>\n                    Brewery\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"breweryLocation\"\n                    className={classes.Input}\n                    value={this.state.breweryLocation}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"breweryLocation\" className={classes.Label}>\n                    Brewery Location\n                  </label>\n                </div>\n                <div className={classes.Group}>\n                  <input\n                    type=\"text\"\n                    name=\"beerUrl\"\n                    className={classes.Input}\n                    value={this.state.beerUrl}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                  <span className={classes.Bar}></span>\n                  <label htmlFor=\"beerUrl\" className={classes.Label}>\n                    Beer/Brewery Image URL\n                  </label>\n                </div>\n                <div className={classes.ButtonContainer}>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={(e) => this.handleSubmit(e)}\n                    className={classes.EditButton}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Cancel\"\n                    onClick={() => this.props.closeModal()}\n                    className={classes.CancelButton}\n                    formNoValidate\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </Grow>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(NewBeerModal);\n","import React, { Component } from \"react\";\nimport EditCustomer from \"./EditCustomer\";\nimport NewCustomer from \"./NewCustomer\";\nimport EditBeer from \"./EditBeer\";\nimport NewBeer from \"./NewBeer\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass RenderModal extends Component {\n  static propTypes = {\n    modalType: PropTypes.string\n  };\n\n  render() {\n    let renderedModal = this.props.modalType;\n    switch (renderedModal) {\n      case \"EDIT_CUSTOMER\":\n        return <EditCustomer />;\n      case \"NEW_CUSTOMER\":\n        return <NewCustomer />;\n      case \"EDIT_BEER\":\n        return <EditBeer />;\n      case \"NEW_BEER\":\n        return <NewBeer />;\n      case \"BEER_LIST\":\n        console.log(\"Beer List\");\n        return <></>;\n      default:\n        return <></>;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalType: state.modal.modalType\n});\n\nexport default connect(mapStateToProps)(RenderModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBeers } from \"../actions/beerActions\";\nimport { fetchCustomers, createCustomer } from \"../actions/customerActions\";\nimport { readString } from \"react-papaparse\";\n\n\nconst actions = { fetchBeers, fetchCustomers, createCustomer };\nconst csvFile = require(\"./Test.csv\");\n\nclass LoadExistingDatabase extends Component {\n  state = {\n    existingCustomers: \"\",\n  };\n\n  runConversionAlogrithm = async () => {\n    const list = this.props.beers;\n    let existingCustomersArray = [];\n\n    const results = readString(csvFile, {\n      delimiter: \",\",\n      download: true,\n      complete: function (results) {\n        let headers = results.data[0];\n        let i = 1;\n        while (i < results.data.length) {\n          let customer = results.data[i];\n          let temp = {\n            name: {\n              first: customer[1],\n              last: customer[2],\n            },\n            mugClub: {\n              completed: null,\n              clubId: parseInt(customer[0]),\n              beers: populateBeersList(headers, customer),\n            },\n            beersCompleted: parseInt(customer[3]),\n          };\n\n          if (customer[3] >= list.length) {\n            temp.mugClub.completed = true;\n          } else {\n            temp.mugClub.completed = false;\n          }\n          existingCustomersArray.push(temp);\n          i++;\n        }\n      },\n    });\n\n    const populateBeersList = async (headers, customer) => {\n      let beerList = [...this.props.beers];\n      let map = await this.mapBeers(headers, customer);\n\n      let temp = [];\n      for (let [key, value] of Object.entries(map)) {\n        for (let beer in beerList) {\n          if (beerList[beer].name === key && value.finished === true) {\n            const merged = { ...beerList[beer], ...value };\n            temp.push(merged);\n          } else if (beerList[beer].name === key) {\n            temp.push(beerList[beer]);\n          }\n        }\n      }\n      return temp;\n    };\n\n    this.setState({\n      existingCustomers: existingCustomersArray,\n    });\n    console.table(this.state.existingCustomers);\n  }\n\n  mapBeers = (headers, customer) => {\n    let map = {};\n    for (let i = 5; i < customer.length; i++) {\n      const beer = headers[i];\n      if (customer[i] === \"1\") {\n        map[beer] = {\n          finished: true,\n        };\n      } else {\n        map[beer] = {\n          finished: false,\n        };\n      }\n    }\n    return map;\n  }\n\n  \n  saveCustomersToDatabase = (customersArray) => {\n    for (let customer of customersArray) {\n      const newCustomer = {\n        name: {\n          first: customer.name.first,\n          last: customer.name.last,\n        },\n        mugClub: {\n          completed: customer.mugClub.completed,\n          clubId: customer.mugClub.clubId,\n          beers: customer.mugClub.beers,\n        },\n      };\n      this.props.createCustomer(newCustomer);\n      console.log(newCustomer);\n      \n      // console.log(\"Customer created\");\n    }\n  };\n\n  render() {\n    const { customers } = this.state;\n    return (\n      <div>\n        <button\n          onClick={() =>\n            this.runConversionAlogrithm()\n          }>\n          Run Alogrithm\n        </button>\n        <button\n          onClick={() =>\n            this.saveCustomersToDatabase(this.state.existingCustomers)\n          }>\n          Save Customers\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  beers: state.beers.beers,\n  customers: state.customers.customers,\n});\n\nexport default connect(mapStateToProps, actions)(LoadExistingDatabase);\n","import React, { Component } from \"react\";\nimport Routing from \"../components/Routing\";\nimport Backdrop from \"../components/Backdrop\";\nimport RenderModal from \"../components/RenderModal\";\nimport LoadExistingCustomers from \"../containers/LoadExistingDatabase\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { fetchBeers } from \"../actions/beerActions\";\nimport { fetchCustomers } from \"../actions/customerActions\";\nconst actions = { fetchBeers, fetchCustomers };\n\nclass Container extends Component {\n  \n  async componentDidMount() {\n    await this.loadData();\n  }\n\n  loadData = async () => {\n    try {\n      await this.props.fetchBeers();\n      await this.props.fetchCustomers();\n    } catch (error) {\n      throw new Error(\n        \"Cannot connect to database. Server may be busy or unavailable.\"\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Routing />\n        {/* Only run in Production <LoadExistingCustomers /> */}\n        <Backdrop></Backdrop>\n        <RenderModal />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, actions)(Container);\n","import {\n  FETCH_BEERS_BEGIN,\n  FETCH_BEERS_SUCCESS,\n  FETCH_BEERS_FAILURE,\n  CREATE_BEER,\n  DELETE_BEER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  beers: []\n};\n\nexport default function beerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_BEERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_BEERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        beers: action.payload\n      };\n    case FETCH_BEERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        beers: []\n      };\n    case CREATE_BEER:\n      return {\n        ...state,\n        beers: [...state.beers, action.payload]\n      };\n    case DELETE_BEER:\n      return {\n        ...state,\n        beers: state.beers.filter(beer => beer._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_CUSTOMERS_BEGIN,\n  FETCH_CUSTOMERS_SUCCESS,\n  FETCH_CUSTOMERS_FAILURE,\n  CREATE_CUSTOMER,\n  DELETE_CUSTOMER\n} from \"../actions/action-types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  showEditCustomerModal: false,\n  customers: []\n};\n\nexport default function customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CUSTOMERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_CUSTOMERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        customers: action.payload\n      };\n    case FETCH_CUSTOMERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        customers: []\n      };\n    case CREATE_CUSTOMER:\n      return {\n        ...state,\n        customers: [action.payload, ...state.customers]\n      };\n    case DELETE_CUSTOMER:\n      return {\n        ...state,\n        customers: state.customers.filter(\n          customer => customer._id !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/action-types\";\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/action-types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      //Makes sure everything is reset if there is an error\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  OPEN_NAV,\n  CLOSE_NAV,\n} from \"../actions/action-types\";\n\nconst initialState = {\n  modalType: \"\",\n  modalOpen: false,\n  navOpen: false,\n  error: null,\n  info: null,\n};\n\nexport default function modalReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalOpen: true,\n        modalType: action.payload.modalType,\n        info: action.payload.data,\n        error: null,\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalOpen: false,\n        modalType: \"\",\n        info: null,\n        error: null,\n      };\n    case OPEN_NAV:\n      return {\n        ...state,\n        navOpen: true,\n        error: null,\n      };\n    case CLOSE_NAV:\n      return {\n        ...state,\n        navOpen: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport beerReducer from \"./beerReducer\";\nimport customerReducer from \"./customerReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport modalReducer from \"./modalReducer\";\n\nexport default combineReducers({\n  beers: beerReducer,\n  customers: customerReducer,\n  auth: authReducer,\n  error: errorReducer,\n  modal: modalReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nlet store;\n\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  )\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\n\n\n\nexport default store;\n","import React from \"react\";\nimport \"../css/App.css\";\nimport Container from \"../containers/Container\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomerCard\":\"Customer_CustomerCard__194L9\",\"TitleContainer\":\"Customer_TitleContainer__2I3v_\",\"Completed\":\"Customer_Completed__20Oce\",\"CustomerTitle\":\"Customer_CustomerTitle__3WyTr\",\"ButtonContainer\":\"Customer_ButtonContainer__3EM2k\",\"Span\":\"Customer_Span__Mdy56\",\"CheckIcon\":\"Customer_CheckIcon__3cZZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Search_InputContainer__EV67Y\",\"SearchTitle\":\"Search_SearchTitle__2cVn2\",\"Group\":\"Search_Group__2sFLS\",\"Input\":\"Search_Input__3yxj7\",\"Label\":\"Search_Label__3QGEQ\",\"AddIcon\":\"Search_AddIcon__ThTYn\",\"CustomerContainer\":\"Search_CustomerContainer__1720d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContainer\":\"BeersList_ListContainer__2dnCL\",\"Item\":\"BeersList_Item__1JPF1\",\"NameContainer\":\"BeersList_NameContainer__1I9B8\",\"Avatar\":\"BeersList_Avatar__3s5nj\",\"Completed\":\"BeersList_Completed__1_Co_\",\"FinishedCheckbox\":\"BeersList_FinishedCheckbox__3f4Y1\",\"CheckIcon\":\"BeersList_CheckIcon__2_kNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayContainer\":\"BeerDisplay_DisplayContainer__m4NDd\",\"BeersTitle\":\"BeerDisplay_BeersTitle__1fJIo\",\"ListContainer\":\"BeerDisplay_ListContainer__1pVdd\",\"ListItem\":\"BeerDisplay_ListItem__VcB7F\",\"AddIcon\":\"BeerDisplay_AddIcon__783QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__1JihT\",\"LoginContainer\":\"Login_LoginContainer__1dsSN\",\"Group\":\"Login_Group__3Eheb\",\"Input\":\"Login_Input__1O-uz\",\"Label\":\"Login_Label__8s_y6\",\"ButtonContainer\":\"Login_ButtonContainer__X9VWm\",\"Button\":\"Login_Button__2ZHXe\",\"Back\":\"Login_Back__-LXR0\",\"Error\":\"Login_Error__2T70R\",\"bounce\":\"Login_bounce__2dwmT\",\"bounce-top\":\"Login_bounce-top__cGFQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditButton\":\"Icons_EditButton__1XMCS\",\"DeleteButton\":\"Icons_DeleteButton__H3TUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BgImage\":\"Home_BgImage__HvnmK\",\"Container\":\"Home_Container__2VrjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalBackdrop\":\"Backdrop_ModalBackdrop__3zold\",\"NavBackdrop\":\"Backdrop_NavBackdrop__20L9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"NavBar_Navbar__2rhEp\",\"List\":\"NavBar_List__1JPHj\",\"Link\":\"NavBar_Link__tN1Hz\",\"NewButton\":\"NavBar_NewButton__3sFG3\",\"Logout\":\"NavBar_Logout__3Ro_N\",\"HamburgerContainer\":\"NavBar_HamburgerContainer__28OdJ\",\"HamburgerList\":\"NavBar_HamburgerList__1wXFj\",\"HamburgerItem\":\"NavBar_HamburgerItem__3sXUo\",\"LinkDiv\":\"NavBar_LinkDiv__1NijY\"};"],"sourceRoot":""}